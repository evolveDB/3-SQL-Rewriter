[{"sql": "SELECT DISTINCT d.SKU_ID AS skuId, d.SPU_ID AS spuId, d.VERSION AS version, d.SKU_CODE AS skuCode, d.SKU_NAME AS skuName, d.SKU_IMAGE AS skuImage, d.SKU_ATTR AS skuAttr, d.PRICE AS price, d.PRO_PRICE AS proPrice, d.PRO_DISCOUNT AS proDiscount, d.PRO_PREFERENTIAL AS proPreferential, d.PRO_FEE AS proFee, d.DEPT_CODE AS deptCode, d.CREATE_INFO AS createInfo, d.CREATE_TIME AS createTime, d.CREATE_BY AS createBy, d.UPDATE_INFO AS updateInfo, d.UPDATE_TIME AS updateTime, d.UPDATE_BY AS updateBy, d.REMARK1 AS remark1, d.REMARK2 AS remark2, d.REMARK3 AS remark3, d.REMARK4 AS remark4, d.REMARK5 AS remark5, d.REMARK6 AS remark6, d.REMARK7 AS remark7, d.REMARK8 AS remark8 FROM pro_supplier_contract AS a INNER JOIN pro_supplier_contract_spu AS b ON a.CONTRACT_ID = b.CONTRACT_ID INNER JOIN pro_sku_info_detail AS d ON b.SPU_ID = d.SPU_ID WHERE a.STATE = 1   AND b.STATE = 1        AND a.CONTRACT_ID IN \t\t(  \t'7a01bab3a0494567a93a691a8f1ce731'\t\t,  \t'fc3977155f3143b2848123634093154f'\t\t,  \t'd836f43aacf3481e91f30539fe1545a1'\t\t)   AND d.SPU_ID IN \t\t(  \t'04747b40ae994ac195d71a4c9ae069ee'\t\t,  \t'0919549d112f4a4c9588e20d90d7c2b0'\t\t,  \t'38e7bfef01ad4baf86cf441f986124a7'\t\t,  \t'3df560d24f7f4da1869a5139fb97321a'\t\t,  \t'3fe2c90bd42546138020e5a78fd748b1'\t\t,  \t'56784e61a47e453ca1e69708658ee754'\t\t,  \t'5de2c1235b2044848a7bab241c1e9708'\t\t,  \t'6005c853d5f94902bf7f2ee5cdb50abb'\t\t,  \t'6543837cdf1945e88f3763f6d74fcf28'\t\t,  \t'75e2684bfbe24e8f852a7210403aa873'\t\t,  \t'78ce6bb1bab64e029a5326dbe4d9efe1'\t\t,  \t'80575cd7ce4542fea5eac90121dfc219'\t\t,  \t'88f69c4406b349b48e1b37098c966169'\t\t,  \t'9637933b761349949ed43a57243d7775'\t\t,  \t'9f1c87066e3848758e2bffa403140520'\t\t,  \t'a0f87564528846f8be9e21052bc90554'\t\t,  \t'a8dec0ec1e674a89a0c6a81667bd1785'\t\t,  \t'af521b66717e4c9495a0a85ea0afb818'\t\t,  \t'b5a5d248418640509e431e3261d5243c'\t\t,  \t'b81524aea45943a3ba66c61e683ea206'\t\t,  \t'bdfd373bbabc4cc4b8dde793f88c18bf'\t\t,  \t'bf553a0e94a54d028fed79336e85d15d'\t\t,  \t'c383359bd03341a1a41ec732818fc5c1'\t\t,  \t'cc3cb4f2dbba404b8c6fdc8aa35f75e1'\t\t,  \t'ce1841f9d7b1466e8159f5ab06ba14cc'\t\t,  \t'd57fc90d5b424593af15fb827247cca6'\t\t,  \t'de3552e239b844bda72032a2f45c98ae'\t\t,  \t'e4f666b87eae485983fed13f930b6868'\t\t,  \t'fb31dabb34e441dfae1f9fdb9e6c7ae9'\t\t,  \t'fe98e554f73144609f845baf0f9e1edb'\t\t,  \t'005d6b35adc9413da83be8dc9d8d4001'\t\t,  \t'005fa2ba0f1d4e048d39e1aa3236ab1e'\t\t,  \t'0091c7d91ca94e14824632fe45f6e040'\t\t,  \t'00cc81df81fa47d490deb8155dc59fac'\t\t,  \t'00faa92bb265438d8b60f8e09eca532a'\t\t,  \t'033b13391a9c4025b6ebb4b8fb9d0f46'\t\t,  \t'03f95301f4684387998f918f4e674b9a'\t\t,  \t'0525c37c830e41839db55ed28e52711e'\t\t,  \t'05534f415b4d4b4fb61beefeeadcfbf3'\t\t,  \t'065680a5f20d4b5093101fbd26edad29'\t\t,  \t'06608524e4724a9eaf4cea0ea172c224'\t\t,  \t'066dc2b6b63148f1aa41de2bc3860e0d'\t\t,  \t'0688bd5678e3416584c48796077c1edd'\t\t,  \t'0701cba94aba4598a77adb671fec76c1'\t\t,  \t'0711d969526741c9b3dc306f2cf5e843'\t\t,  \t'07b0fe5e131e4535a8f453a71305b1e6'\t\t,  \t'0807e491dbec43f8bc13b24906d85f13'\t\t,  \t'08423da16486442684c2fe4a40765a1a'\t\t,  \t'0850bdaf59a7435aa28b5906569496b2'\t\t,  \t'0862efe82503468ba6e0e6294c3b96de'\t\t,  \t'08728c2e92314ac0bd88f97a29cd36d8'\t\t,  \t'0a94cd17e5394959afd0187e899c2310'\t\t,  \t'0b0aee7bf3444d2c8510b6552e210306'\t\t,  \t'0b8e5f90481a4a1f814de1d143ae193e'\t\t,  \t'0cb3cef68369467cb20fff1885d0b92d'\t\t,  \t'0db7b98103394aefaabb312d548156b4'\t\t,  \t'0db8a9f4fcf74e72aa0f64b5611409bb'\t\t,  \t'0de9ede64a274e0da153a48b2deb2e71'\t\t,  \t'0df3549ef26a4528ad23ecb1a4fa3732'\t\t,  \t'0fa8107c649f432bb0fa79ccbbe7f3a0'\t\t,  \t'10de6519474d421fb73b077a56e7e9b8'\t\t,  \t'10ec752b57964b6cb0d453d215a1f9e1'\t\t,  \t'12ab6b9fa4d24fceb9708218c9570810'\t\t,  \t'12df5d65195944d3aa42647df310c0f5'\t\t,  \t'135f0698db324c0490e0701bc26ecde1'\t\t,  \t'1444995d24f847bc803dc2c482fc2ef3'\t\t,  \t'14964074aa9b49d4bb7125b809d90f9d'\t\t,  \t'15f47edcef6d4b59965de5d9570ac1da'\t\t,  \t'16ade9a4fa2e4127aa85c4e304229114'\t\t,  \t'16cff956e1dd4c8a8f6ee646b3d81aa8'\t\t,  \t'173fb211003746c1a96fbd33c1fedd94'\t\t,  \t'1877905fabbb42ce81caf0b558f74a81'\t\t,  \t'19a44a0adfa542cfa96e41a980c2a20a'\t\t,  \t'19c4b6d73bbf4c2ebf700e8962c6bc21'\t\t,  \t'1a8f68e559444d4f83be5e3f4b204ccd'\t\t,  \t'1b9f76a874a3499d8d17a26ed4facd14'\t\t,  \t'1babdcbbe0f8483fafa0304bf6fb6eee'\t\t,  \t'1c7a852eaa6346af90936cfd030e3a6a'\t\t,  \t'1d06476a618847c4a08aceac9179801c'\t\t,  \t'1d29224feb2947cb95667585afcdba0e'\t\t,  \t'1ee449fbf56f4a7083290ac8f896f9a2'\t\t,  \t'1f0a07dbdc4e4adab47d9376013b18a7'\t\t,  \t'1fe8586d804f4411b138afeb64a53730'\t\t,  \t'1fe95dc98caf4ea4ba96edc416d32f9f'\t\t,  \t'2014d42433204925b54c3e457d707814'\t\t,  \t'2094e0208f234657b7c284d694dd8ddf'\t\t,  \t'20cf33eef74a4f62911380022487d5aa'\t\t,  \t'215e61f9c45643fbb28ce3af0720a34f'\t\t,  \t'21fb1d2424fb476d81909685497d7ce3'\t\t,  \t'222b7a6277a64144854cab2fb1150a16'\t\t,  \t'228602c83c8f405bbd20c3ee34649d34'\t\t,  \t'229bcadb5fe747179d0e3ca002a1275b'\t\t,  \t'235c083d2a8d40678e2e3a4b2ed86cc4'\t\t,  \t'2395e41278024b43a6e39cdb45e136bb'\t\t,  \t'248e764e714146c09075ddf17bda4e0e'\t\t,  \t'2765a567816b4ca29889f4aaee6a2f0a'\t\t,  \t'27a1717c32774dffb5017cd263804e05'\t\t,  \t'286bd6e29fec4c5aa10c9d50d84c1b48'\t\t,  \t'28f6751f146f44549d57a2d8bcbad0fc'\t\t,  \t'294712683fb04d4183ee388f47939bd0'\t\t,  \t'2a164a43b07f47c481b64a1b03c94b50'\t\t,  \t'2a3273a85aa149dc8d727c78dfac6bab'\t\t,  \t'2a3457d9cbf84e52bfffcca800b35211'\t\t,  \t'2adc3becb6354f9f8ad1b3bcddeadaa0'\t\t,  \t'2f0fd159cc1c476fa5311f5d73e249fe'\t\t,  \t'2f442f139d974e88bdd96782e348bf3b'\t\t,  \t'2f5d965a17b34e23baa5c6bd2448197b'\t\t,  \t'30eb160c183f4a1fad29c365b3cdc7da'\t\t,  \t'3137addb4a0c4d07aca0e99445505f0a'\t\t,  \t'313ce18d65fe41278cda09fdf2f42355'\t\t,  \t'335eec5faf9743e2bf7887a0c39f7c08'\t\t,  \t'33921c377ada48efae7efb5b719c2ad6'\t\t,  \t'33ad47ad3858454cbb17b33da7f40f5f'\t\t,  \t'3447cac5b41344eba6c2b07a0afcf1c9'\t\t,  \t'34cbf863d9684617b2bc67d2edd5638d'\t\t,  \t'35d214354e55444c941bb1f63afe61b0'\t\t,  \t'3606e1d5ec45472cbfe5ba0c3c0ea1e1'\t\t,  \t'362682f5c22041da91c5247f3b249715'\t\t,  \t'3796dffb199446ffa8afd40d8aa02a26'\t\t,  \t'37e101f0b8d94b469d74ed0846e76d33'\t\t,  \t'39ab5235427547a983a79a8ef1af5763'\t\t,  \t'39cbd2ac6fae4ab39c12cb08f575fcad'\t\t,  \t'3a97095f71bd45d79988d80d3ffc56a7'\t\t,  \t'3ca87bac38e74ca68765aac3131bfb25'\t\t,  \t'3cb2e4f2e36f441e968284bb5418077e'\t\t,  \t'3cd3fd2fa1bf46a6a81f412c7b16f9c3'\t\t,  \t'3cf0851830fb4350b7968a4d5db4078a'\t\t,  \t'3d5c26f442b74432a46df2f4c75d5b3b'\t\t,  \t'3d6e74677c1244bba3ad8220e331a566'\t\t,  \t'3dc1e1e3c2204e34a840d516ed9368e3'\t\t,  \t'3e03b743fbc14807863341f088183de2'\t\t,  \t'3e759dd443c34ceea1d92a77378c242e'\t\t,  \t'3e825d25bfd94c9a9db3ca9cf28d3188'\t\t,  \t'3f0e93b6e4ee4d3485521d34577d4834'\t\t,  \t'3f1c17b4d1bb46d79bb347495fd538a0'\t\t,  \t'3f3427b17be64ffba10d450dfa3bcfd8'\t\t,  \t'3f5204b9f0d64b0daa09fb552ec0987b'\t\t,  \t'3fd18b69c84c4595b63c7da985f44096'\t\t,  \t'3ffdbfac9c7b4a93af102fed8deba63c'\t\t,  \t'4065e313e159451596c2fde413a2177f'\t\t,  \t'4135ecfee29548aa9bc8009695f46cb5'\t\t,  \t'417a0d4deb4c4951970aa390f9a74fc2'\t\t,  \t'42259b335b4c4c69bb5989cfa1b4b446'\t\t,  \t'42bdde17e3b046148c0b0a55124673e2'\t\t,  \t'42eb03e428694fdf8bbc75beeaa6ad59'\t\t,  \t'42f89dc554e945dea5244a05f99e885d'\t\t,  \t'4375d8e6d6de48f38cd80043d4e55ca8'\t\t,  \t'43e8ff26503348f89ca0952ca07456fa'\t\t,  \t'43f8d2bee9144ea18370088f9857a49f'\t\t,  \t'44a631c914d8408a9df949d14acfcb71'\t\t,  \t'44bacd5ae9cc41d8a2ac39fe09220530'\t\t,  \t'44f481f842764fd09796993cea30a8c8'\t\t,  \t'458c8e5de491437f9fed8dcbe223bdbe'\t\t,  \t'45d1e4e8bfe04863b6e0760c4748bcd3'\t\t,  \t'470e8b8022644b4b8f83a25488936a40'\t\t,  \t'47578b7a57b243268b520f88f8292a38'\t\t,  \t'48be8db456804ab5b403aee89a8ac06f'\t\t,  \t'48f48fcc294541a193e84cb32c2ba61c'\t\t,  \t'49d772f9dcec47f198ecce68c1839dbf'\t\t,  \t'4a32c2e194f540cb9848c690915599c9'\t\t,  \t'4a4080ed0f524636903685a7f00f7ab6'\t\t,  \t'4a4c5371037c4ebb953ae3ffc96b7b8e'\t\t,  \t'4aeebeb7cd044c85bd0fece3fce34bfb'\t\t,  \t'4af97ecd851a4f30bf10407228a10b34'\t\t,  \t'4c0e1027976843e4a4301c49cf1fac95'\t\t,  \t'4c731a78f8e94722a729ee95cb12872c'\t\t,  \t'4c82c5fe71c7400f822a8f43cfb0fd98'\t\t,  \t'4cd32392ca324ea88ea79ade4f5132dc'\t\t,  \t'4d1c0f89bf9b4d5f8fd7a38e96c75751'\t\t,  \t'4d64e1b045944ed69b63908fbfe93635'\t\t,  \t'4dc2cc7327fb4f6e903f104e4518c98b'\t\t,  \t'4e59820c7afd46bfb558fc0549275abc'\t\t,  \t'4edd5c3994774abeb46f11d33b617906'\t\t,  \t'4f1175cbcd2c411a9a2dcefffb53c916'\t\t,  \t'4f44eec7881844f79134f6254dbf4bc6'\t\t,  \t'4fed7c4b61ff43eb9ffed0048c4c9fc3'\t\t,  \t'5054f9aea98647a0a6b438655e7d21d2'\t\t,  \t'50aef88c92484b2580317ed8148ab370'\t\t,  \t'50efb45f8e88405db17bde4b57cdf6f7'\t\t,  \t'5108208cdef64f518380963f279b81c5'\t\t,  \t'516ab5ce05994675a43f3b94fcbd93c9'\t\t,  \t'51dea27d64e24acfb55d50170646dd29'\t\t,  \t'5208d10403b44192874694101aadf735'\t\t,  \t'5271a6b2459f437b8bfce31aae1461ee'\t\t,  \t'5377bd113f7f44e5a154d37081dda942'\t\t,  \t'540c4a38fcca45e3a3f1401efa05ada9'\t\t,  \t'5438a26412374ef2832ab8b21db42013'\t\t,  \t'57144d4439244b3ea27e9564beb47537'\t\t,  \t'5769da0bea2f4fc0a128e313f056d0bf'\t\t,  \t'589ab446b44949b78958aa63cc5b36e9'\t\t,  \t'597358b837584fae91f8e286933beb20'\t\t,  \t'59af202fac8e4c22b8321bf39c51f2fc'\t\t,  \t'5a0b43f488244246bed03b75d67353f4'\t\t,  \t'5a1722c0bdd94f2eae9fe3239a1ecf51'\t\t,  \t'5a5b59cd1d3f464aa5bc9d0b5c2678b5'\t\t,  \t'5d99894d25a342358a320b133617a26f'\t\t,  \t'5e0a88d007ec4dca945a33c4f31fbe0a'\t\t,  \t'5e4b68e4b13e424e93024253fc80d4b7'\t\t,  \t'5e56815e900c4081bdc1d20d1ac041d2'\t\t,  \t'5e573649828743c288d620a9f8df1fb4'\t\t,  \t'5ea2155c187a440ebcf8b1b8fd58b6f9'\t\t,  \t'5ec0021dc5e043339057536b95fa9a59'\t\t,  \t'5ec9d635dd194382b3ec8478b2cb94f4'\t\t,  \t'5f04eaa25ab54d67899f801bc3477595'\t\t,  \t'5f4caaa0ec28437599a2552461cb2abf'\t\t,  \t'5ff76d7883504818a63352d590cdc06b'\t\t,  \t'60ad71259bb1450690fc094fd09cf118'\t\t,  \t'614b4a77264c4da182c4eb9aac9dc2cc'\t\t,  \t'62af9a29bdb64594988ab5363c0b8dbd'\t\t,  \t'62d55ac01f68478cb7ff0db5fc9931ad'\t\t,  \t'638c47f4217448959b3abea0604c1e36'\t\t,  \t'6412087d9a8d4e699aca26d831b6a117'\t\t,  \t'641a9409453a48e79446f66b2c693e36'\t\t,  \t'65cc812ba3f7483bbb29ced275ee28c0'\t\t,  \t'66104c7cfdb84babbbb05dcbb62816ff'\t\t,  \t'66ba1631a1334d139572e9d3ec6aebed'\t\t,  \t'66ce0d47e4af40798750fdecc2707077'\t\t,  \t'66ea83e65ede4ebe9986926ff7bab165'\t\t,  \t'67040e6ff0f54b7fbd4ca5987925a754'\t\t,  \t'677ffbd121954d6dbc7a1b4af0ce2e48'\t\t,  \t'687f4986b35047e8a1a53e864ed9fb51'\t\t,  \t'69232f68737c4abcabd96bbfd18ad0ba'\t\t,  \t'6a4c7dc647754445884b861b3a1e083a'\t\t,  \t'6a5651b1d4f144c49a17b58b2f07ee41'\t\t,  \t'6ae8ca338d37447491cd5810d6794b97'\t\t,  \t'6bf5a91e1f364da0b932476323eb3f99'\t\t,  \t'6c52583f788f494ca2a6d702040a7f8b'\t\t,  \t'6c5b284ca6d94a8f852317c485a6087c'\t\t,  \t'6c6202ccdb6e4806ac384bf73c048dfa'\t\t,  \t'6cf7a3db481c43f78870b8ba01ca65d5'\t\t,  \t'6d1456cd862d4848ac54c123e953cd0d'\t\t,  \t'6d70487872fc40a9bde0efccbc40e82c'\t\t,  \t'6e2057b2b6fd49caba3f6d7a7accf694'\t\t,  \t'6e2accaa36154b4b90afe2c07271039d'\t\t,  \t'6ee4f8495a1442be907c70da3ea7336a'\t\t,  \t'6f38bc8ca384497bb98f7b7995c017b5'\t\t,  \t'6f923e4af1d7449caaad1805a34114e3'\t\t,  \t'6fd12f7ba87b4474aff79180ea0e433b'\t\t,  \t'70835b02e86149d98c752e61dd469aea'\t\t,  \t'71dbcfae93b44bcab24ca37e41b5fc1e'\t\t,  \t'723a5402361640bf8c1385f5be05c38b'\t\t,  \t'72c4ffc6d4a440a09d047d5fa122930d'\t\t,  \t'72c54bc1f30f4207805084d175d75636'\t\t,  \t'72e9b7b96c65488fb0fa97eb283dc69a'\t\t,  \t'73b1ee2e8c9c4e16922ffd84d25c5cda'\t\t,  \t'744950e1c15844da8411965b98c591ec'\t\t,  \t'75897efd84c844a69a45bbb419bfaccd'\t\t,  \t'76d5ba4199184c9cb8b397e4f858c8f1'\t\t,  \t'76fa2b8d700a459990740907a947a238'\t\t,  \t'771866fa84594a118f50ccaf60f2cf56'\t\t,  \t'7799f5cdc02948e1806db4b50b549060'\t\t,  \t'7819e29f4ac24b2c83e7edd514d30524'\t\t,  \t'78cc0fccdc4d41a7a3272565fc7b3572'\t\t,  \t'79259ffb35174663a471e82dff63f5cc'\t\t,  \t'794149c66ac2403580f5c5fdf4b790ad'\t\t,  \t'79718bd828394519be4760ddfffa2aaa'\t\t,  \t'79a94766d53c438dbd105dc7d7750225'\t\t,  \t'7ad8577948e44f7894cd5f7d619a8b6e'\t\t,  \t'7adfec033a164def983675019592cba6'\t\t,  \t'7dcbe0ee6fab4902b79740d357d66661'\t\t,  \t'7e1373c597ed415f8cd8d98c38ccfc0d'\t\t,  \t'7ea7a65360ea40f9a0d1746e56a215ad'\t\t,  \t'808bc35088bc48f7b41c0dae08f17b49'\t\t,  \t'80a7aa1ff77d45a18b2da06128f2bcc2'\t\t,  \t'80f45fb8737f4ff4b1e8f4876d6b8acb'\t\t,  \t'816de2e53e46401189c5b4940720dab4'\t\t,  \t'8236b474be014fad9378f69a0af83afd'\t\t,  \t'823924e7eb4849949d2123e703cac343'\t\t,  \t'8348defbedd5445091881af4b22f26bb'\t\t,  \t'847effd848a14a489792e41b0742a9dc'\t\t,  \t'84d2d3b58a1d410e9007a412552ea80f'\t\t,  \t'87bbe86a5ee7440fb10f5849a4783c59'\t\t,  \t'87c5b6ad4ce44b09b5f890f71d5ffd19'\t\t,  \t'884875be698e479ca039643d2d26ac8a'\t\t,  \t'888004d0bba0475d9ce0468d03adef89'\t\t,  \t'88f16365c22b471b9549f4fbf5e28c23'\t\t,  \t'8a75bc6f97784046bc9cb18af55e53e7'\t\t,  \t'8aaf0d8010d64cb6a3e8b4e64cf44c04'\t\t,  \t'8b4d42d911ca463b8db5907b6dfc18db'\t\t,  \t'8b8ed47ec085404cbef71f8248768ca9'\t\t,  \t'8beff31a1ed14fc0bb4031eac87cd524'\t\t,  \t'8c17264e1e1841759ef1b92a48fc55c6'\t\t,  \t'8c4594d31de54d3ebf940c9608d1b56f'\t\t,  \t'8c73b1a41cff4b189e6b857b9de6e94a'\t\t,  \t'8ca8409338004d8a83ffae431c81c7ae'\t\t,  \t'8cbee0ec05e046aab217faf0c90b8ed8'\t\t,  \t'8d2a82f758e140a98cd9b352933cd786'\t\t,  \t'8d69519ce6354c2cb47df95204ab8159'\t\t,  \t'8d72212910e34d6791bb05f0414fe023'\t\t,  \t'8dea337365fa40649340b28d421e2d29'\t\t,  \t'8e8c978229ee4cdb9ab18f82bf0704b8'\t\t,  \t'8eba522e513247be8b5bdde09c494319'\t\t,  \t'8ed209f7860248b1a7565f0d8301a1ec'\t\t,  \t'8f48f70373054e43996aac4ab93b53d3'\t\t,  \t'8f884a48f6084877a0692006c0e91049'\t\t,  \t'8f9b0c11a6524faf87014551d9532f3e'\t\t,  \t'901c0c1d47f54864b65e83d5ab4d8df3'\t\t,  \t'90a49e7b1257491db8605ca3f12dad62'\t\t,  \t'912eb5598331430d9f118b0f956d6d91'\t\t,  \t'914f601a33fc40e2bd1524973ae9f8bd'\t\t,  \t'915c7dd11c5e4db7a09989a9097327f2'\t\t,  \t'92013dd19e9a4ad6a264d4f60dcd8ae8'\t\t,  \t'93084c9474fc4d318dcc1410f3436f94'\t\t,  \t'9462eb6fe8fe4c4ea335750115b21fc1'\t\t,  \t'94a639b657ad470abe10eec179e84cad'\t\t,  \t'952b289e44c84a93b3ccf7df89f53e9c'\t\t,  \t'95eca78528de46cdac6a4e85ca89a6d0'\t\t,  \t'9676e5eda8424a08ba3e70f4f5765760'\t\t,  \t'978279be2e154d15bf27bc0d8e836d99'\t\t,  \t'9788b8d7c2b443849be4acd0221a797f'\t\t,  \t'978cd40ac3cd4ed3951838c8bdc33b7c'\t\t,  \t'97c7e68c6fd94499bbe3542c88614e8f'\t\t,  \t'97fcbb59ab2243af83d22162e83db910'\t\t,  \t'98adc354f98a4b83859782d4f5472657'\t\t,  \t'990891a8ebd245748f95251ba0e055d5'\t\t,  \t'991b128c63b64cc9889e2466e5bb8967'\t\t,  \t'996fea42f83c41978b5c927c70fd542e'\t\t,  \t'998493025e2b4f0bbc7ceb3ff58767eb'\t\t,  \t'9a1e1384e36d45e88e90f3f2af2b94a8'\t\t,  \t'9a804e668983434eab80b4c4a4659437'\t\t,  \t'9aa0f7a5fe1f45709ebdb85eb22f702b'\t\t,  \t'9aeb02fdb5b949b4bc40c540581dc81b'\t\t,  \t'9c2be6cbde4d4b5081c9b40146613971'\t\t,  \t'9c58ee92bd4d4acc8ec771b2c2074503'\t\t,  \t'9d8c5dc9966149319a7d63b8064d9e24'\t\t,  \t'9edebbedbf414e86b0681b5f0717dd56'\t\t,  \t'9f07b081e74249be8c89b0175156648a'\t\t,  \t'9f29f7c53cda4a688431030b8795dbd5'\t\t,  \t'9f9c800a73ae4d0ba3b378879fa5f8cb'\t\t,  \t'a091110ddcd24e06941be0c0616cb494'\t\t,  \t'a165f9a1acdb40da88f298f5186cfff7'\t\t,  \t'a16ba644e45a4118b32981ff4c6d00e2'\t\t,  \t'a197eb9156384ab28d5ce8a553467396'\t\t,  \t'a24339e2c9584e609424d705f22a3b16'\t\t,  \t'a28b65a48d6a4a009ec20b7c407a9ac0'\t\t,  \t'a2e25da01b2d4960b0984c1254dc39a8'\t\t,  \t'a3264b1d3db04d32b19fd1909eef1919'\t\t,  \t'a39fb9c9f0ad40549c963c7cbc083e56'\t\t,  \t'a49e4377c149444990c1671d5797aac6'\t\t,  \t'a4d7cbbfc9f54a52a87c43990ebf9f87'\t\t,  \t'a4de40428cae4c2cbcbfecc4dd2a6edf'\t\t,  \t'a592edeeed0342258afab4586978b51f'\t\t,  \t'a5c8a8ee308c4708b9aeacb9642b5b11'\t\t,  \t'a5dcea826f8143b7a01e3271c696cc67'\t\t,  \t'a5f1451b76a34737834cd5d336c3558a'\t\t,  \t'a5f6b8b90b964d9b820b50595e0a3048'\t\t,  \t'a612611d403543e1972438decd310a2f'\t\t,  \t'a64d441f60254144a7c48e60018ceced'\t\t,  \t'a68cdc9196944cb78c19a58368352d1e'\t\t,  \t'a83ba5e3285a472590cfa059edd6b2d9'\t\t,  \t'a95740dd2518415581c6f0f93a41cde8'\t\t,  \t'a96ee5a4b55149819b57aa0e8781afc1'\t\t,  \t'a97e31768d6b42739aae022300291aab'\t\t,  \t'a9c0885e7227467c928a9d68bc675d99'\t\t,  \t'a9e0590b885d4a1fa3eca755d4cb4988'\t\t,  \t'aa04a2f3b52c47e8bc3391fd9b9883a1'\t\t,  \t'aaf192c23a3f49d4928164aa3142091f'\t\t,  \t'ab2aa74d675042f68087425ff6faf2dc'\t\t,  \t'ab822c2f45614755bf532f88d718a3ac'\t\t,  \t'ad3a5ad802fe4ba095ee48b78f971588'\t\t,  \t'ad43d382b80d4c58ba297b787093d2e7'\t\t,  \t'ad6ca71bdaa64733b34c6b7c76308fb1'\t\t,  \t'ae81450ff5764a7b884d0b75f67ff26c'\t\t,  \t'aeb77573a75f44f18c346971aa42caaa'\t\t,  \t'aee40181266c4c2d9a9f1be8a4b03432'\t\t,  \t'af3451a3eaf84575a92fa5e63e6d8453'\t\t,  \t'afdc77e74e4b490b865b4854f538f48e'\t\t,  \t'b0946329bc2042a2b72c42d9faeea0ef'\t\t,  \t'b0974f23b6654f81ae3d7317c3c5e5ba'\t\t,  \t'b1973f15cdc343cd8ce4f5b55bcf478f'\t\t,  \t'b1d4ea3739194f63b3c13cf5cd1fab05'\t\t,  \t'b27399c3677a4293ac61ca7e8da21f78'\t\t,  \t'b2bade45584741b4b85d9593aefa17e4'\t\t,  \t'b2bc38eb6afb45bf9ec15e56640c3d40'\t\t,  \t'b2fd9942224e407fbfbc5c9992c07d49'\t\t,  \t'b3aa5c4ef62749e5ab0ed82e7f990df0'\t\t,  \t'b3e2454cf3304033adac47608bff5cd0'\t\t,  \t'b44c1728b4c640c5beadb7ac6a6fa46f'\t\t,  \t'b46d0d5eb54641b29312452f969049d6'\t\t,  \t'b47b597394d8485eab12742493b2643e'\t\t,  \t'b48c787acc6b4fecbc31d09c9fd87e3e'\t\t,  \t'b48e0eab65b94a14910f3bed5fac0afe'\t\t,  \t'b5916b1e48e84669a33f24d2441508dd'\t\t,  \t'b59e4ac6214e48af9c7af431d78cb83c'\t\t,  \t'b5b9b41b244f42159f3ed3450fb4045a'\t\t,  \t'b5e515c849874642adc39ea5dd1995b2'\t\t,  \t'b69d3fa048b64969b68a1728d069fa19'\t\t,  \t'b6fdbf4f862941a89d0e508fc4e272be'\t\t,  \t'b71af5e68be84ba9b69ea05210476a7c'\t\t,  \t'b75b24741a93458fad200fb00c25d967'\t\t,  \t'b76c0b4a22fa40ad9b6900248156246b'\t\t,  \t'b7bbb2db98b94360866d51ece8769e75'\t\t,  \t'b8507c29cf574175a39cd4facbc0a240'\t\t,  \t'b90e96646ee94efeacaeb5150315de91'\t\t,  \t'b9691d37786747c888bb24f925de4e51'\t\t,  \t'b97e5349e31243d1a56487b3a36c8942'\t\t,  \t'ba59ec65ff6b41ae85c2e7238db74b3f'\t\t,  \t'bb9dc644b8fc4fb0bf6a010d04c6fd79'\t\t,  \t'bbe0cc5eb66d4a05b2bdf3ea01715340'\t\t,  \t'bd7ce9dae40946588096add14e6a71a2'\t\t,  \t'bdec6af450724d8d8ca3a3bc536c09f0'\t\t,  \t'bf163703c3b54d53b5198f1c75734a08'\t\t,  \t'bf288def5ec04493b3ea5410c8aaf93e'\t\t,  \t'bf5de965dbb44ccb8c60ff60479810bc'\t\t,  \t'bf9da3e8078b46c4aa5e32bfa92c983f'\t\t,  \t'bfda52539b2d4b0093b208b174cce5c4'\t\t,  \t'bffc1a5fc8264805a0d898e48473ea37'\t\t,  \t'c07853e79adf4eb1adf7efc07728aad4'\t\t,  \t'c0a8bf62de33446ba26308b7f7c4eb65'\t\t,  \t'c0b1634305e4420987bf0faeca512a61'\t\t,  \t'c28cc6a98de0453e9d559bae94dc52de'\t\t,  \t'c2a67347257d4889b825a014e1b4779f'\t\t,  \t'c46514b2d7aa452aadea0e478aa61152'\t\t,  \t'c49219574b5948729494d49e9d276c4a'\t\t,  \t'c4f8e58be695427d9cd66ea9816a7069'\t\t,  \t'c5a119cfe0a64812b8bc9860b8e1e489'\t\t,  \t'c60bcd96a40f4119bb6fc8daa63deffe'\t\t,  \t'c64eabeb1ebf4b98a63af43b3ce93f62'\t\t,  \t'c6e8b9b152494e8ba4e2fcf2d161df72'\t\t,  \t'c7996a039ceb4925818071712474d346'\t\t,  \t'c7c1a33dcab94c8ab77b61428b5aef0a'\t\t,  \t'c82d7efdf7e14353b97c9ab94b318e3e'\t\t,  \t'c990777a5e7e47989d0ec791cfefd112'\t\t,  \t'ca81b44997394e809690c17fd70c72cb'\t\t,  \t'ca8e019b71b34ce49fa1cc61d6eb73f7'\t\t,  \t'caa9dd455d4c40d69370fce397a0d4b0'\t\t,  \t'cacbe0c1a6d04212bf5311033c8b4bfc'\t\t,  \t'cb0c9fe24cb844788d1d02380789353d'\t\t,  \t'cb7d1c8fee834a7c90464d2650aeebd2'\t\t,  \t'cbebc59b38be4b1bb45ea4da9d0db7f0'\t\t,  \t'cc3290c79f314a069e8ffd562eb4fe10'\t\t,  \t'cc588985061641b9b1118239e1272478'\t\t,  \t'cdc740a4702344bc9efdcc2eb01e1619'\t\t,  \t'ce00917a7fe64ead8bc7392333e0ebc0'\t\t,  \t'ce25291695604334b0a9e3efd2a237c8'\t\t,  \t'ce42c45979fb427f980ea933b073538d'\t\t,  \t'ce80c6f7d16140d19c491f658ae914ad'\t\t,  \t'ceaf0969ed3d48b1b1fad2039d4944e7'\t\t,  \t'cf1125687f984879bfe2897c00e07b7e'\t\t,  \t'cf20b2859cd8481d81b8bf04737cc706'\t\t,  \t'cf4f903fef2e46f8903cae21259d4fd1'\t\t,  \t'cfe444ae44ce40b89ad4adafc9b5382b'\t\t,  \t'd008405c82864fa2ac45c4e55ebb264f'\t\t,  \t'd0132c10dd564cc2a88725e0a7e8f62f'\t\t,  \t'd02787f0d6604633aabf4ec9e8912df8'\t\t,  \t'd052f368f84d4d1fa663da2c9e91e71b'\t\t,  \t'd0a1619e9eee4cd5a29f7d4611d73b78'\t\t,  \t'd0ed748d52f14d33aea110ae996ba33e'\t\t,  \t'd10bfc94131444c19fdc98f93c5b0174'\t\t,  \t'd17b1b4ab2da421eb716e10ecd75ea07'\t\t,  \t'd1d50ff163764782a284878d06a628fa'\t\t,  \t'd266dede0bbe4bf396affa4eec978b5f'\t\t,  \t'd2725b1b2dec4e959c02e65e4ff54719'\t\t,  \t'd30a335020684f02a0f3ea48fd5855df'\t\t,  \t'd3797e03beab48779509f2f60115e622'\t\t,  \t'd4a64de004c449b28bf4a3cdc5efbc50'\t\t,  \t'd60732a4721b416e8c30ca1034bd402a'\t\t,  \t'd71f4739efb0497293d646b8aaeab8e7'\t\t,  \t'd80c36a920fe48adac9a3740b2ce8438'\t\t,  \t'd87ade3abf2f4169a88de112e21239da'\t\t,  \t'd87c50598e6544799010c059e11b2ffe'\t\t,  \t'd8bc0e7155364449a48d25857085c0e9'\t\t,  \t'd95bbfb5b855444ba37dcb7aed5862dc'\t\t,  \t'dc5ffa53576f426c9fc0f87585246c12'\t\t,  \t'dd5c17468d6a48a3b895b5a5bbcedf6e'\t\t,  \t'de165962b85e484b8254dbc5c6bcddd5'\t\t,  \t'df5c915a34e845ed85479e2fe36d8a8b'\t\t,  \t'df9296d0d5014ef5b2e081df92808ba1'\t\t,  \t'df998a3bc0f04cb38c3e891a620c9c9c'\t\t,  \t'e079627a34f94fa8b050add964ba20b0'\t\t,  \t'e092f746b18d4ab0be53c231d0779b31'\t\t,  \t'e0ccd396c13b413a82f7b8ee53378cd1'\t\t,  \t'e17b513bb7fb4ee4b161a015a9ac34b5'\t\t,  \t'e1f1af2de9f64cfd8cf5665618dcb83b'\t\t,  \t'e2516e70faf546bc839a944972be6187'\t\t,  \t'e2d0fff35e4340c0895fd2354472753d'\t\t,  \t'e35d3ef0f2ad4286b424253cd1521bc3'\t\t,  \t'e37a054c53904e61bdf94e541c4ee13a'\t\t,  \t'e42c9947a12e46f2beea7f86c2e24351'\t\t,  \t'e5558ab548fb4ed5a4caed0c7af24139'\t\t,  \t'e5883a219ebf4105b12ea7a7f0b38c61'\t\t,  \t'e59c2d21b99346c7b0547bd097c61e99'\t\t,  \t'e6437107650d4f0ea1b06523d962776a'\t\t,  \t'e690cc84c6264b5382ebd3d1f71d8f1c'\t\t,  \t'e6a0b0ae2e4f41d49bd65b106a3378e2'\t\t,  \t'e7a5524e65c74b3684e6f062e39e648f'\t\t,  \t'e97cb4c1e2bc4492be40b8713551d136'\t\t,  \t'ea2b58d531224cd18b81cf5c9ccd4c02'\t\t,  \t'ea8f3fe3fef6447ab0f55283bad76783'\t\t,  \t'eaa3bfd746a84667adc9828586d18c14'\t\t,  \t'eac28bbfd14a418d83656f8c67335215'\t\t,  \t'eaf5b493d43944db92ee6fd1977537da'\t\t,  \t'eb0f2760a4c24a7e9bce0fb31d0d9e61'\t\t,  \t'eb347e40866d42799f8f405fed808a43'\t\t,  \t'eb5ef97ec55e42cb9e5087a6e47871c2'\t\t,  \t'ebecec0ab14f409faaf882aa60bd9961'\t\t,  \t'ec67ae4e288b42339f8ce60473a004e5'\t\t,  \t'eca4a7aec4454c549d09d6fe5ee39563'\t\t,  \t'eca8a82b744540a0b09d59ff826d1fe2'\t\t,  \t'ed1f75e653cd4a99899fedf23f376416'\t\t,  \t'eeb0b1f256e04c8ab20f67a5946f41d6'\t\t,  \t'eeb14d800654442e948e600b10024486'\t\t,  \t'eee09cef0e46436388b0738e7a2ec8b9'\t\t,  \t'ef458dabecd7417c8eb79af6e9110b29'\t\t,  \t'ef989cf71c8b44d2916d73b7a6a60f98'\t\t,  \t'efba4a2dd698462caa23fba08ca2d9d0'\t\t,  \t'efbf1aaf40f947049a5b0ebda5057b0d'\t\t,  \t'efd2419b461e45f8bf5eb4a0dd915f07'\t\t,  \t'eff77cef4012434ea0619280c8965a0c'\t\t,  \t'f030a4ac3bfb43c297080a58197e424a'\t\t,  \t'f05e55f4922a43b9b1054d073c160628'\t\t,  \t'f0794dc4fcfb4f1b8b0f83073e60acb6'\t\t,  \t'f0b6c577f3b54b4f93ee0a50422c9ce2'\t\t,  \t'f207d7741d37406389c2aa0c0ba40938'\t\t,  \t'f244346f8ba44b7ebaf91894d1c64212'\t\t,  \t'f25aeee5c6fc4933846774573ec318fe'\t\t,  \t'f26306fbc9b042439a2bc29dd96c277b'\t\t,  \t'f26c9bf401f941bba8ae7de393620e57'\t\t,  \t'f3648a8b9b4544ff90ba3bc9031e8813'\t\t,  \t'f3ccc616929a40229dcb94e62958604e'\t\t,  \t'f3db912afac14ad089883155f9194f3b'\t\t,  \t'f489c8447a6444d1aba6a596fdc44108'\t\t,  \t'f4c9d2b7c813416380018b294f09bce4'\t\t,  \t'f4eca417af0f4efd8cf6a67b2475819a'\t\t,  \t'f50a107819b5454787361b39c2efac1b'\t\t,  \t'f5149b96a7b14f328b07d57a7a07dfc6'\t\t,  \t'f5da6a5d1e00422a9e5855d86077caea'\t\t,  \t'f67cb6fb492f4f97af6e384b47361de5'\t\t,  \t'f6d952d252c344f59ae09779f01b196b'\t\t,  \t'f78d6c7d0cf84a12a455b974f6d5913b'\t\t,  \t'f853a44012874fc0a48c59d2b247938e'\t\t,  \t'f9338e6a17f14500b05e99e32c7855dd'\t\t,  \t'f990ff92d5a14b24af9c40d59e4ae468'\t\t,  \t'f9d313d27dee479cb6a5d2341697e8f6'\t\t,  \t'fa9b84f89f8f421f966aa4f929e932f2'\t\t,  \t'fb4ee90dfd014fbaaac2069cd5230534'\t\t,  \t'fb947c16b3b24a6db1ed0726f195e212'\t\t,  \t'fbe83b660372443c86168b1d2bb66c65'\t\t,  \t'fd15d5cc48c34ddaa265f281f1cc7b61'\t\t,  \t'fe305131af144fc7b68fb2ba3664304c'\t\t,  \t'fe34f92cd6d3407e9760b68342987617'\t\t,  \t'fe7fa8eb55bc4dcd86988b6e3006a358'\t\t,  \t'fe90ab3c0c444952834be5abbff97b62'\t\t,  \t'fef2221fbad84ca88c7fa6600b1d9fc9'\t\t,  \t'ff41b593422240d59f8cbac4be85f7a7'\t\t,  \t'ff68932ee06d45c0bcee4645d98323b7'\t\t,  \t'ffef6ef389d344068a48149bcf79c334'\t\t)", "analyze": ["-> Table scan on <temporary>  (cost=0.02..5.45 rows=237) (actual time=0.003..0.003 rows=0 loops=1)\n    -> Temporary table with deduplication  (cost=192.33..197.76 rows=237) (actual time=0.154..0.154 rows=0 loops=1)\n        -> Inner hash join (b.SPU_ID = d.SPU_ID)  (cost=168.64 rows=237) (actual time=0.089..0.089 rows=0 loops=1)\n            -> Index range scan on d using idx_spu_id, with index condition: (d.SPU_ID in ('04747b40ae994ac195d71a4c9ae069ee','0919549d112f4a4c9588e20d90d7c2b0','38e7bfef01ad4baf86cf441f986124a7','3df560d24f7f4da1869a5139fb97321a','3fe2c90bd42546138020e5a78fd748b1','56784e61a47e453ca1e69708658ee754','5de2c1235b2044848a7bab241c1e9708','6005c853d5f94902bf7f2ee5cdb50abb','6543837cdf1945e88f3763f6d74fcf28','75e2684bfbe24e8f852a7210403aa873','78ce6bb1bab64e029a5326dbe4d9efe1','80575cd7ce4542fea5eac90121dfc219','88f69c4406b349b48e1b37098c966169','9637933b761349949ed43a57243d7775','9f1c87066e3848758e2bffa403140520','a0f87564528846f8be9e21052bc90554','a8dec0ec1e674a89a0c6a81667bd1785','af521b66717e4c9495a0a85ea0afb818','b5a5d248418640509e431e3261d5243c','b81524aea45943a3ba66c61e683ea206','bdfd373bbabc4cc4b8dde793f88c18bf','bf553a0e94a54d028fed79336e85d15d','c383359bd03341a1a41ec732818fc5c1','cc3cb4f2dbba404b8c6fdc8aa35f75e1','ce1841f9d7b1466e8159f5ab06ba14cc','d57fc90d5b424593af15fb827247cca6','de3552e239b844bda72032a2f45c98ae','e4f666b87eae485983fed13f930b6868','fb31dabb34e441dfae1f9fdb9e6c7ae9','fe98e554f73144609f845baf0f9e1edb','005d6b35adc9413da83be8dc9d8d4001','005fa2ba0f1d4e048d39e1aa3236ab1e','0091c7d91ca94e14824632fe45f6e040','00cc81df81fa47d490deb8155dc59fac','00faa92bb265438d8b60f8e09eca532a','033b13391a9c4025b6ebb4b8fb9d0f46','03f95301f4684387998f918f4e674b9a','0525c37c830e41839db55ed28e52711e','05534f415b4d4b4fb61beefeeadcfbf3','065680a5f20d4b5093101fbd26edad29','06608524e4724a9eaf4cea0ea172c224','066dc2b6b63148f1aa41de2bc3860e0d','0688bd5678e3416584c48796077c1edd','0701cba94aba4598a77adb671fec76c1','0711d969526741c9b3dc306f2cf5e843','07b0fe5e131e4535a8f453a71305b1e6','0807e491dbec43f8bc13b24906d85f13','08423da16486442684c2fe4a40765a1a','0850bdaf59a7435aa28b5906569496b2','0862efe82503468ba6e0e6294c3b96de','08728c2e92314ac0bd88f97a29cd36d8','0a94cd17e5394959afd0187e899c2310','0b0aee7bf3444d2c8510b6552e210306','0b8e5f90481a4a1f814de1d143ae193e','0cb3cef68369467cb20fff1885d0b92d','0db7b98103394aefaabb312d548156b4','0db8a9f4fcf74e72aa0f64b5611409bb','0de9ede64a274e0da153a48b2deb2e71','0df3549ef26a4528ad23ecb1a4fa3732','0fa8107c649f432bb0fa79ccbbe7f3a0','10de6519474d421fb73b077a56e7e9b8','10ec752b57964b6cb0d453d215a1f9e1','12ab6b9fa4d24fceb9708218c9570810','12df5d65195944d3aa42647df310c0f5','135f0698db324c0490e0701bc26ecde1','1444995d24f847bc803dc2c482fc2ef3','14964074aa9b49d4bb7125b809d90f9d','15f47edcef6d4b59965de5d9570ac1da','16ade9a4fa2e4127aa85c4e304229114','16cff956e1dd4c8a8f6ee646b3d81aa8','173fb211003746c1a96fbd33c1fedd94','1877905fabbb42ce81caf0b558f74a81','19a44a0adfa542cfa96e41a980c2a20a','19c4b6d73bbf4c2ebf700e8962c6bc21','1a8f68e559444d4f83be5e3f4b204ccd','1b9f76a874a3499d8d17a26ed4facd14','1babdcbbe0f8483fafa0304bf6fb6eee','1c7a852eaa6346af90936cfd030e3a6a','1d06476a618847c4a08aceac9179801c','1d29224feb2947cb95667585afcdba0e','1ee449fbf56f4a7083290ac8f896f9a2','1f0a07dbdc4e4adab47d9376013b18a7','1fe8586d804f4411b138afeb64a53730','1fe95dc98caf4ea4ba96edc416d32f9f','2014d42433204925b54c3e457d707814','2094e0208f234657b7c284d694dd8ddf','20cf33eef74a4f62911380022487d5aa','215e61f9c45643fbb28ce3af0720a34f','21fb1d2424fb476d81909685497d7ce3','222b7a6277a64144854cab2fb1150a16','228602c83c8f405bbd20c3ee34649d34','229bcadb5fe747179d0e3ca002a1275b','235c083d2a8d40678e2e3a4b2ed86cc4','2395e41278024b43a6e39cdb45e136bb','248e764e714146c09075ddf17bda4e0e','2765a567816b4ca29889f4aaee6a2f0a','27a1717c32774dffb5017cd263804e05','286bd6e29fec4c5aa10c9d50d84c1b48','28f6751f146f44549d57a2d8bcbad0fc','294712683fb04d4183ee388f47939bd0','2a164a43b07f47c481b64a1b03c94b50','2a3273a85aa149dc8d727c78dfac6bab','2a3457d9cbf84e52bfffcca800b35211','2adc3becb6354f9f8ad1b3bcddeadaa0','2f0fd159cc1c476fa5311f5d73e249fe','2f442f139d974e88bdd96782e348bf3b','2f5d965a17b34e23baa5c6bd2448197b','30eb160c183f4a1fad29c365b3cdc7da','3137addb4a0c4d07aca0e99445505f0a','313ce18d65fe41278cda09fdf2f42355','335eec5faf9743e2bf7887a0c39f7c08','33921c377ada48efae7efb5b719c2ad6','33ad47ad3858454cbb17b33da7f40f5f','3447cac5b41344eba6c2b07a0afcf1c9','34cbf863d9684617b2bc67d2edd5638d','35d214354e55444c941bb1f63afe61b0','3606e1d5ec45472cbfe5ba0c3c0ea1e1','362682f5c22041da91c5247f3b249715','3796dffb199446ffa8afd40d8aa02a26','37e101f0b8d94b469d74ed0846e76d33','39ab5235427547a983a79a8ef1af5763','39cbd2ac6fae4ab39c12cb08f575fcad','3a97095f71bd45d79988d80d3ffc56a7','3ca87bac38e74ca68765aac3131bfb25','3cb2e4f2e36f441e968284bb5418077e','3cd3fd2fa1bf46a6a81f412c7b16f9c3','3cf0851830fb4350b7968a4d5db4078a','3d5c26f442b74432a46df2f4c75d5b3b','3d6e74677c1244bba3ad8220e331a566','3dc1e1e3c2204e34a840d516ed9368e3','3e03b743fbc14807863341f088183de2','3e759dd443c34ceea1d92a77378c242e','3e825d25bfd94c9a9db3ca9cf28d3188','3f0e93b6e4ee4d3485521d34577d4834','3f1c17b4d1bb46d79bb347495fd538a0','3f3427b17be64ffba10d450dfa3bcfd8','3f5204b9f0d64b0daa09fb552ec0987b','3fd18b69c84c4595b63c7da985f44096','3ffdbfac9c7b4a93af102fed8deba63c','4065e313e159451596c2fde413a2177f','4135ecfee29548aa9bc8009695f46cb5','417a0d4deb4c4951970aa390f9a74fc2','42259b335b4c4c69bb5989cfa1b4b446','42bdde17e3b046148c0b0a55124673e2','42eb03e428694fdf8bbc75beeaa6ad59','42f89dc554e945dea5244a05f99e885d','4375d8e6d6de48f38cd80043d4e55ca8','43e8ff26503348f89ca0952ca07456fa','43f8d2bee9144ea18370088f9857a49f','44a631c914d8408a9df949d14acfcb71','44bacd5ae9cc41d8a2ac39fe09220530','44f481f842764fd09796993cea30a8c8','458c8e5de491437f9fed8dcbe223bdbe','45d1e4e8bfe04863b6e0760c4748bcd3','470e8b8022644b4b8f83a25488936a40','47578b7a57b243268b520f88f8292a38','48be8db456804ab5b403aee89a8ac06f','48f48fcc294541a193e84cb32c2ba61c','49d772f9dcec47f198ecce68c1839dbf','4a32c2e194f540cb9848c690915599c9','4a4080ed0f524636903685a7f00f7ab6','4a4c5371037c4ebb953ae3ffc96b7b8e','4aeebeb7cd044c85bd0fece3fce34bfb','4af97ecd851a4f30bf10407228a10b34','4c0e1027976843e4a4301c49cf1fac95','4c731a78f8e94722a729ee95cb12872c','4c82c5fe71c7400f822a8f43cfb0fd98','4cd32392ca324ea88ea79ade4f5132dc','4d1c0f89bf9b4d5f8fd7a38e96c75751','4d64e1b045944ed69b63908fbfe93635','4dc2cc7327fb4f6e903f104e4518c98b','4e59820c7afd46bfb558fc0549275abc','4edd5c3994774abeb46f11d33b617906','4f1175cbcd2c411a9a2dcefffb53c916','4f44eec7881844f79134f6254dbf4bc6','4fed7c4b61ff43eb9ffed0048c4c9fc3','5054f9aea98647a0a6b438655e7d21d2','50aef88c92484b2580317ed8148ab370','50efb45f8e88405db17bde4b57cdf6f7','5108208cdef64f518380963f279b81c5','516ab5ce05994675a43f3b94fcbd93c9','51dea27d64e24acfb55d50170646dd29','5208d10403b44192874694101aadf735','5271a6b2459f437b8bfce31aae1461ee','5377bd113f7f44e5a154d37081dda942','540c4a38fcca45e3a3f1401efa05ada9','5438a26412374ef2832ab8b21db42013','57144d4439244b3ea27e9564beb47537','5769da0bea2f4fc0a128e313f056d0bf','589ab446b44949b78958aa63cc5b36e9','597358b837584fae91f8e286933beb20','59af202fac8e4c22b8321bf39c51f2fc','5a0b43f488244246bed03b75d67353f4','5a1722c0bdd94f2eae9fe3239a1ecf51','5a5b59cd1d3f464aa5bc9d0b5c2678b5','5d99894d25a342358a320b133617a26f','5e0a88d007ec4dca945a33c4f31fbe0a','5e4b68e4b13e424e93024253fc80d4b7','5e56815e900c4081bdc1d20d1ac041d2','5e573649828743c288d620a9f8df1fb4','5ea2155c187a440ebcf8b1b8fd58b6f9','5ec0021dc5e043339057536b95fa9a59','5ec9d635dd194382b3ec8478b2cb94f4','5f04eaa25ab54d67899f801bc3477595','5f4caaa0ec28437599a2552461cb2abf','5ff76d7883504818a63352d590cdc06b','60ad71259bb1450690fc094fd09cf118','614b4a77264c4da182c4eb9aac9dc2cc','62af9a29bdb64594988ab5363c0b8dbd','62d55ac01f68478cb7ff0db5fc9931ad','638c47f4217448959b3abea0604c1e36','6412087d9a8d4e699aca26d831b6a117','641a9409453a48e79446f66b2c693e36','65cc812ba3f7483bbb29ced275ee28c0','66104c7cfdb84babbbb05dcbb62816ff','66ba1631a1334d139572e9d3ec6aebed','66ce0d47e4af40798750fdecc2707077','66ea83e65ede4ebe9986926ff7bab165','67040e6ff0f54b7fbd4ca5987925a754','677ffbd121954d6dbc7a1b4af0ce2e48','687f4986b35047e8a1a53e864ed9fb51','69232f68737c4abcabd96bbfd18ad0ba','6a4c7dc647754445884b861b3a1e083a','6a5651b1d4f144c49a17b58b2f07ee41','6ae8ca338d37447491cd5810d6794b97','6bf5a91e1f364da0b932476323eb3f99','6c52583f788f494ca2a6d702040a7f8b','6c5b284ca6d94a8f852317c485a6087c','6c6202ccdb6e4806ac384bf73c048dfa','6cf7a3db481c43f78870b8ba01ca65d5','6d1456cd862d4848ac54c123e953cd0d','6d70487872fc40a9bde0efccbc40e82c','6e2057b2b6fd49caba3f6d7a7accf694','6e2accaa36154b4b90afe2c07271039d','6ee4f8495a1442be907c70da3ea7336a','6f38bc8ca384497bb98f7b7995c017b5','6f923e4af1d7449caaad1805a34114e3','6fd12f7ba87b4474aff79180ea0e433b','70835b02e86149d98c752e61dd469aea','71dbcfae93b44bcab24ca37e41b5fc1e','723a5402361640bf8c1385f5be05c38b','72c4ffc6d4a440a09d047d5fa122930d','72c54bc1f30f4207805084d175d75636','72e9b7b96c65488fb0fa97eb283dc69a','73b1ee2e8c9c4e16922ffd84d25c5cda','744950e1c15844da8411965b98c591ec','75897efd84c844a69a45bbb419bfaccd','76d5ba4199184c9cb8b397e4f858c8f1','76fa2b8d700a459990740907a947a238','771866fa84594a118f50ccaf60f2cf56','7799f5cdc02948e1806db4b50b549060','7819e29f4ac24b2c83e7edd514d30524','78cc0fccdc4d41a7a3272565fc7b3572','79259ffb35174663a471e82dff63f5cc','794149c66ac2403580f5c5fdf4b790ad','79718bd828394519be4760ddfffa2aaa','79a94766d53c438dbd105dc7d7750225','7ad8577948e44f7894cd5f7d619a8b6e','7adfec033a164def983675019592cba6','7dcbe0ee6fab4902b79740d357d66661','7e1373c597ed415f8cd8d98c38ccfc0d','7ea7a65360ea40f9a0d1746e56a215ad','808bc35088bc48f7b41c0dae08f17b49','80a7aa1ff77d45a18b2da06128f2bcc2','80f45fb8737f4ff4b1e8f4876d6b8acb','816de2e53e46401189c5b4940720dab4','8236b474be014fad9378f69a0af83afd','823924e7eb4849949d2123e703cac343','8348defbedd5445091881af4b22f26bb','847effd848a14a489792e41b0742a9dc','84d2d3b58a1d410e9007a412552ea80f','87bbe86a5ee7440fb10f5849a4783c59','87c5b6ad4ce44b09b5f890f71d5ffd19','884875be698e479ca039643d2d26ac8a','888004d0bba0475d9ce0468d03adef89','88f16365c22b471b9549f4fbf5e28c23','8a75bc6f97784046bc9cb18af55e53e7','8aaf0d8010d64cb6a3e8b4e64cf44c04','8b4d42d911ca463b8db5907b6dfc18db','8b8ed47ec085404cbef71f8248768ca9','8beff31a1ed14fc0bb4031eac87cd524','8c17264e1e1841759ef1b92a48fc55c6','8c4594d31de54d3ebf940c9608d1b56f','8c73b1a41cff4b189e6b857b9de6e94a','8ca8409338004d8a83ffae431c81c7ae','8cbee0ec05e046aab217faf0c90b8ed8','8d2a82f758e140a98cd9b352933cd786','8d69519ce6354c2cb47df95204ab8159','8d72212910e34d6791bb05f0414fe023','8dea337365fa40649340b28d421e2d29','8e8c978229ee4cdb9ab18f82bf0704b8','8eba522e513247be8b5bdde09c494319','8ed209f7860248b1a7565f0d8301a1ec','8f48f70373054e43996aac4ab93b53d3','8f884a48f6084877a0692006c0e91049','8f9b0c11a6524faf87014551d9532f3e','901c0c1d47f54864b65e83d5ab4d8df3','90a49e7b1257491db8605ca3f12dad62','912eb5598331430d9f118b0f956d6d91','914f601a33fc40e2bd1524973ae9f8bd','915c7dd11c5e4db7a09989a9097327f2','92013dd19e9a4ad6a264d4f60dcd8ae8','93084c9474fc4d318dcc1410f3436f94','9462eb6fe8fe4c4ea335750115b21fc1','94a639b657ad470abe10eec179e84cad','952b289e44c84a93b3ccf7df89f53e9c','95eca78528de46cdac6a4e85ca89a6d0','9676e5eda8424a08ba3e70f4f5765760','978279be2e154d15bf27bc0d8e836d99','9788b8d7c2b443849be4acd0221a797f','978cd40ac3cd4ed3951838c8bdc33b7c','97c7e68c6fd94499bbe3542c88614e8f','97fcbb59ab2243af83d22162e83db910','98adc354f98a4b83859782d4f5472657','990891a8ebd245748f95251ba0e055d5','991b128c63b64cc9889e2466e5bb8967','996fea42f83c41978b5c927c70fd542e','998493025e2b4f0bbc7ceb3ff58767eb','9a1e1384e36d45e88e90f3f2af2b94a8','9a804e668983434eab80b4c4a4659437','9aa0f7a5fe1f45709ebdb85eb22f702b','9aeb02fdb5b949b4bc40c540581dc81b','9c2be6cbde4d4b5081c9b40146613971','9c58ee92bd4d4acc8ec771b2c2074503','9d8c5dc9966149319a7d63b8064d9e24','9edebbedbf414e86b0681b5f0717dd56','9f07b081e74249be8c89b0175156648a','9f29f7c53cda4a688431030b8795dbd5','9f9c800a73ae4d0ba3b378879fa5f8cb','a091110ddcd24e06941be0c0616cb494','a165f9a1acdb40da88f298f5186cfff7','a16ba644e45a4118b32981ff4c6d00e2','a197eb9156384ab28d5ce8a553467396','a24339e2c9584e609424d705f22a3b16','a28b65a48d6a4a009ec20b7c407a9ac0','a2e25da01b2d4960b0984c1254dc39a8','a3264b1d3db04d32b19fd1909eef1919','a39fb9c9f0ad40549c963c7cbc083e56','a49e4377c149444990c1671d5797aac6','a4d7cbbfc9f54a52a87c43990ebf9f87','a4de40428cae4c2cbcbfecc4dd2a6edf','a592edeeed0342258afab4586978b51f','a5c8a8ee308c4708b9aeacb9642b5b11','a5dcea826f8143b7a01e3271c696cc67','a5f1451b76a34737834cd5d336c3558a','a5f6b8b90b964d9b820b50595e0a3048','a612611d403543e1972438decd310a2f','a64d441f60254144a7c48e60018ceced','a68cdc9196944cb78c19a58368352d1e','a83ba5e3285a472590cfa059edd6b2d9','a95740dd2518415581c6f0f93a41cde8','a96ee5a4b55149819b57aa0e8781afc1','a97e31768d6b42739aae022300291aab','a9c0885e7227467c928a9d68bc675d99','a9e0590b885d4a1fa3eca755d4cb4988','aa04a2f3b52c47e8bc3391fd9b9883a1','aaf192c23a3f49d4928164aa3142091f','ab2aa74d675042f68087425ff6faf2dc','ab822c2f45614755bf532f88d718a3ac','ad3a5ad802fe4ba095ee48b78f971588','ad43d382b80d4c58ba297b787093d2e7','ad6ca71bdaa64733b34c6b7c76308fb1','ae81450ff5764a7b884d0b75f67ff26c','aeb77573a75f44f18c346971aa42caaa','aee40181266c4c2d9a9f1be8a4b03432','af3451a3eaf84575a92fa5e63e6d8453','afdc77e74e4b490b865b4854f538f48e','b0946329bc2042a2b72c42d9faeea0ef','b0974f23b6654f81ae3d7317c3c5e5ba','b1973f15cdc343cd8ce4f5b55bcf478f','b1d4ea3739194f63b3c13cf5cd1fab05','b27399c3677a4293ac61ca7e8da21f78','b2bade45584741b4b85d9593aefa17e4','b2bc38eb6afb45bf9ec15e56640c3d40','b2fd9942224e407fbfbc5c9992c07d49','b3aa5c4ef62749e5ab0ed82e7f990df0','b3e2454cf3304033adac47608bff5cd0','b44c1728b4c640c5beadb7ac6a6fa46f','b46d0d5eb54641b29312452f969049d6','b47b597394d8485eab12742493b2643e','b48c787acc6b4fecbc31d09c9fd87e3e','b48e0eab65b94a14910f3bed5fac0afe','b5916b1e48e84669a33f24d2441508dd','b59e4ac6214e48af9c7af431d78cb83c','b5b9b41b244f42159f3ed3450fb4045a','b5e515c849874642adc39ea5dd1995b2','b69d3fa048b64969b68a1728d069fa19','b6fdbf4f862941a89d0e508fc4e272be','b71af5e68be84ba9b69ea05210476a7c','b75b24741a93458fad200fb00c25d967','b76c0b4a22fa40ad9b6900248156246b','b7bbb2db98b94360866d51ece8769e75','b8507c29cf574175a39cd4facbc0a240','b90e96646ee94efeacaeb5150315de91','b9691d37786747c888bb24f925de4e51','b97e5349e31243d1a56487b3a36c8942','ba59ec65ff6b41ae85c2e7238db74b3f','bb9dc644b8fc4fb0bf6a010d04c6fd79','bbe0cc5eb66d4a05b2bdf3ea01715340','bd7ce9dae40946588096add14e6a71a2','bdec6af450724d8d8ca3a3bc536c09f0','bf163703c3b54d53b5198f1c75734a08','bf288def5ec04493b3ea5410c8aaf93e','bf5de965dbb44ccb8c60ff60479810bc','bf9da3e8078b46c4aa5e32bfa92c983f','bfda52539b2d4b0093b208b174cce5c4','bffc1a5fc8264805a0d898e48473ea37','c07853e79adf4eb1adf7efc07728aad4','c0a8bf62de33446ba26308b7f7c4eb65','c0b1634305e4420987bf0faeca512a61','c28cc6a98de0453e9d559bae94dc52de','c2a67347257d4889b825a014e1b4779f','c46514b2d7aa452aadea0e478aa61152','c49219574b5948729494d49e9d276c4a','c4f8e58be695427d9cd66ea9816a7069','c5a119cfe0a64812b8bc9860b8e1e489','c60bcd96a40f4119bb6fc8daa63deffe','c64eabeb1ebf4b98a63af43b3ce93f62','c6e8b9b152494e8ba4e2fcf2d161df72','c7996a039ceb4925818071712474d346','c7c1a33dcab94c8ab77b61428b5aef0a','c82d7efdf7e14353b97c9ab94b318e3e','c990777a5e7e47989d0ec791cfefd112','ca81b44997394e809690c17fd70c72cb','ca8e019b71b34ce49fa1cc61d6eb73f7','caa9dd455d4c40d69370fce397a0d4b0','cacbe0c1a6d04212bf5311033c8b4bfc','cb0c9fe24cb844788d1d02380789353d','cb7d1c8fee834a7c90464d2650aeebd2','cbebc59b38be4b1bb45ea4da9d0db7f0','cc3290c79f314a069e8ffd562eb4fe10','cc588985061641b9b1118239e1272478','cdc740a4702344bc9efdcc2eb01e1619','ce00917a7fe64ead8bc7392333e0ebc0','ce25291695604334b0a9e3efd2a237c8','ce42c45979fb427f980ea933b073538d','ce80c6f7d16140d19c491f658ae914ad','ceaf0969ed3d48b1b1fad2039d4944e7','cf1125687f984879bfe2897c00e07b7e','cf20b2859cd8481d81b8bf04737cc706','cf4f903fef2e46f8903cae21259d4fd1','cfe444ae44ce40b89ad4adafc9b5382b','d008405c82864fa2ac45c4e55ebb264f','d0132c10dd564cc2a88725e0a7e8f62f','d02787f0d6604633aabf4ec9e8912df8','d052f368f84d4d1fa663da2c9e91e71b','d0a1619e9eee4cd5a29f7d4611d73b78','d0ed748d52f14d33aea110ae996ba33e','d10bfc94131444c19fdc98f93c5b0174','d17b1b4ab2da421eb716e10ecd75ea07','d1d50ff163764782a284878d06a628fa','d266dede0bbe4bf396affa4eec978b5f','d2725b1b2dec4e959c02e65e4ff54719','d30a335020684f02a0f3ea48fd5855df','d3797e03beab48779509f2f60115e622','d4a64de004c449b28bf4a3cdc5efbc50','d60732a4721b416e8c30ca1034bd402a','d71f4739efb0497293d646b8aaeab8e7','d80c36a920fe48adac9a3740b2ce8438','d87ade3abf2f4169a88de112e21239da','d87c50598e6544799010c059e11b2ffe','d8bc0e7155364449a48d25857085c0e9','d95bbfb5b855444ba37dcb7aed5862dc','dc5ffa53576f426c9fc0f87585246c12','dd5c17468d6a48a3b895b5a5bbcedf6e','de165962b85e484b8254dbc5c6bcddd5','df5c915a34e845ed85479e2fe36d8a8b','df9296d0d5014ef5b2e081df92808ba1','df998a3bc0f04cb38c3e891a620c9c9c','e079627a34f94fa8b050add964ba20b0','e092f746b18d4ab0be53c231d0779b31','e0ccd396c13b413a82f7b8ee53378cd1','e17b513bb7fb4ee4b161a015a9ac34b5','e1f1af2de9f64cfd8cf5665618dcb83b','e2516e70faf546bc839a944972be6187','e2d0fff35e4340c0895fd2354472753d','e35d3ef0f2ad4286b424253cd1521bc3','e37a054c53904e61bdf94e541c4ee13a','e42c9947a12e46f2beea7f86c2e24351','e5558ab548fb4ed5a4caed0c7af24139','e5883a219ebf4105b12ea7a7f0b38c61','e59c2d21b99346c7b0547bd097c61e99','e6437107650d4f0ea1b06523d962776a','e690cc84c6264b5382ebd3d1f71d8f1c','e6a0b0ae2e4f41d49bd65b106a3378e2','e7a5524e65c74b3684e6f062e39e648f','e97cb4c1e2bc4492be40b8713551d136','ea2b58d531224cd18b81cf5c9ccd4c02','ea8f3fe3fef6447ab0f55283bad76783','eaa3bfd746a84667adc9828586d18c14','eac28bbfd14a418d83656f8c67335215','eaf5b493d43944db92ee6fd1977537da','eb0f2760a4c24a7e9bce0fb31d0d9e61','eb347e40866d42799f8f405fed808a43','eb5ef97ec55e42cb9e5087a6e47871c2','ebecec0ab14f409faaf882aa60bd9961','ec67ae4e288b42339f8ce60473a004e5','eca4a7aec4454c549d09d6fe5ee39563','eca8a82b744540a0b09d59ff826d1fe2','ed1f75e653cd4a99899fedf23f376416','eeb0b1f256e04c8ab20f67a5946f41d6','eeb14d800654442e948e600b10024486','eee09cef0e46436388b0738e7a2ec8b9','ef458dabecd7417c8eb79af6e9110b29','ef989cf71c8b44d2916d73b7a6a60f98','efba4a2dd698462caa23fba08ca2d9d0','efbf1aaf40f947049a5b0ebda5057b0d','efd2419b461e45f8bf5eb4a0dd915f07','eff77cef4012434ea0619280c8965a0c','f030a4ac3bfb43c297080a58197e424a','f05e55f4922a43b9b1054d073c160628','f0794dc4fcfb4f1b8b0f83073e60acb6','f0b6c577f3b54b4f93ee0a50422c9ce2','f207d7741d37406389c2aa0c0ba40938','f244346f8ba44b7ebaf91894d1c64212','f25aeee5c6fc4933846774573ec318fe','f26306fbc9b042439a2bc29dd96c277b','f26c9bf401f941bba8ae7de393620e57','f3648a8b9b4544ff90ba3bc9031e8813','f3ccc616929a40229dcb94e62958604e','f3db912afac14ad089883155f9194f3b','f489c8447a6444d1aba6a596fdc44108','f4c9d2b7c813416380018b294f09bce4','f4eca417af0f4efd8cf6a67b2475819a','f50a107819b5454787361b39c2efac1b','f5149b96a7b14f328b07d57a7a07dfc6','f5da6a5d1e00422a9e5855d86077caea','f67cb6fb492f4f97af6e384b47361de5','f6d952d252c344f59ae09779f01b196b','f78d6c7d0cf84a12a455b974f6d5913b','f853a44012874fc0a48c59d2b247938e','f9338e6a17f14500b05e99e32c7855dd','f990ff92d5a14b24af9c40d59e4ae468','f9d313d27dee479cb6a5d2341697e8f6','fa9b84f89f8f421f966aa4f929e932f2','fb4ee90dfd014fbaaac2069cd5230534','fb947c16b3b24a6db1ed0726f195e212','fbe83b660372443c86168b1d2bb66c65','fd15d5cc48c34ddaa265f281f1cc7b61','fe305131af144fc7b68fb2ba3664304c','fe34f92cd6d3407e9760b68342987617','fe7fa8eb55bc4dcd86988b6e3006a358','fe90ab3c0c444952834be5abbff97b62','fef2221fbad84ca88c7fa6600b1d9fc9','ff41b593422240d59f8cbac4be85f7a7','ff68932ee06d45c0bcee4645d98323b7','ffef6ef389d344068a48149bcf79c334'))  (cost=456.65 rows=547) (never executed)\n            -> Hash\n                -> Nested loop inner join  (cost=2.10 rows=0) (actual time=0.078..0.078 rows=0 loops=1)\n                    -> Filter: ((a.STATE = 1) and (a.CONTRACT_ID in ('7a01bab3a0494567a93a691a8f1ce731','fc3977155f3143b2848123634093154f','d836f43aacf3481e91f30539fe1545a1')))  (cost=1.36 rows=0) (actual time=0.077..0.077 rows=0 loops=1)\n                        -> Index range scan on a using PRIMARY  (cost=1.36 rows=3) (actual time=0.076..0.076 rows=0 loops=1)\n                    -> Filter: ((b.STATE = 1) and (a.CONTRACT_ID = b.CONTRACT_ID))  (cost=1.50 rows=1) (never executed)\n                        -> Index lookup on b using PRIMARY (CONTRACT_ID=a.CONTRACT_ID)  (cost=1.50 rows=14) (never executed)\n"]}, {"sql": " SELECT DISTINCT d.SKU_ID AS skuId, d.SPU_ID AS spuId, d.VERSION AS version, d.SKU_CODE AS skuCode, d.SKU_NAME AS skuName, d.SKU_IMAGE AS skuImage, d.SKU_ATTR AS skuAttr, d.PRICE AS price, d.PRO_PRICE AS proPrice, d.PRO_DISCOUNT AS proDiscount, d.PRO_PREFERENTIAL AS proPreferential, d.PRO_FEE AS proFee, d.DEPT_CODE AS deptCode, d.CREATE_INFO AS createInfo, d.CREATE_TIME AS createTime, d.CREATE_BY AS createBy, d.UPDATE_INFO AS updateInfo, d.UPDATE_TIME AS updateTime, d.UPDATE_BY AS updateBy, d.REMARK1 AS remark1, d.REMARK2 AS remark2, d.REMARK3 AS remark3, d.REMARK4 AS remark4, d.REMARK5 AS remark5, d.REMARK6 AS remark6, d.REMARK7 AS remark7, d.REMARK8 AS remark8 FROM pro_supplier_contract AS a INNER JOIN pro_supplier_contract_spu AS b ON a.CONTRACT_ID = b.CONTRACT_ID INNER JOIN pro_sku_info_detail AS d ON b.SPU_ID = d.SPU_ID WHERE a.STATE = 1   AND b.STATE = 1        AND a.CONTRACT_ID IN \t\t(  \t'7a01bab3a0494567a93a691a8f1ce731'\t\t,  \t'fc3977155f3143b2848123634093154f'\t\t,  \t'd836f43aacf3481e91f30539fe1545a1'\t\t)   AND d.SPU_ID IN \t\t(  \t'04747b40ae994ac195d71a4c9ae069ee'\t\t,  \t'0919549d112f4a4c9588e20d90d7c2b0'\t\t,  \t'38e7bfef01ad4baf86cf441f986124a7'\t\t,  \t'3df560d24f7f4da1869a5139fb97321a'\t\t,  \t'3fe2c90bd42546138020e5a78fd748b1'\t\t,  \t'56784e61a47e453ca1e69708658ee754'\t\t,  \t'5de2c1235b2044848a7bab241c1e9708'\t\t,  \t'6005c853d5f94902bf7f2ee5cdb50abb'\t\t,  \t'6543837cdf1945e88f3763f6d74fcf28'\t\t,  \t'75e2684bfbe24e8f852a7210403aa873'\t\t,  \t'78ce6bb1bab64e029a5326dbe4d9efe1'\t\t,  \t'80575cd7ce4542fea5eac90121dfc219'\t\t,  \t'88f69c4406b349b48e1b37098c966169'\t\t,  \t'9637933b761349949ed43a57243d7775'\t\t,  \t'9f1c87066e3848758e2bffa403140520'\t\t,  \t'a0f87564528846f8be9e21052bc90554'\t\t,  \t'a8dec0ec1e674a89a0c6a81667bd1785'\t\t,  \t'af521b66717e4c9495a0a85ea0afb818'\t\t,  \t'b5a5d248418640509e431e3261d5243c'\t\t,  \t'b81524aea45943a3ba66c61e683ea206'\t\t,  \t'bdfd373bbabc4cc4b8dde793f88c18bf'\t\t,  \t'bf553a0e94a54d028fed79336e85d15d'\t\t,  \t'c383359bd03341a1a41ec732818fc5c1'\t\t,  \t'cc3cb4f2dbba404b8c6fdc8aa35f75e1'\t\t,  \t'ce1841f9d7b1466e8159f5ab06ba14cc'\t\t,  \t'd57fc90d5b424593af15fb827247cca6'\t\t,  \t'de3552e239b844bda72032a2f45c98ae'\t\t,  \t'e4f666b87eae485983fed13f930b6868'\t\t,  \t'fb31dabb34e441dfae1f9fdb9e6c7ae9'\t\t,  \t'fe98e554f73144609f845baf0f9e1edb'\t\t,  \t'005d6b35adc9413da83be8dc9d8d4001'\t\t,  \t'005fa2ba0f1d4e048d39e1aa3236ab1e'\t\t,  \t'0091c7d91ca94e14824632fe45f6e040'\t\t,  \t'00cc81df81fa47d490deb8155dc59fac'\t\t,  \t'00faa92bb265438d8b60f8e09eca532a'\t\t,  \t'033b13391a9c4025b6ebb4b8fb9d0f46'\t\t,  \t'03f95301f4684387998f918f4e674b9a'\t\t,  \t'0525c37c830e41839db55ed28e52711e'\t\t,  \t'05534f415b4d4b4fb61beefeeadcfbf3'\t\t,  \t'065680a5f20d4b5093101fbd26edad29'\t\t,  \t'06608524e4724a9eaf4cea0ea172c224'\t\t,  \t'066dc2b6b63148f1aa41de2bc3860e0d'\t\t,  \t'0688bd5678e3416584c48796077c1edd'\t\t,  \t'0701cba94aba4598a77adb671fec76c1'\t\t,  \t'0711d969526741c9b3dc306f2cf5e843'\t\t,  \t'07b0fe5e131e4535a8f453a71305b1e6'\t\t,  \t'0807e491dbec43f8bc13b24906d85f13'\t\t,  \t'08423da16486442684c2fe4a40765a1a'\t\t,  \t'0850bdaf59a7435aa28b5906569496b2'\t\t,  \t'0862efe82503468ba6e0e6294c3b96de'\t\t,  \t'08728c2e92314ac0bd88f97a29cd36d8'\t\t,  \t'0a94cd17e5394959afd0187e899c2310'\t\t,  \t'0b0aee7bf3444d2c8510b6552e210306'\t\t,  \t'0b8e5f90481a4a1f814de1d143ae193e'\t\t,  \t'0cb3cef68369467cb20fff1885d0b92d'\t\t,  \t'0db7b98103394aefaabb312d548156b4'\t\t,  \t'0db8a9f4fcf74e72aa0f64b5611409bb'\t\t,  \t'0de9ede64a274e0da153a48b2deb2e71'\t\t,  \t'0df3549ef26a4528ad23ecb1a4fa3732'\t\t,  \t'0fa8107c649f432bb0fa79ccbbe7f3a0'\t\t,  \t'10de6519474d421fb73b077a56e7e9b8'\t\t,  \t'10ec752b57964b6cb0d453d215a1f9e1'\t\t,  \t'12ab6b9fa4d24fceb9708218c9570810'\t\t,  \t'12df5d65195944d3aa42647df310c0f5'\t\t,  \t'135f0698db324c0490e0701bc26ecde1'\t\t,  \t'1444995d24f847bc803dc2c482fc2ef3'\t\t,  \t'14964074aa9b49d4bb7125b809d90f9d'\t\t,  \t'15f47edcef6d4b59965de5d9570ac1da'\t\t,  \t'16ade9a4fa2e4127aa85c4e304229114'\t\t,  \t'16cff956e1dd4c8a8f6ee646b3d81aa8'\t\t,  \t'173fb211003746c1a96fbd33c1fedd94'\t\t,  \t'1877905fabbb42ce81caf0b558f74a81'\t\t,  \t'19a44a0adfa542cfa96e41a980c2a20a'\t\t,  \t'19c4b6d73bbf4c2ebf700e8962c6bc21'\t\t,  \t'1a8f68e559444d4f83be5e3f4b204ccd'\t\t,  \t'1b9f76a874a3499d8d17a26ed4facd14'\t\t,  \t'1babdcbbe0f8483fafa0304bf6fb6eee'\t\t,  \t'1c7a852eaa6346af90936cfd030e3a6a'\t\t,  \t'1d06476a618847c4a08aceac9179801c'\t\t,  \t'1d29224feb2947cb95667585afcdba0e'\t\t,  \t'1ee449fbf56f4a7083290ac8f896f9a2'\t\t,  \t'1f0a07dbdc4e4adab47d9376013b18a7'\t\t,  \t'1fe8586d804f4411b138afeb64a53730'\t\t,  \t'1fe95dc98caf4ea4ba96edc416d32f9f'\t\t,  \t'2014d42433204925b54c3e457d707814'\t\t,  \t'2094e0208f234657b7c284d694dd8ddf'\t\t,  \t'20cf33eef74a4f62911380022487d5aa'\t\t,  \t'215e61f9c45643fbb28ce3af0720a34f'\t\t,  \t'21fb1d2424fb476d81909685497d7ce3'\t\t,  \t'222b7a6277a64144854cab2fb1150a16'\t\t,  \t'228602c83c8f405bbd20c3ee34649d34'\t\t,  \t'229bcadb5fe747179d0e3ca002a1275b'\t\t,  \t'235c083d2a8d40678e2e3a4b2ed86cc4'\t\t,  \t'2395e41278024b43a6e39cdb45e136bb'\t\t,  \t'248e764e714146c09075ddf17bda4e0e'\t\t,  \t'2765a567816b4ca29889f4aaee6a2f0a'\t\t,  \t'27a1717c32774dffb5017cd263804e05'\t\t,  \t'286bd6e29fec4c5aa10c9d50d84c1b48'\t\t,  \t'28f6751f146f44549d57a2d8bcbad0fc'\t\t,  \t'294712683fb04d4183ee388f47939bd0'\t\t,  \t'2a164a43b07f47c481b64a1b03c94b50'\t\t,  \t'2a3273a85aa149dc8d727c78dfac6bab'\t\t,  \t'2a3457d9cbf84e52bfffcca800b35211'\t\t,  \t'2adc3becb6354f9f8ad1b3bcddeadaa0'\t\t,  \t'2f0fd159cc1c476fa5311f5d73e249fe'\t\t,  \t'2f442f139d974e88bdd96782e348bf3b'\t\t,  \t'2f5d965a17b34e23baa5c6bd2448197b'\t\t,  \t'30eb160c183f4a1fad29c365b3cdc7da'\t\t,  \t'3137addb4a0c4d07aca0e99445505f0a'\t\t,  \t'313ce18d65fe41278cda09fdf2f42355'\t\t,  \t'335eec5faf9743e2bf7887a0c39f7c08'\t\t,  \t'33921c377ada48efae7efb5b719c2ad6'\t\t,  \t'33ad47ad3858454cbb17b33da7f40f5f'\t\t,  \t'3447cac5b41344eba6c2b07a0afcf1c9'\t\t,  \t'34cbf863d9684617b2bc67d2edd5638d'\t\t,  \t'35d214354e55444c941bb1f63afe61b0'\t\t,  \t'3606e1d5ec45472cbfe5ba0c3c0ea1e1'\t\t,  \t'362682f5c22041da91c5247f3b249715'\t\t,  \t'3796dffb199446ffa8afd40d8aa02a26'\t\t,  \t'37e101f0b8d94b469d74ed0846e76d33'\t\t,  \t'39ab5235427547a983a79a8ef1af5763'\t\t,  \t'39cbd2ac6fae4ab39c12cb08f575fcad'\t\t,  \t'3a97095f71bd45d79988d80d3ffc56a7'\t\t,  \t'3ca87bac38e74ca68765aac3131bfb25'\t\t,  \t'3cb2e4f2e36f441e968284bb5418077e'\t\t,  \t'3cd3fd2fa1bf46a6a81f412c7b16f9c3'\t\t,  \t'3cf0851830fb4350b7968a4d5db4078a'\t\t,  \t'3d5c26f442b74432a46df2f4c75d5b3b'\t\t,  \t'3d6e74677c1244bba3ad8220e331a566'\t\t,  \t'3dc1e1e3c2204e34a840d516ed9368e3'\t\t,  \t'3e03b743fbc14807863341f088183de2'\t\t,  \t'3e759dd443c34ceea1d92a77378c242e'\t\t,  \t'3e825d25bfd94c9a9db3ca9cf28d3188'\t\t,  \t'3f0e93b6e4ee4d3485521d34577d4834'\t\t,  \t'3f1c17b4d1bb46d79bb347495fd538a0'\t\t,  \t'3f3427b17be64ffba10d450dfa3bcfd8'\t\t,  \t'3f5204b9f0d64b0daa09fb552ec0987b'\t\t,  \t'3fd18b69c84c4595b63c7da985f44096'\t\t,  \t'3ffdbfac9c7b4a93af102fed8deba63c'\t\t,  \t'4065e313e159451596c2fde413a2177f'\t\t,  \t'4135ecfee29548aa9bc8009695f46cb5'\t\t,  \t'417a0d4deb4c4951970aa390f9a74fc2'\t\t,  \t'42259b335b4c4c69bb5989cfa1b4b446'\t\t,  \t'42bdde17e3b046148c0b0a55124673e2'\t\t,  \t'42eb03e428694fdf8bbc75beeaa6ad59'\t\t,  \t'42f89dc554e945dea5244a05f99e885d'\t\t,  \t'4375d8e6d6de48f38cd80043d4e55ca8'\t\t,  \t'43e8ff26503348f89ca0952ca07456fa'\t\t,  \t'43f8d2bee9144ea18370088f9857a49f'\t\t,  \t'44a631c914d8408a9df949d14acfcb71'\t\t,  \t'44bacd5ae9cc41d8a2ac39fe09220530'\t\t,  \t'44f481f842764fd09796993cea30a8c8'\t\t,  \t'458c8e5de491437f9fed8dcbe223bdbe'\t\t,  \t'45d1e4e8bfe04863b6e0760c4748bcd3'\t\t,  \t'470e8b8022644b4b8f83a25488936a40'\t\t,  \t'47578b7a57b243268b520f88f8292a38'\t\t,  \t'48be8db456804ab5b403aee89a8ac06f'\t\t,  \t'48f48fcc294541a193e84cb32c2ba61c'\t\t,  \t'49d772f9dcec47f198ecce68c1839dbf'\t\t,  \t'4a32c2e194f540cb9848c690915599c9'\t\t,  \t'4a4080ed0f524636903685a7f00f7ab6'\t\t,  \t'4a4c5371037c4ebb953ae3ffc96b7b8e'\t\t,  \t'4aeebeb7cd044c85bd0fece3fce34bfb'\t\t,  \t'4af97ecd851a4f30bf10407228a10b34'\t\t,  \t'4c0e1027976843e4a4301c49cf1fac95'\t\t,  \t'4c731a78f8e94722a729ee95cb12872c'\t\t,  \t'4c82c5fe71c7400f822a8f43cfb0fd98'\t\t,  \t'4cd32392ca324ea88ea79ade4f5132dc'\t\t,  \t'4d1c0f89bf9b4d5f8fd7a38e96c75751'\t\t,  \t'4d64e1b045944ed69b63908fbfe93635'\t\t,  \t'4dc2cc7327fb4f6e903f104e4518c98b'\t\t,  \t'4e59820c7afd46bfb558fc0549275abc'\t\t,  \t'4edd5c3994774abeb46f11d33b617906'\t\t,  \t'4f1175cbcd2c411a9a2dcefffb53c916'\t\t,  \t'4f44eec7881844f79134f6254dbf4bc6'\t\t,  \t'4fed7c4b61ff43eb9ffed0048c4c9fc3'\t\t,  \t'5054f9aea98647a0a6b438655e7d21d2'\t\t,  \t'50aef88c92484b2580317ed8148ab370'\t\t,  \t'50efb45f8e88405db17bde4b57cdf6f7'\t\t,  \t'5108208cdef64f518380963f279b81c5'\t\t,  \t'516ab5ce05994675a43f3b94fcbd93c9'\t\t,  \t'51dea27d64e24acfb55d50170646dd29'\t\t,  \t'5208d10403b44192874694101aadf735'\t\t,  \t'5271a6b2459f437b8bfce31aae1461ee'\t\t,  \t'5377bd113f7f44e5a154d37081dda942'\t\t,  \t'540c4a38fcca45e3a3f1401efa05ada9'\t\t,  \t'5438a26412374ef2832ab8b21db42013'\t\t,  \t'57144d4439244b3ea27e9564beb47537'\t\t,  \t'5769da0bea2f4fc0a128e313f056d0bf'\t\t,  \t'589ab446b44949b78958aa63cc5b36e9'\t\t,  \t'597358b837584fae91f8e286933beb20'\t\t,  \t'59af202fac8e4c22b8321bf39c51f2fc'\t\t,  \t'5a0b43f488244246bed03b75d67353f4'\t\t,  \t'5a1722c0bdd94f2eae9fe3239a1ecf51'\t\t,  \t'5a5b59cd1d3f464aa5bc9d0b5c2678b5'\t\t,  \t'5d99894d25a342358a320b133617a26f'\t\t,  \t'5e0a88d007ec4dca945a33c4f31fbe0a'\t\t,  \t'5e4b68e4b13e424e93024253fc80d4b7'\t\t,  \t'5e56815e900c4081bdc1d20d1ac041d2'\t\t,  \t'5e573649828743c288d620a9f8df1fb4'\t\t,  \t'5ea2155c187a440ebcf8b1b8fd58b6f9'\t\t,  \t'5ec0021dc5e043339057536b95fa9a59'\t\t,  \t'5ec9d635dd194382b3ec8478b2cb94f4'\t\t,  \t'5f04eaa25ab54d67899f801bc3477595'\t\t,  \t'5f4caaa0ec28437599a2552461cb2abf'\t\t,  \t'5ff76d7883504818a63352d590cdc06b'\t\t,  \t'60ad71259bb1450690fc094fd09cf118'\t\t,  \t'614b4a77264c4da182c4eb9aac9dc2cc'\t\t,  \t'62af9a29bdb64594988ab5363c0b8dbd'\t\t,  \t'62d55ac01f68478cb7ff0db5fc9931ad'\t\t,  \t'638c47f4217448959b3abea0604c1e36'\t\t,  \t'6412087d9a8d4e699aca26d831b6a117'\t\t,  \t'641a9409453a48e79446f66b2c693e36'\t\t,  \t'65cc812ba3f7483bbb29ced275ee28c0'\t\t,  \t'66104c7cfdb84babbbb05dcbb62816ff'\t\t,  \t'66ba1631a1334d139572e9d3ec6aebed'\t\t,  \t'66ce0d47e4af40798750fdecc2707077'\t\t,  \t'66ea83e65ede4ebe9986926ff7bab165'\t\t,  \t'67040e6ff0f54b7fbd4ca5987925a754'\t\t,  \t'677ffbd121954d6dbc7a1b4af0ce2e48'\t\t,  \t'687f4986b35047e8a1a53e864ed9fb51'\t\t,  \t'69232f68737c4abcabd96bbfd18ad0ba'\t\t,  \t'6a4c7dc647754445884b861b3a1e083a'\t\t,  \t'6a5651b1d4f144c49a17b58b2f07ee41'\t\t,  \t'6ae8ca338d37447491cd5810d6794b97'\t\t,  \t'6bf5a91e1f364da0b932476323eb3f99'\t\t,  \t'6c52583f788f494ca2a6d702040a7f8b'\t\t,  \t'6c5b284ca6d94a8f852317c485a6087c'\t\t,  \t'6c6202ccdb6e4806ac384bf73c048dfa'\t\t,  \t'6cf7a3db481c43f78870b8ba01ca65d5'\t\t,  \t'6d1456cd862d4848ac54c123e953cd0d'\t\t,  \t'6d70487872fc40a9bde0efccbc40e82c'\t\t,  \t'6e2057b2b6fd49caba3f6d7a7accf694'\t\t,  \t'6e2accaa36154b4b90afe2c07271039d'\t\t,  \t'6ee4f8495a1442be907c70da3ea7336a'\t\t,  \t'6f38bc8ca384497bb98f7b7995c017b5'\t\t,  \t'6f923e4af1d7449caaad1805a34114e3'\t\t,  \t'6fd12f7ba87b4474aff79180ea0e433b'\t\t,  \t'70835b02e86149d98c752e61dd469aea'\t\t,  \t'71dbcfae93b44bcab24ca37e41b5fc1e'\t\t,  \t'723a5402361640bf8c1385f5be05c38b'\t\t,  \t'72c4ffc6d4a440a09d047d5fa122930d'\t\t,  \t'72c54bc1f30f4207805084d175d75636'\t\t,  \t'72e9b7b96c65488fb0fa97eb283dc69a'\t\t,  \t'73b1ee2e8c9c4e16922ffd84d25c5cda'\t\t,  \t'744950e1c15844da8411965b98c591ec'\t\t,  \t'75897efd84c844a69a45bbb419bfaccd'\t\t,  \t'76d5ba4199184c9cb8b397e4f858c8f1'\t\t,  \t'76fa2b8d700a459990740907a947a238'\t\t,  \t'771866fa84594a118f50ccaf60f2cf56'\t\t,  \t'7799f5cdc02948e1806db4b50b549060'\t\t,  \t'7819e29f4ac24b2c83e7edd514d30524'\t\t,  \t'78cc0fccdc4d41a7a3272565fc7b3572'\t\t,  \t'79259ffb35174663a471e82dff63f5cc'\t\t,  \t'794149c66ac2403580f5c5fdf4b790ad'\t\t,  \t'79718bd828394519be4760ddfffa2aaa'\t\t,  \t'79a94766d53c438dbd105dc7d7750225'\t\t,  \t'7ad8577948e44f7894cd5f7d619a8b6e'\t\t,  \t'7adfec033a164def983675019592cba6'\t\t,  \t'7dcbe0ee6fab4902b79740d357d66661'\t\t,  \t'7e1373c597ed415f8cd8d98c38ccfc0d'\t\t,  \t'7ea7a65360ea40f9a0d1746e56a215ad'\t\t,  \t'808bc35088bc48f7b41c0dae08f17b49'\t\t,  \t'80a7aa1ff77d45a18b2da06128f2bcc2'\t\t,  \t'80f45fb8737f4ff4b1e8f4876d6b8acb'\t\t,  \t'816de2e53e46401189c5b4940720dab4'\t\t,  \t'8236b474be014fad9378f69a0af83afd'\t\t,  \t'823924e7eb4849949d2123e703cac343'\t\t,  \t'8348defbedd5445091881af4b22f26bb'\t\t,  \t'847effd848a14a489792e41b0742a9dc'\t\t,  \t'84d2d3b58a1d410e9007a412552ea80f'\t\t,  \t'87bbe86a5ee7440fb10f5849a4783c59'\t\t,  \t'87c5b6ad4ce44b09b5f890f71d5ffd19'\t\t,  \t'884875be698e479ca039643d2d26ac8a'\t\t,  \t'888004d0bba0475d9ce0468d03adef89'\t\t,  \t'88f16365c22b471b9549f4fbf5e28c23'\t\t,  \t'8a75bc6f97784046bc9cb18af55e53e7'\t\t,  \t'8aaf0d8010d64cb6a3e8b4e64cf44c04'\t\t,  \t'8b4d42d911ca463b8db5907b6dfc18db'\t\t,  \t'8b8ed47ec085404cbef71f8248768ca9'\t\t,  \t'8beff31a1ed14fc0bb4031eac87cd524'\t\t,  \t'8c17264e1e1841759ef1b92a48fc55c6'\t\t,  \t'8c4594d31de54d3ebf940c9608d1b56f'\t\t,  \t'8c73b1a41cff4b189e6b857b9de6e94a'\t\t,  \t'8ca8409338004d8a83ffae431c81c7ae'\t\t,  \t'8cbee0ec05e046aab217faf0c90b8ed8'\t\t,  \t'8d2a82f758e140a98cd9b352933cd786'\t\t,  \t'8d69519ce6354c2cb47df95204ab8159'\t\t,  \t'8d72212910e34d6791bb05f0414fe023'\t\t,  \t'8dea337365fa40649340b28d421e2d29'\t\t,  \t'8e8c978229ee4cdb9ab18f82bf0704b8'\t\t,  \t'8eba522e513247be8b5bdde09c494319'\t\t,  \t'8ed209f7860248b1a7565f0d8301a1ec'\t\t,  \t'8f48f70373054e43996aac4ab93b53d3'\t\t,  \t'8f884a48f6084877a0692006c0e91049'\t\t,  \t'8f9b0c11a6524faf87014551d9532f3e'\t\t,  \t'901c0c1d47f54864b65e83d5ab4d8df3'\t\t,  \t'90a49e7b1257491db8605ca3f12dad62'\t\t,  \t'912eb5598331430d9f118b0f956d6d91'\t\t,  \t'914f601a33fc40e2bd1524973ae9f8bd'\t\t,  \t'915c7dd11c5e4db7a09989a9097327f2'\t\t,  \t'92013dd19e9a4ad6a264d4f60dcd8ae8'\t\t,  \t'93084c9474fc4d318dcc1410f3436f94'\t\t,  \t'9462eb6fe8fe4c4ea335750115b21fc1'\t\t,  \t'94a639b657ad470abe10eec179e84cad'\t\t,  \t'952b289e44c84a93b3ccf7df89f53e9c'\t\t,  \t'95eca78528de46cdac6a4e85ca89a6d0'\t\t,  \t'9676e5eda8424a08ba3e70f4f5765760'\t\t,  \t'978279be2e154d15bf27bc0d8e836d99'\t\t,  \t'9788b8d7c2b443849be4acd0221a797f'\t\t,  \t'978cd40ac3cd4ed3951838c8bdc33b7c'\t\t,  \t'97c7e68c6fd94499bbe3542c88614e8f'\t\t,  \t'97fcbb59ab2243af83d22162e83db910'\t\t,  \t'98adc354f98a4b83859782d4f5472657'\t\t,  \t'990891a8ebd245748f95251ba0e055d5'\t\t,  \t'991b128c63b64cc9889e2466e5bb8967'\t\t,  \t'996fea42f83c41978b5c927c70fd542e'\t\t,  \t'998493025e2b4f0bbc7ceb3ff58767eb'\t\t,  \t'9a1e1384e36d45e88e90f3f2af2b94a8'\t\t,  \t'9a804e668983434eab80b4c4a4659437'\t\t,  \t'9aa0f7a5fe1f45709ebdb85eb22f702b'\t\t,  \t'9aeb02fdb5b949b4bc40c540581dc81b'\t\t,  \t'9c2be6cbde4d4b5081c9b40146613971'\t\t,  \t'9c58ee92bd4d4acc8ec771b2c2074503'\t\t,  \t'9d8c5dc9966149319a7d63b8064d9e24'\t\t,  \t'9edebbedbf414e86b0681b5f0717dd56'\t\t,  \t'9f07b081e74249be8c89b0175156648a'\t\t,  \t'9f29f7c53cda4a688431030b8795dbd5'\t\t,  \t'9f9c800a73ae4d0ba3b378879fa5f8cb'\t\t,  \t'a091110ddcd24e06941be0c0616cb494'\t\t,  \t'a165f9a1acdb40da88f298f5186cfff7'\t\t,  \t'a16ba644e45a4118b32981ff4c6d00e2'\t\t,  \t'a197eb9156384ab28d5ce8a553467396'\t\t,  \t'a24339e2c9584e609424d705f22a3b16'\t\t,  \t'a28b65a48d6a4a009ec20b7c407a9ac0'\t\t,  \t'a2e25da01b2d4960b0984c1254dc39a8'\t\t,  \t'a3264b1d3db04d32b19fd1909eef1919'\t\t,  \t'a39fb9c9f0ad40549c963c7cbc083e56'\t\t,  \t'a49e4377c149444990c1671d5797aac6'\t\t,  \t'a4d7cbbfc9f54a52a87c43990ebf9f87'\t\t,  \t'a4de40428cae4c2cbcbfecc4dd2a6edf'\t\t,  \t'a592edeeed0342258afab4586978b51f'\t\t,  \t'a5c8a8ee308c4708b9aeacb9642b5b11'\t\t,  \t'a5dcea826f8143b7a01e3271c696cc67'\t\t,  \t'a5f1451b76a34737834cd5d336c3558a'\t\t,  \t'a5f6b8b90b964d9b820b50595e0a3048'\t\t,  \t'a612611d403543e1972438decd310a2f'\t\t,  \t'a64d441f60254144a7c48e60018ceced'\t\t,  \t'a68cdc9196944cb78c19a58368352d1e'\t\t,  \t'a83ba5e3285a472590cfa059edd6b2d9'\t\t,  \t'a95740dd2518415581c6f0f93a41cde8'\t\t,  \t'a96ee5a4b55149819b57aa0e8781afc1'\t\t,  \t'a97e31768d6b42739aae022300291aab'\t\t,  \t'a9c0885e7227467c928a9d68bc675d99'\t\t,  \t'a9e0590b885d4a1fa3eca755d4cb4988'\t\t,  \t'aa04a2f3b52c47e8bc3391fd9b9883a1'\t\t,  \t'aaf192c23a3f49d4928164aa3142091f'\t\t,  \t'ab2aa74d675042f68087425ff6faf2dc'\t\t,  \t'ab822c2f45614755bf532f88d718a3ac'\t\t,  \t'ad3a5ad802fe4ba095ee48b78f971588'\t\t,  \t'ad43d382b80d4c58ba297b787093d2e7'\t\t,  \t'ad6ca71bdaa64733b34c6b7c76308fb1'\t\t,  \t'ae81450ff5764a7b884d0b75f67ff26c'\t\t,  \t'aeb77573a75f44f18c346971aa42caaa'\t\t,  \t'aee40181266c4c2d9a9f1be8a4b03432'\t\t,  \t'af3451a3eaf84575a92fa5e63e6d8453'\t\t,  \t'afdc77e74e4b490b865b4854f538f48e'\t\t,  \t'b0946329bc2042a2b72c42d9faeea0ef'\t\t,  \t'b0974f23b6654f81ae3d7317c3c5e5ba'\t\t,  \t'b1973f15cdc343cd8ce4f5b55bcf478f'\t\t,  \t'b1d4ea3739194f63b3c13cf5cd1fab05'\t\t,  \t'b27399c3677a4293ac61ca7e8da21f78'\t\t,  \t'b2bade45584741b4b85d9593aefa17e4'\t\t,  \t'b2bc38eb6afb45bf9ec15e56640c3d40'\t\t,  \t'b2fd9942224e407fbfbc5c9992c07d49'\t\t,  \t'b3aa5c4ef62749e5ab0ed82e7f990df0'\t\t,  \t'b3e2454cf3304033adac47608bff5cd0'\t\t,  \t'b44c1728b4c640c5beadb7ac6a6fa46f'\t\t,  \t'b46d0d5eb54641b29312452f969049d6'\t\t,  \t'b47b597394d8485eab12742493b2643e'\t\t,  \t'b48c787acc6b4fecbc31d09c9fd87e3e'\t\t,  \t'b48e0eab65b94a14910f3bed5fac0afe'\t\t,  \t'b5916b1e48e84669a33f24d2441508dd'\t\t,  \t'b59e4ac6214e48af9c7af431d78cb83c'\t\t,  \t'b5b9b41b244f42159f3ed3450fb4045a'\t\t,  \t'b5e515c849874642adc39ea5dd1995b2'\t\t,  \t'b69d3fa048b64969b68a1728d069fa19'\t\t,  \t'b6fdbf4f862941a89d0e508fc4e272be'\t\t,  \t'b71af5e68be84ba9b69ea05210476a7c'\t\t,  \t'b75b24741a93458fad200fb00c25d967'\t\t,  \t'b76c0b4a22fa40ad9b6900248156246b'\t\t,  \t'b7bbb2db98b94360866d51ece8769e75'\t\t,  \t'b8507c29cf574175a39cd4facbc0a240'\t\t,  \t'b90e96646ee94efeacaeb5150315de91'\t\t,  \t'b9691d37786747c888bb24f925de4e51'\t\t,  \t'b97e5349e31243d1a56487b3a36c8942'\t\t,  \t'ba59ec65ff6b41ae85c2e7238db74b3f'\t\t,  \t'bb9dc644b8fc4fb0bf6a010d04c6fd79'\t\t,  \t'bbe0cc5eb66d4a05b2bdf3ea01715340'\t\t,  \t'bd7ce9dae40946588096add14e6a71a2'\t\t,  \t'bdec6af450724d8d8ca3a3bc536c09f0'\t\t,  \t'bf163703c3b54d53b5198f1c75734a08'\t\t,  \t'bf288def5ec04493b3ea5410c8aaf93e'\t\t,  \t'bf5de965dbb44ccb8c60ff60479810bc'\t\t,  \t'bf9da3e8078b46c4aa5e32bfa92c983f'\t\t,  \t'bfda52539b2d4b0093b208b174cce5c4'\t\t,  \t'bffc1a5fc8264805a0d898e48473ea37'\t\t,  \t'c07853e79adf4eb1adf7efc07728aad4'\t\t,  \t'c0a8bf62de33446ba26308b7f7c4eb65'\t\t,  \t'c0b1634305e4420987bf0faeca512a61'\t\t,  \t'c28cc6a98de0453e9d559bae94dc52de'\t\t,  \t'c2a67347257d4889b825a014e1b4779f'\t\t,  \t'c46514b2d7aa452aadea0e478aa61152'\t\t,  \t'c49219574b5948729494d49e9d276c4a'\t\t,  \t'c4f8e58be695427d9cd66ea9816a7069'\t\t,  \t'c5a119cfe0a64812b8bc9860b8e1e489'\t\t,  \t'c60bcd96a40f4119bb6fc8daa63deffe'\t\t,  \t'c64eabeb1ebf4b98a63af43b3ce93f62'\t\t,  \t'c6e8b9b152494e8ba4e2fcf2d161df72'\t\t,  \t'c7996a039ceb4925818071712474d346'\t\t,  \t'c7c1a33dcab94c8ab77b61428b5aef0a'\t\t,  \t'c82d7efdf7e14353b97c9ab94b318e3e'\t\t,  \t'c990777a5e7e47989d0ec791cfefd112'\t\t,  \t'ca81b44997394e809690c17fd70c72cb'\t\t,  \t'ca8e019b71b34ce49fa1cc61d6eb73f7'\t\t,  \t'caa9dd455d4c40d69370fce397a0d4b0'\t\t,  \t'cacbe0c1a6d04212bf5311033c8b4bfc'\t\t,  \t'cb0c9fe24cb844788d1d02380789353d'\t\t,  \t'cb7d1c8fee834a7c90464d2650aeebd2'\t\t,  \t'cbebc59b38be4b1bb45ea4da9d0db7f0'\t\t,  \t'cc3290c79f314a069e8ffd562eb4fe10'\t\t,  \t'cc588985061641b9b1118239e1272478'\t\t,  \t'cdc740a4702344bc9efdcc2eb01e1619'\t\t,  \t'ce00917a7fe64ead8bc7392333e0ebc0'\t\t,  \t'ce25291695604334b0a9e3efd2a237c8'\t\t,  \t'ce42c45979fb427f980ea933b073538d'\t\t,  \t'ce80c6f7d16140d19c491f658ae914ad'\t\t,  \t'ceaf0969ed3d48b1b1fad2039d4944e7'\t\t,  \t'cf1125687f984879bfe2897c00e07b7e'\t\t,  \t'cf20b2859cd8481d81b8bf04737cc706'\t\t,  \t'cf4f903fef2e46f8903cae21259d4fd1'\t\t,  \t'cfe444ae44ce40b89ad4adafc9b5382b'\t\t,  \t'd008405c82864fa2ac45c4e55ebb264f'\t\t,  \t'd0132c10dd564cc2a88725e0a7e8f62f'\t\t,  \t'd02787f0d6604633aabf4ec9e8912df8'\t\t,  \t'd052f368f84d4d1fa663da2c9e91e71b'\t\t,  \t'd0a1619e9eee4cd5a29f7d4611d73b78'\t\t,  \t'd0ed748d52f14d33aea110ae996ba33e'\t\t,  \t'd10bfc94131444c19fdc98f93c5b0174'\t\t,  \t'd17b1b4ab2da421eb716e10ecd75ea07'\t\t,  \t'd1d50ff163764782a284878d06a628fa'\t\t,  \t'd266dede0bbe4bf396affa4eec978b5f'\t\t,  \t'd2725b1b2dec4e959c02e65e4ff54719'\t\t,  \t'd30a335020684f02a0f3ea48fd5855df'\t\t,  \t'd3797e03beab48779509f2f60115e622'\t\t,  \t'd4a64de004c449b28bf4a3cdc5efbc50'\t\t,  \t'd60732a4721b416e8c30ca1034bd402a'\t\t,  \t'd71f4739efb0497293d646b8aaeab8e7'\t\t,  \t'd80c36a920fe48adac9a3740b2ce8438'\t\t,  \t'd87ade3abf2f4169a88de112e21239da'\t\t,  \t'd87c50598e6544799010c059e11b2ffe'\t\t,  \t'd8bc0e7155364449a48d25857085c0e9'\t\t,  \t'd95bbfb5b855444ba37dcb7aed5862dc'\t\t,  \t'dc5ffa53576f426c9fc0f87585246c12'\t\t,  \t'dd5c17468d6a48a3b895b5a5bbcedf6e'\t\t,  \t'de165962b85e484b8254dbc5c6bcddd5'\t\t,  \t'df5c915a34e845ed85479e2fe36d8a8b'\t\t,  \t'df9296d0d5014ef5b2e081df92808ba1'\t\t,  \t'df998a3bc0f04cb38c3e891a620c9c9c'\t\t,  \t'e079627a34f94fa8b050add964ba20b0'\t\t,  \t'e092f746b18d4ab0be53c231d0779b31'\t\t,  \t'e0ccd396c13b413a82f7b8ee53378cd1'\t\t,  \t'e17b513bb7fb4ee4b161a015a9ac34b5'\t\t,  \t'e1f1af2de9f64cfd8cf5665618dcb83b'\t\t,  \t'e2516e70faf546bc839a944972be6187'\t\t,  \t'e2d0fff35e4340c0895fd2354472753d'\t\t,  \t'e35d3ef0f2ad4286b424253cd1521bc3'\t\t,  \t'e37a054c53904e61bdf94e541c4ee13a'\t\t,  \t'e42c9947a12e46f2beea7f86c2e24351'\t\t,  \t'e5558ab548fb4ed5a4caed0c7af24139'\t\t,  \t'e5883a219ebf4105b12ea7a7f0b38c61'\t\t,  \t'e59c2d21b99346c7b0547bd097c61e99'\t\t,  \t'e6437107650d4f0ea1b06523d962776a'\t\t,  \t'e690cc84c6264b5382ebd3d1f71d8f1c'\t\t,  \t'e6a0b0ae2e4f41d49bd65b106a3378e2'\t\t,  \t'e7a5524e65c74b3684e6f062e39e648f'\t\t,  \t'e97cb4c1e2bc4492be40b8713551d136'\t\t,  \t'ea2b58d531224cd18b81cf5c9ccd4c02'\t\t,  \t'ea8f3fe3fef6447ab0f55283bad76783'\t\t,  \t'eaa3bfd746a84667adc9828586d18c14'\t\t,  \t'eac28bbfd14a418d83656f8c67335215'\t\t,  \t'eaf5b493d43944db92ee6fd1977537da'\t\t,  \t'eb0f2760a4c24a7e9bce0fb31d0d9e61'\t\t,  \t'eb347e40866d42799f8f405fed808a43'\t\t,  \t'eb5ef97ec55e42cb9e5087a6e47871c2'\t\t,  \t'ebecec0ab14f409faaf882aa60bd9961'\t\t,  \t'ec67ae4e288b42339f8ce60473a004e5'\t\t,  \t'eca4a7aec4454c549d09d6fe5ee39563'\t\t,  \t'eca8a82b744540a0b09d59ff826d1fe2'\t\t,  \t'ed1f75e653cd4a99899fedf23f376416'\t\t,  \t'eeb0b1f256e04c8ab20f67a5946f41d6'\t\t,  \t'eeb14d800654442e948e600b10024486'\t\t,  \t'eee09cef0e46436388b0738e7a2ec8b9'\t\t,  \t'ef458dabecd7417c8eb79af6e9110b29'\t\t,  \t'ef989cf71c8b44d2916d73b7a6a60f98'\t\t,  \t'efba4a2dd698462caa23fba08ca2d9d0'\t\t,  \t'efbf1aaf40f947049a5b0ebda5057b0d'\t\t,  \t'efd2419b461e45f8bf5eb4a0dd915f07'\t\t,  \t'eff77cef4012434ea0619280c8965a0c'\t\t,  \t'f030a4ac3bfb43c297080a58197e424a'\t\t,  \t'f05e55f4922a43b9b1054d073c160628'\t\t,  \t'f0794dc4fcfb4f1b8b0f83073e60acb6'\t\t,  \t'f0b6c577f3b54b4f93ee0a50422c9ce2'\t\t,  \t'f207d7741d37406389c2aa0c0ba40938'\t\t,  \t'f244346f8ba44b7ebaf91894d1c64212'\t\t,  \t'f25aeee5c6fc4933846774573ec318fe'\t\t,  \t'f26306fbc9b042439a2bc29dd96c277b'\t\t,  \t'f26c9bf401f941bba8ae7de393620e57'\t\t,  \t'f3648a8b9b4544ff90ba3bc9031e8813'\t\t,  \t'f3ccc616929a40229dcb94e62958604e'\t\t,  \t'f3db912afac14ad089883155f9194f3b'\t\t,  \t'f489c8447a6444d1aba6a596fdc44108'\t\t,  \t'f4c9d2b7c813416380018b294f09bce4'\t\t,  \t'f4eca417af0f4efd8cf6a67b2475819a'\t\t,  \t'f50a107819b5454787361b39c2efac1b'\t\t,  \t'f5149b96a7b14f328b07d57a7a07dfc6'\t\t,  \t'f5da6a5d1e00422a9e5855d86077caea'\t\t,  \t'f67cb6fb492f4f97af6e384b47361de5'\t\t,  \t'f6d952d252c344f59ae09779f01b196b'\t\t,  \t'f78d6c7d0cf84a12a455b974f6d5913b'\t\t,  \t'f853a44012874fc0a48c59d2b247938e'\t\t,  \t'f9338e6a17f14500b05e99e32c7855dd'\t\t,  \t'f990ff92d5a14b24af9c40d59e4ae468'\t\t,  \t'f9d313d27dee479cb6a5d2341697e8f6'\t\t,  \t'fa9b84f89f8f421f966aa4f929e932f2'\t\t,  \t'fb4ee90dfd014fbaaac2069cd5230534'\t\t,  \t'fb947c16b3b24a6db1ed0726f195e212'\t\t,  \t'fbe83b660372443c86168b1d2bb66c65'\t\t,  \t'fd15d5cc48c34ddaa265f281f1cc7b61'\t\t,  \t'fe305131af144fc7b68fb2ba3664304c'\t\t,  \t'fe34f92cd6d3407e9760b68342987617'\t\t,  \t'fe7fa8eb55bc4dcd86988b6e3006a358'\t\t,  \t'fe90ab3c0c444952834be5abbff97b62'\t\t,  \t'fef2221fbad84ca88c7fa6600b1d9fc9'\t\t,  \t'ff41b593422240d59f8cbac4be85f7a7'\t\t,  \t'ff68932ee06d45c0bcee4645d98323b7'\t\t,  \t'ffef6ef389d344068a48149bcf79c334'\t\t)", "analyze": ["-> Table scan on <temporary>  (cost=0.02..5.45 rows=237) (actual time=0.002..0.002 rows=0 loops=1)\n    -> Temporary table with deduplication  (cost=192.33..197.76 rows=237) (actual time=0.102..0.102 rows=0 loops=1)\n        -> Inner hash join (b.SPU_ID = d.SPU_ID)  (cost=168.64 rows=237) (actual time=0.062..0.062 rows=0 loops=1)\n            -> Index range scan on d using idx_spu_id, with index condition: (d.SPU_ID in ('04747b40ae994ac195d71a4c9ae069ee','0919549d112f4a4c9588e20d90d7c2b0','38e7bfef01ad4baf86cf441f986124a7','3df560d24f7f4da1869a5139fb97321a','3fe2c90bd42546138020e5a78fd748b1','56784e61a47e453ca1e69708658ee754','5de2c1235b2044848a7bab241c1e9708','6005c853d5f94902bf7f2ee5cdb50abb','6543837cdf1945e88f3763f6d74fcf28','75e2684bfbe24e8f852a7210403aa873','78ce6bb1bab64e029a5326dbe4d9efe1','80575cd7ce4542fea5eac90121dfc219','88f69c4406b349b48e1b37098c966169','9637933b761349949ed43a57243d7775','9f1c87066e3848758e2bffa403140520','a0f87564528846f8be9e21052bc90554','a8dec0ec1e674a89a0c6a81667bd1785','af521b66717e4c9495a0a85ea0afb818','b5a5d248418640509e431e3261d5243c','b81524aea45943a3ba66c61e683ea206','bdfd373bbabc4cc4b8dde793f88c18bf','bf553a0e94a54d028fed79336e85d15d','c383359bd03341a1a41ec732818fc5c1','cc3cb4f2dbba404b8c6fdc8aa35f75e1','ce1841f9d7b1466e8159f5ab06ba14cc','d57fc90d5b424593af15fb827247cca6','de3552e239b844bda72032a2f45c98ae','e4f666b87eae485983fed13f930b6868','fb31dabb34e441dfae1f9fdb9e6c7ae9','fe98e554f73144609f845baf0f9e1edb','005d6b35adc9413da83be8dc9d8d4001','005fa2ba0f1d4e048d39e1aa3236ab1e','0091c7d91ca94e14824632fe45f6e040','00cc81df81fa47d490deb8155dc59fac','00faa92bb265438d8b60f8e09eca532a','033b13391a9c4025b6ebb4b8fb9d0f46','03f95301f4684387998f918f4e674b9a','0525c37c830e41839db55ed28e52711e','05534f415b4d4b4fb61beefeeadcfbf3','065680a5f20d4b5093101fbd26edad29','06608524e4724a9eaf4cea0ea172c224','066dc2b6b63148f1aa41de2bc3860e0d','0688bd5678e3416584c48796077c1edd','0701cba94aba4598a77adb671fec76c1','0711d969526741c9b3dc306f2cf5e843','07b0fe5e131e4535a8f453a71305b1e6','0807e491dbec43f8bc13b24906d85f13','08423da16486442684c2fe4a40765a1a','0850bdaf59a7435aa28b5906569496b2','0862efe82503468ba6e0e6294c3b96de','08728c2e92314ac0bd88f97a29cd36d8','0a94cd17e5394959afd0187e899c2310','0b0aee7bf3444d2c8510b6552e210306','0b8e5f90481a4a1f814de1d143ae193e','0cb3cef68369467cb20fff1885d0b92d','0db7b98103394aefaabb312d548156b4','0db8a9f4fcf74e72aa0f64b5611409bb','0de9ede64a274e0da153a48b2deb2e71','0df3549ef26a4528ad23ecb1a4fa3732','0fa8107c649f432bb0fa79ccbbe7f3a0','10de6519474d421fb73b077a56e7e9b8','10ec752b57964b6cb0d453d215a1f9e1','12ab6b9fa4d24fceb9708218c9570810','12df5d65195944d3aa42647df310c0f5','135f0698db324c0490e0701bc26ecde1','1444995d24f847bc803dc2c482fc2ef3','14964074aa9b49d4bb7125b809d90f9d','15f47edcef6d4b59965de5d9570ac1da','16ade9a4fa2e4127aa85c4e304229114','16cff956e1dd4c8a8f6ee646b3d81aa8','173fb211003746c1a96fbd33c1fedd94','1877905fabbb42ce81caf0b558f74a81','19a44a0adfa542cfa96e41a980c2a20a','19c4b6d73bbf4c2ebf700e8962c6bc21','1a8f68e559444d4f83be5e3f4b204ccd','1b9f76a874a3499d8d17a26ed4facd14','1babdcbbe0f8483fafa0304bf6fb6eee','1c7a852eaa6346af90936cfd030e3a6a','1d06476a618847c4a08aceac9179801c','1d29224feb2947cb95667585afcdba0e','1ee449fbf56f4a7083290ac8f896f9a2','1f0a07dbdc4e4adab47d9376013b18a7','1fe8586d804f4411b138afeb64a53730','1fe95dc98caf4ea4ba96edc416d32f9f','2014d42433204925b54c3e457d707814','2094e0208f234657b7c284d694dd8ddf','20cf33eef74a4f62911380022487d5aa','215e61f9c45643fbb28ce3af0720a34f','21fb1d2424fb476d81909685497d7ce3','222b7a6277a64144854cab2fb1150a16','228602c83c8f405bbd20c3ee34649d34','229bcadb5fe747179d0e3ca002a1275b','235c083d2a8d40678e2e3a4b2ed86cc4','2395e41278024b43a6e39cdb45e136bb','248e764e714146c09075ddf17bda4e0e','2765a567816b4ca29889f4aaee6a2f0a','27a1717c32774dffb5017cd263804e05','286bd6e29fec4c5aa10c9d50d84c1b48','28f6751f146f44549d57a2d8bcbad0fc','294712683fb04d4183ee388f47939bd0','2a164a43b07f47c481b64a1b03c94b50','2a3273a85aa149dc8d727c78dfac6bab','2a3457d9cbf84e52bfffcca800b35211','2adc3becb6354f9f8ad1b3bcddeadaa0','2f0fd159cc1c476fa5311f5d73e249fe','2f442f139d974e88bdd96782e348bf3b','2f5d965a17b34e23baa5c6bd2448197b','30eb160c183f4a1fad29c365b3cdc7da','3137addb4a0c4d07aca0e99445505f0a','313ce18d65fe41278cda09fdf2f42355','335eec5faf9743e2bf7887a0c39f7c08','33921c377ada48efae7efb5b719c2ad6','33ad47ad3858454cbb17b33da7f40f5f','3447cac5b41344eba6c2b07a0afcf1c9','34cbf863d9684617b2bc67d2edd5638d','35d214354e55444c941bb1f63afe61b0','3606e1d5ec45472cbfe5ba0c3c0ea1e1','362682f5c22041da91c5247f3b249715','3796dffb199446ffa8afd40d8aa02a26','37e101f0b8d94b469d74ed0846e76d33','39ab5235427547a983a79a8ef1af5763','39cbd2ac6fae4ab39c12cb08f575fcad','3a97095f71bd45d79988d80d3ffc56a7','3ca87bac38e74ca68765aac3131bfb25','3cb2e4f2e36f441e968284bb5418077e','3cd3fd2fa1bf46a6a81f412c7b16f9c3','3cf0851830fb4350b7968a4d5db4078a','3d5c26f442b74432a46df2f4c75d5b3b','3d6e74677c1244bba3ad8220e331a566','3dc1e1e3c2204e34a840d516ed9368e3','3e03b743fbc14807863341f088183de2','3e759dd443c34ceea1d92a77378c242e','3e825d25bfd94c9a9db3ca9cf28d3188','3f0e93b6e4ee4d3485521d34577d4834','3f1c17b4d1bb46d79bb347495fd538a0','3f3427b17be64ffba10d450dfa3bcfd8','3f5204b9f0d64b0daa09fb552ec0987b','3fd18b69c84c4595b63c7da985f44096','3ffdbfac9c7b4a93af102fed8deba63c','4065e313e159451596c2fde413a2177f','4135ecfee29548aa9bc8009695f46cb5','417a0d4deb4c4951970aa390f9a74fc2','42259b335b4c4c69bb5989cfa1b4b446','42bdde17e3b046148c0b0a55124673e2','42eb03e428694fdf8bbc75beeaa6ad59','42f89dc554e945dea5244a05f99e885d','4375d8e6d6de48f38cd80043d4e55ca8','43e8ff26503348f89ca0952ca07456fa','43f8d2bee9144ea18370088f9857a49f','44a631c914d8408a9df949d14acfcb71','44bacd5ae9cc41d8a2ac39fe09220530','44f481f842764fd09796993cea30a8c8','458c8e5de491437f9fed8dcbe223bdbe','45d1e4e8bfe04863b6e0760c4748bcd3','470e8b8022644b4b8f83a25488936a40','47578b7a57b243268b520f88f8292a38','48be8db456804ab5b403aee89a8ac06f','48f48fcc294541a193e84cb32c2ba61c','49d772f9dcec47f198ecce68c1839dbf','4a32c2e194f540cb9848c690915599c9','4a4080ed0f524636903685a7f00f7ab6','4a4c5371037c4ebb953ae3ffc96b7b8e','4aeebeb7cd044c85bd0fece3fce34bfb','4af97ecd851a4f30bf10407228a10b34','4c0e1027976843e4a4301c49cf1fac95','4c731a78f8e94722a729ee95cb12872c','4c82c5fe71c7400f822a8f43cfb0fd98','4cd32392ca324ea88ea79ade4f5132dc','4d1c0f89bf9b4d5f8fd7a38e96c75751','4d64e1b045944ed69b63908fbfe93635','4dc2cc7327fb4f6e903f104e4518c98b','4e59820c7afd46bfb558fc0549275abc','4edd5c3994774abeb46f11d33b617906','4f1175cbcd2c411a9a2dcefffb53c916','4f44eec7881844f79134f6254dbf4bc6','4fed7c4b61ff43eb9ffed0048c4c9fc3','5054f9aea98647a0a6b438655e7d21d2','50aef88c92484b2580317ed8148ab370','50efb45f8e88405db17bde4b57cdf6f7','5108208cdef64f518380963f279b81c5','516ab5ce05994675a43f3b94fcbd93c9','51dea27d64e24acfb55d50170646dd29','5208d10403b44192874694101aadf735','5271a6b2459f437b8bfce31aae1461ee','5377bd113f7f44e5a154d37081dda942','540c4a38fcca45e3a3f1401efa05ada9','5438a26412374ef2832ab8b21db42013','57144d4439244b3ea27e9564beb47537','5769da0bea2f4fc0a128e313f056d0bf','589ab446b44949b78958aa63cc5b36e9','597358b837584fae91f8e286933beb20','59af202fac8e4c22b8321bf39c51f2fc','5a0b43f488244246bed03b75d67353f4','5a1722c0bdd94f2eae9fe3239a1ecf51','5a5b59cd1d3f464aa5bc9d0b5c2678b5','5d99894d25a342358a320b133617a26f','5e0a88d007ec4dca945a33c4f31fbe0a','5e4b68e4b13e424e93024253fc80d4b7','5e56815e900c4081bdc1d20d1ac041d2','5e573649828743c288d620a9f8df1fb4','5ea2155c187a440ebcf8b1b8fd58b6f9','5ec0021dc5e043339057536b95fa9a59','5ec9d635dd194382b3ec8478b2cb94f4','5f04eaa25ab54d67899f801bc3477595','5f4caaa0ec28437599a2552461cb2abf','5ff76d7883504818a63352d590cdc06b','60ad71259bb1450690fc094fd09cf118','614b4a77264c4da182c4eb9aac9dc2cc','62af9a29bdb64594988ab5363c0b8dbd','62d55ac01f68478cb7ff0db5fc9931ad','638c47f4217448959b3abea0604c1e36','6412087d9a8d4e699aca26d831b6a117','641a9409453a48e79446f66b2c693e36','65cc812ba3f7483bbb29ced275ee28c0','66104c7cfdb84babbbb05dcbb62816ff','66ba1631a1334d139572e9d3ec6aebed','66ce0d47e4af40798750fdecc2707077','66ea83e65ede4ebe9986926ff7bab165','67040e6ff0f54b7fbd4ca5987925a754','677ffbd121954d6dbc7a1b4af0ce2e48','687f4986b35047e8a1a53e864ed9fb51','69232f68737c4abcabd96bbfd18ad0ba','6a4c7dc647754445884b861b3a1e083a','6a5651b1d4f144c49a17b58b2f07ee41','6ae8ca338d37447491cd5810d6794b97','6bf5a91e1f364da0b932476323eb3f99','6c52583f788f494ca2a6d702040a7f8b','6c5b284ca6d94a8f852317c485a6087c','6c6202ccdb6e4806ac384bf73c048dfa','6cf7a3db481c43f78870b8ba01ca65d5','6d1456cd862d4848ac54c123e953cd0d','6d70487872fc40a9bde0efccbc40e82c','6e2057b2b6fd49caba3f6d7a7accf694','6e2accaa36154b4b90afe2c07271039d','6ee4f8495a1442be907c70da3ea7336a','6f38bc8ca384497bb98f7b7995c017b5','6f923e4af1d7449caaad1805a34114e3','6fd12f7ba87b4474aff79180ea0e433b','70835b02e86149d98c752e61dd469aea','71dbcfae93b44bcab24ca37e41b5fc1e','723a5402361640bf8c1385f5be05c38b','72c4ffc6d4a440a09d047d5fa122930d','72c54bc1f30f4207805084d175d75636','72e9b7b96c65488fb0fa97eb283dc69a','73b1ee2e8c9c4e16922ffd84d25c5cda','744950e1c15844da8411965b98c591ec','75897efd84c844a69a45bbb419bfaccd','76d5ba4199184c9cb8b397e4f858c8f1','76fa2b8d700a459990740907a947a238','771866fa84594a118f50ccaf60f2cf56','7799f5cdc02948e1806db4b50b549060','7819e29f4ac24b2c83e7edd514d30524','78cc0fccdc4d41a7a3272565fc7b3572','79259ffb35174663a471e82dff63f5cc','794149c66ac2403580f5c5fdf4b790ad','79718bd828394519be4760ddfffa2aaa','79a94766d53c438dbd105dc7d7750225','7ad8577948e44f7894cd5f7d619a8b6e','7adfec033a164def983675019592cba6','7dcbe0ee6fab4902b79740d357d66661','7e1373c597ed415f8cd8d98c38ccfc0d','7ea7a65360ea40f9a0d1746e56a215ad','808bc35088bc48f7b41c0dae08f17b49','80a7aa1ff77d45a18b2da06128f2bcc2','80f45fb8737f4ff4b1e8f4876d6b8acb','816de2e53e46401189c5b4940720dab4','8236b474be014fad9378f69a0af83afd','823924e7eb4849949d2123e703cac343','8348defbedd5445091881af4b22f26bb','847effd848a14a489792e41b0742a9dc','84d2d3b58a1d410e9007a412552ea80f','87bbe86a5ee7440fb10f5849a4783c59','87c5b6ad4ce44b09b5f890f71d5ffd19','884875be698e479ca039643d2d26ac8a','888004d0bba0475d9ce0468d03adef89','88f16365c22b471b9549f4fbf5e28c23','8a75bc6f97784046bc9cb18af55e53e7','8aaf0d8010d64cb6a3e8b4e64cf44c04','8b4d42d911ca463b8db5907b6dfc18db','8b8ed47ec085404cbef71f8248768ca9','8beff31a1ed14fc0bb4031eac87cd524','8c17264e1e1841759ef1b92a48fc55c6','8c4594d31de54d3ebf940c9608d1b56f','8c73b1a41cff4b189e6b857b9de6e94a','8ca8409338004d8a83ffae431c81c7ae','8cbee0ec05e046aab217faf0c90b8ed8','8d2a82f758e140a98cd9b352933cd786','8d69519ce6354c2cb47df95204ab8159','8d72212910e34d6791bb05f0414fe023','8dea337365fa40649340b28d421e2d29','8e8c978229ee4cdb9ab18f82bf0704b8','8eba522e513247be8b5bdde09c494319','8ed209f7860248b1a7565f0d8301a1ec','8f48f70373054e43996aac4ab93b53d3','8f884a48f6084877a0692006c0e91049','8f9b0c11a6524faf87014551d9532f3e','901c0c1d47f54864b65e83d5ab4d8df3','90a49e7b1257491db8605ca3f12dad62','912eb5598331430d9f118b0f956d6d91','914f601a33fc40e2bd1524973ae9f8bd','915c7dd11c5e4db7a09989a9097327f2','92013dd19e9a4ad6a264d4f60dcd8ae8','93084c9474fc4d318dcc1410f3436f94','9462eb6fe8fe4c4ea335750115b21fc1','94a639b657ad470abe10eec179e84cad','952b289e44c84a93b3ccf7df89f53e9c','95eca78528de46cdac6a4e85ca89a6d0','9676e5eda8424a08ba3e70f4f5765760','978279be2e154d15bf27bc0d8e836d99','9788b8d7c2b443849be4acd0221a797f','978cd40ac3cd4ed3951838c8bdc33b7c','97c7e68c6fd94499bbe3542c88614e8f','97fcbb59ab2243af83d22162e83db910','98adc354f98a4b83859782d4f5472657','990891a8ebd245748f95251ba0e055d5','991b128c63b64cc9889e2466e5bb8967','996fea42f83c41978b5c927c70fd542e','998493025e2b4f0bbc7ceb3ff58767eb','9a1e1384e36d45e88e90f3f2af2b94a8','9a804e668983434eab80b4c4a4659437','9aa0f7a5fe1f45709ebdb85eb22f702b','9aeb02fdb5b949b4bc40c540581dc81b','9c2be6cbde4d4b5081c9b40146613971','9c58ee92bd4d4acc8ec771b2c2074503','9d8c5dc9966149319a7d63b8064d9e24','9edebbedbf414e86b0681b5f0717dd56','9f07b081e74249be8c89b0175156648a','9f29f7c53cda4a688431030b8795dbd5','9f9c800a73ae4d0ba3b378879fa5f8cb','a091110ddcd24e06941be0c0616cb494','a165f9a1acdb40da88f298f5186cfff7','a16ba644e45a4118b32981ff4c6d00e2','a197eb9156384ab28d5ce8a553467396','a24339e2c9584e609424d705f22a3b16','a28b65a48d6a4a009ec20b7c407a9ac0','a2e25da01b2d4960b0984c1254dc39a8','a3264b1d3db04d32b19fd1909eef1919','a39fb9c9f0ad40549c963c7cbc083e56','a49e4377c149444990c1671d5797aac6','a4d7cbbfc9f54a52a87c43990ebf9f87','a4de40428cae4c2cbcbfecc4dd2a6edf','a592edeeed0342258afab4586978b51f','a5c8a8ee308c4708b9aeacb9642b5b11','a5dcea826f8143b7a01e3271c696cc67','a5f1451b76a34737834cd5d336c3558a','a5f6b8b90b964d9b820b50595e0a3048','a612611d403543e1972438decd310a2f','a64d441f60254144a7c48e60018ceced','a68cdc9196944cb78c19a58368352d1e','a83ba5e3285a472590cfa059edd6b2d9','a95740dd2518415581c6f0f93a41cde8','a96ee5a4b55149819b57aa0e8781afc1','a97e31768d6b42739aae022300291aab','a9c0885e7227467c928a9d68bc675d99','a9e0590b885d4a1fa3eca755d4cb4988','aa04a2f3b52c47e8bc3391fd9b9883a1','aaf192c23a3f49d4928164aa3142091f','ab2aa74d675042f68087425ff6faf2dc','ab822c2f45614755bf532f88d718a3ac','ad3a5ad802fe4ba095ee48b78f971588','ad43d382b80d4c58ba297b787093d2e7','ad6ca71bdaa64733b34c6b7c76308fb1','ae81450ff5764a7b884d0b75f67ff26c','aeb77573a75f44f18c346971aa42caaa','aee40181266c4c2d9a9f1be8a4b03432','af3451a3eaf84575a92fa5e63e6d8453','afdc77e74e4b490b865b4854f538f48e','b0946329bc2042a2b72c42d9faeea0ef','b0974f23b6654f81ae3d7317c3c5e5ba','b1973f15cdc343cd8ce4f5b55bcf478f','b1d4ea3739194f63b3c13cf5cd1fab05','b27399c3677a4293ac61ca7e8da21f78','b2bade45584741b4b85d9593aefa17e4','b2bc38eb6afb45bf9ec15e56640c3d40','b2fd9942224e407fbfbc5c9992c07d49','b3aa5c4ef62749e5ab0ed82e7f990df0','b3e2454cf3304033adac47608bff5cd0','b44c1728b4c640c5beadb7ac6a6fa46f','b46d0d5eb54641b29312452f969049d6','b47b597394d8485eab12742493b2643e','b48c787acc6b4fecbc31d09c9fd87e3e','b48e0eab65b94a14910f3bed5fac0afe','b5916b1e48e84669a33f24d2441508dd','b59e4ac6214e48af9c7af431d78cb83c','b5b9b41b244f42159f3ed3450fb4045a','b5e515c849874642adc39ea5dd1995b2','b69d3fa048b64969b68a1728d069fa19','b6fdbf4f862941a89d0e508fc4e272be','b71af5e68be84ba9b69ea05210476a7c','b75b24741a93458fad200fb00c25d967','b76c0b4a22fa40ad9b6900248156246b','b7bbb2db98b94360866d51ece8769e75','b8507c29cf574175a39cd4facbc0a240','b90e96646ee94efeacaeb5150315de91','b9691d37786747c888bb24f925de4e51','b97e5349e31243d1a56487b3a36c8942','ba59ec65ff6b41ae85c2e7238db74b3f','bb9dc644b8fc4fb0bf6a010d04c6fd79','bbe0cc5eb66d4a05b2bdf3ea01715340','bd7ce9dae40946588096add14e6a71a2','bdec6af450724d8d8ca3a3bc536c09f0','bf163703c3b54d53b5198f1c75734a08','bf288def5ec04493b3ea5410c8aaf93e','bf5de965dbb44ccb8c60ff60479810bc','bf9da3e8078b46c4aa5e32bfa92c983f','bfda52539b2d4b0093b208b174cce5c4','bffc1a5fc8264805a0d898e48473ea37','c07853e79adf4eb1adf7efc07728aad4','c0a8bf62de33446ba26308b7f7c4eb65','c0b1634305e4420987bf0faeca512a61','c28cc6a98de0453e9d559bae94dc52de','c2a67347257d4889b825a014e1b4779f','c46514b2d7aa452aadea0e478aa61152','c49219574b5948729494d49e9d276c4a','c4f8e58be695427d9cd66ea9816a7069','c5a119cfe0a64812b8bc9860b8e1e489','c60bcd96a40f4119bb6fc8daa63deffe','c64eabeb1ebf4b98a63af43b3ce93f62','c6e8b9b152494e8ba4e2fcf2d161df72','c7996a039ceb4925818071712474d346','c7c1a33dcab94c8ab77b61428b5aef0a','c82d7efdf7e14353b97c9ab94b318e3e','c990777a5e7e47989d0ec791cfefd112','ca81b44997394e809690c17fd70c72cb','ca8e019b71b34ce49fa1cc61d6eb73f7','caa9dd455d4c40d69370fce397a0d4b0','cacbe0c1a6d04212bf5311033c8b4bfc','cb0c9fe24cb844788d1d02380789353d','cb7d1c8fee834a7c90464d2650aeebd2','cbebc59b38be4b1bb45ea4da9d0db7f0','cc3290c79f314a069e8ffd562eb4fe10','cc588985061641b9b1118239e1272478','cdc740a4702344bc9efdcc2eb01e1619','ce00917a7fe64ead8bc7392333e0ebc0','ce25291695604334b0a9e3efd2a237c8','ce42c45979fb427f980ea933b073538d','ce80c6f7d16140d19c491f658ae914ad','ceaf0969ed3d48b1b1fad2039d4944e7','cf1125687f984879bfe2897c00e07b7e','cf20b2859cd8481d81b8bf04737cc706','cf4f903fef2e46f8903cae21259d4fd1','cfe444ae44ce40b89ad4adafc9b5382b','d008405c82864fa2ac45c4e55ebb264f','d0132c10dd564cc2a88725e0a7e8f62f','d02787f0d6604633aabf4ec9e8912df8','d052f368f84d4d1fa663da2c9e91e71b','d0a1619e9eee4cd5a29f7d4611d73b78','d0ed748d52f14d33aea110ae996ba33e','d10bfc94131444c19fdc98f93c5b0174','d17b1b4ab2da421eb716e10ecd75ea07','d1d50ff163764782a284878d06a628fa','d266dede0bbe4bf396affa4eec978b5f','d2725b1b2dec4e959c02e65e4ff54719','d30a335020684f02a0f3ea48fd5855df','d3797e03beab48779509f2f60115e622','d4a64de004c449b28bf4a3cdc5efbc50','d60732a4721b416e8c30ca1034bd402a','d71f4739efb0497293d646b8aaeab8e7','d80c36a920fe48adac9a3740b2ce8438','d87ade3abf2f4169a88de112e21239da','d87c50598e6544799010c059e11b2ffe','d8bc0e7155364449a48d25857085c0e9','d95bbfb5b855444ba37dcb7aed5862dc','dc5ffa53576f426c9fc0f87585246c12','dd5c17468d6a48a3b895b5a5bbcedf6e','de165962b85e484b8254dbc5c6bcddd5','df5c915a34e845ed85479e2fe36d8a8b','df9296d0d5014ef5b2e081df92808ba1','df998a3bc0f04cb38c3e891a620c9c9c','e079627a34f94fa8b050add964ba20b0','e092f746b18d4ab0be53c231d0779b31','e0ccd396c13b413a82f7b8ee53378cd1','e17b513bb7fb4ee4b161a015a9ac34b5','e1f1af2de9f64cfd8cf5665618dcb83b','e2516e70faf546bc839a944972be6187','e2d0fff35e4340c0895fd2354472753d','e35d3ef0f2ad4286b424253cd1521bc3','e37a054c53904e61bdf94e541c4ee13a','e42c9947a12e46f2beea7f86c2e24351','e5558ab548fb4ed5a4caed0c7af24139','e5883a219ebf4105b12ea7a7f0b38c61','e59c2d21b99346c7b0547bd097c61e99','e6437107650d4f0ea1b06523d962776a','e690cc84c6264b5382ebd3d1f71d8f1c','e6a0b0ae2e4f41d49bd65b106a3378e2','e7a5524e65c74b3684e6f062e39e648f','e97cb4c1e2bc4492be40b8713551d136','ea2b58d531224cd18b81cf5c9ccd4c02','ea8f3fe3fef6447ab0f55283bad76783','eaa3bfd746a84667adc9828586d18c14','eac28bbfd14a418d83656f8c67335215','eaf5b493d43944db92ee6fd1977537da','eb0f2760a4c24a7e9bce0fb31d0d9e61','eb347e40866d42799f8f405fed808a43','eb5ef97ec55e42cb9e5087a6e47871c2','ebecec0ab14f409faaf882aa60bd9961','ec67ae4e288b42339f8ce60473a004e5','eca4a7aec4454c549d09d6fe5ee39563','eca8a82b744540a0b09d59ff826d1fe2','ed1f75e653cd4a99899fedf23f376416','eeb0b1f256e04c8ab20f67a5946f41d6','eeb14d800654442e948e600b10024486','eee09cef0e46436388b0738e7a2ec8b9','ef458dabecd7417c8eb79af6e9110b29','ef989cf71c8b44d2916d73b7a6a60f98','efba4a2dd698462caa23fba08ca2d9d0','efbf1aaf40f947049a5b0ebda5057b0d','efd2419b461e45f8bf5eb4a0dd915f07','eff77cef4012434ea0619280c8965a0c','f030a4ac3bfb43c297080a58197e424a','f05e55f4922a43b9b1054d073c160628','f0794dc4fcfb4f1b8b0f83073e60acb6','f0b6c577f3b54b4f93ee0a50422c9ce2','f207d7741d37406389c2aa0c0ba40938','f244346f8ba44b7ebaf91894d1c64212','f25aeee5c6fc4933846774573ec318fe','f26306fbc9b042439a2bc29dd96c277b','f26c9bf401f941bba8ae7de393620e57','f3648a8b9b4544ff90ba3bc9031e8813','f3ccc616929a40229dcb94e62958604e','f3db912afac14ad089883155f9194f3b','f489c8447a6444d1aba6a596fdc44108','f4c9d2b7c813416380018b294f09bce4','f4eca417af0f4efd8cf6a67b2475819a','f50a107819b5454787361b39c2efac1b','f5149b96a7b14f328b07d57a7a07dfc6','f5da6a5d1e00422a9e5855d86077caea','f67cb6fb492f4f97af6e384b47361de5','f6d952d252c344f59ae09779f01b196b','f78d6c7d0cf84a12a455b974f6d5913b','f853a44012874fc0a48c59d2b247938e','f9338e6a17f14500b05e99e32c7855dd','f990ff92d5a14b24af9c40d59e4ae468','f9d313d27dee479cb6a5d2341697e8f6','fa9b84f89f8f421f966aa4f929e932f2','fb4ee90dfd014fbaaac2069cd5230534','fb947c16b3b24a6db1ed0726f195e212','fbe83b660372443c86168b1d2bb66c65','fd15d5cc48c34ddaa265f281f1cc7b61','fe305131af144fc7b68fb2ba3664304c','fe34f92cd6d3407e9760b68342987617','fe7fa8eb55bc4dcd86988b6e3006a358','fe90ab3c0c444952834be5abbff97b62','fef2221fbad84ca88c7fa6600b1d9fc9','ff41b593422240d59f8cbac4be85f7a7','ff68932ee06d45c0bcee4645d98323b7','ffef6ef389d344068a48149bcf79c334'))  (cost=456.65 rows=547) (never executed)\n            -> Hash\n                -> Nested loop inner join  (cost=2.10 rows=0) (actual time=0.055..0.055 rows=0 loops=1)\n                    -> Filter: ((a.STATE = 1) and (a.CONTRACT_ID in ('7a01bab3a0494567a93a691a8f1ce731','fc3977155f3143b2848123634093154f','d836f43aacf3481e91f30539fe1545a1')))  (cost=1.36 rows=0) (actual time=0.054..0.054 rows=0 loops=1)\n                        -> Index range scan on a using PRIMARY  (cost=1.36 rows=3) (actual time=0.053..0.053 rows=0 loops=1)\n                    -> Filter: ((b.STATE = 1) and (a.CONTRACT_ID = b.CONTRACT_ID))  (cost=1.50 rows=1) (never executed)\n                        -> Index lookup on b using PRIMARY (CONTRACT_ID=a.CONTRACT_ID)  (cost=1.50 rows=14) (never executed)\n"]}, {"sql": " SELECT DISTINCT d.SKU_ID AS skuId, d.SPU_ID AS spuId, d.VERSION AS version, d.SKU_CODE AS skuCode, d.SKU_NAME AS skuName, d.SKU_IMAGE AS skuImage, d.SKU_ATTR AS skuAttr, d.PRICE AS price, d.PRO_PRICE AS proPrice, d.PRO_DISCOUNT AS proDiscount, d.PRO_PREFERENTIAL AS proPreferential, d.PRO_FEE AS proFee, d.DEPT_CODE AS deptCode, d.CREATE_INFO AS createInfo, d.CREATE_TIME AS createTime, d.CREATE_BY AS createBy, d.UPDATE_INFO AS updateInfo, d.UPDATE_TIME AS updateTime, d.UPDATE_BY AS updateBy, d.REMARK1 AS remark1, d.REMARK2 AS remark2, d.REMARK3 AS remark3, d.REMARK4 AS remark4, d.REMARK5 AS remark5, d.REMARK6 AS remark6, d.REMARK7 AS remark7, d.REMARK8 AS remark8 FROM pro_supplier_contract AS a INNER JOIN pro_supplier_contract_spu AS b ON a.CONTRACT_ID = b.CONTRACT_ID INNER JOIN pro_sku_info_detail AS d ON b.SPU_ID = d.SPU_ID WHERE a.STATE = 1   AND b.STATE = 1        AND a.CONTRACT_ID IN \t\t(  \t'7a01bab3a0494567a93a691a8f1ce731'\t\t,  \t'fc3977155f3143b2848123634093154f'\t\t,  \t'd836f43aacf3481e91f30539fe1545a1'\t\t)   AND d.SPU_ID IN \t\t(  \t'04747b40ae994ac195d71a4c9ae069ee'\t\t,  \t'0919549d112f4a4c9588e20d90d7c2b0'\t\t,  \t'38e7bfef01ad4baf86cf441f986124a7'\t\t,  \t'3df560d24f7f4da1869a5139fb97321a'\t\t,  \t'3fe2c90bd42546138020e5a78fd748b1'\t\t,  \t'56784e61a47e453ca1e69708658ee754'\t\t,  \t'5de2c1235b2044848a7bab241c1e9708'\t\t,  \t'6005c853d5f94902bf7f2ee5cdb50abb'\t\t,  \t'6543837cdf1945e88f3763f6d74fcf28'\t\t,  \t'75e2684bfbe24e8f852a7210403aa873'\t\t,  \t'78ce6bb1bab64e029a5326dbe4d9efe1'\t\t,  \t'80575cd7ce4542fea5eac90121dfc219'\t\t,  \t'88f69c4406b349b48e1b37098c966169'\t\t,  \t'9637933b761349949ed43a57243d7775'\t\t,  \t'9f1c87066e3848758e2bffa403140520'\t\t,  \t'a0f87564528846f8be9e21052bc90554'\t\t,  \t'a8dec0ec1e674a89a0c6a81667bd1785'\t\t,  \t'af521b66717e4c9495a0a85ea0afb818'\t\t,  \t'b5a5d248418640509e431e3261d5243c'\t\t,  \t'b81524aea45943a3ba66c61e683ea206'\t\t,  \t'bdfd373bbabc4cc4b8dde793f88c18bf'\t\t,  \t'bf553a0e94a54d028fed79336e85d15d'\t\t,  \t'c383359bd03341a1a41ec732818fc5c1'\t\t,  \t'cc3cb4f2dbba404b8c6fdc8aa35f75e1'\t\t,  \t'ce1841f9d7b1466e8159f5ab06ba14cc'\t\t,  \t'd57fc90d5b424593af15fb827247cca6'\t\t,  \t'de3552e239b844bda72032a2f45c98ae'\t\t,  \t'e4f666b87eae485983fed13f930b6868'\t\t,  \t'fb31dabb34e441dfae1f9fdb9e6c7ae9'\t\t,  \t'fe98e554f73144609f845baf0f9e1edb'\t\t,  \t'005d6b35adc9413da83be8dc9d8d4001'\t\t,  \t'005fa2ba0f1d4e048d39e1aa3236ab1e'\t\t,  \t'0091c7d91ca94e14824632fe45f6e040'\t\t,  \t'00cc81df81fa47d490deb8155dc59fac'\t\t,  \t'00faa92bb265438d8b60f8e09eca532a'\t\t,  \t'033b13391a9c4025b6ebb4b8fb9d0f46'\t\t,  \t'03f95301f4684387998f918f4e674b9a'\t\t,  \t'0525c37c830e41839db55ed28e52711e'\t\t,  \t'05534f415b4d4b4fb61beefeeadcfbf3'\t\t,  \t'065680a5f20d4b5093101fbd26edad29'\t\t,  \t'06608524e4724a9eaf4cea0ea172c224'\t\t,  \t'066dc2b6b63148f1aa41de2bc3860e0d'\t\t,  \t'0688bd5678e3416584c48796077c1edd'\t\t,  \t'0701cba94aba4598a77adb671fec76c1'\t\t,  \t'0711d969526741c9b3dc306f2cf5e843'\t\t,  \t'07b0fe5e131e4535a8f453a71305b1e6'\t\t,  \t'0807e491dbec43f8bc13b24906d85f13'\t\t,  \t'08423da16486442684c2fe4a40765a1a'\t\t,  \t'0850bdaf59a7435aa28b5906569496b2'\t\t,  \t'0862efe82503468ba6e0e6294c3b96de'\t\t,  \t'08728c2e92314ac0bd88f97a29cd36d8'\t\t,  \t'0a94cd17e5394959afd0187e899c2310'\t\t,  \t'0b0aee7bf3444d2c8510b6552e210306'\t\t,  \t'0b8e5f90481a4a1f814de1d143ae193e'\t\t,  \t'0cb3cef68369467cb20fff1885d0b92d'\t\t,  \t'0db7b98103394aefaabb312d548156b4'\t\t,  \t'0db8a9f4fcf74e72aa0f64b5611409bb'\t\t,  \t'0de9ede64a274e0da153a48b2deb2e71'\t\t,  \t'0df3549ef26a4528ad23ecb1a4fa3732'\t\t,  \t'0fa8107c649f432bb0fa79ccbbe7f3a0'\t\t,  \t'10de6519474d421fb73b077a56e7e9b8'\t\t,  \t'10ec752b57964b6cb0d453d215a1f9e1'\t\t,  \t'12ab6b9fa4d24fceb9708218c9570810'\t\t,  \t'12df5d65195944d3aa42647df310c0f5'\t\t,  \t'135f0698db324c0490e0701bc26ecde1'\t\t,  \t'1444995d24f847bc803dc2c482fc2ef3'\t\t,  \t'14964074aa9b49d4bb7125b809d90f9d'\t\t,  \t'15f47edcef6d4b59965de5d9570ac1da'\t\t,  \t'16ade9a4fa2e4127aa85c4e304229114'\t\t,  \t'16cff956e1dd4c8a8f6ee646b3d81aa8'\t\t,  \t'173fb211003746c1a96fbd33c1fedd94'\t\t,  \t'1877905fabbb42ce81caf0b558f74a81'\t\t,  \t'19a44a0adfa542cfa96e41a980c2a20a'\t\t,  \t'19c4b6d73bbf4c2ebf700e8962c6bc21'\t\t,  \t'1a8f68e559444d4f83be5e3f4b204ccd'\t\t,  \t'1b9f76a874a3499d8d17a26ed4facd14'\t\t,  \t'1babdcbbe0f8483fafa0304bf6fb6eee'\t\t,  \t'1c7a852eaa6346af90936cfd030e3a6a'\t\t,  \t'1d06476a618847c4a08aceac9179801c'\t\t,  \t'1d29224feb2947cb95667585afcdba0e'\t\t,  \t'1ee449fbf56f4a7083290ac8f896f9a2'\t\t,  \t'1f0a07dbdc4e4adab47d9376013b18a7'\t\t,  \t'1fe8586d804f4411b138afeb64a53730'\t\t,  \t'1fe95dc98caf4ea4ba96edc416d32f9f'\t\t,  \t'2014d42433204925b54c3e457d707814'\t\t,  \t'2094e0208f234657b7c284d694dd8ddf'\t\t,  \t'20cf33eef74a4f62911380022487d5aa'\t\t,  \t'215e61f9c45643fbb28ce3af0720a34f'\t\t,  \t'21fb1d2424fb476d81909685497d7ce3'\t\t,  \t'222b7a6277a64144854cab2fb1150a16'\t\t,  \t'228602c83c8f405bbd20c3ee34649d34'\t\t,  \t'229bcadb5fe747179d0e3ca002a1275b'\t\t,  \t'235c083d2a8d40678e2e3a4b2ed86cc4'\t\t,  \t'2395e41278024b43a6e39cdb45e136bb'\t\t,  \t'248e764e714146c09075ddf17bda4e0e'\t\t,  \t'2765a567816b4ca29889f4aaee6a2f0a'\t\t,  \t'27a1717c32774dffb5017cd263804e05'\t\t,  \t'286bd6e29fec4c5aa10c9d50d84c1b48'\t\t,  \t'28f6751f146f44549d57a2d8bcbad0fc'\t\t,  \t'294712683fb04d4183ee388f47939bd0'\t\t,  \t'2a164a43b07f47c481b64a1b03c94b50'\t\t,  \t'2a3273a85aa149dc8d727c78dfac6bab'\t\t,  \t'2a3457d9cbf84e52bfffcca800b35211'\t\t,  \t'2adc3becb6354f9f8ad1b3bcddeadaa0'\t\t,  \t'2f0fd159cc1c476fa5311f5d73e249fe'\t\t,  \t'2f442f139d974e88bdd96782e348bf3b'\t\t,  \t'2f5d965a17b34e23baa5c6bd2448197b'\t\t,  \t'30eb160c183f4a1fad29c365b3cdc7da'\t\t,  \t'3137addb4a0c4d07aca0e99445505f0a'\t\t,  \t'313ce18d65fe41278cda09fdf2f42355'\t\t,  \t'335eec5faf9743e2bf7887a0c39f7c08'\t\t,  \t'33921c377ada48efae7efb5b719c2ad6'\t\t,  \t'33ad47ad3858454cbb17b33da7f40f5f'\t\t,  \t'3447cac5b41344eba6c2b07a0afcf1c9'\t\t,  \t'34cbf863d9684617b2bc67d2edd5638d'\t\t,  \t'35d214354e55444c941bb1f63afe61b0'\t\t,  \t'3606e1d5ec45472cbfe5ba0c3c0ea1e1'\t\t,  \t'362682f5c22041da91c5247f3b249715'\t\t,  \t'3796dffb199446ffa8afd40d8aa02a26'\t\t,  \t'37e101f0b8d94b469d74ed0846e76d33'\t\t,  \t'39ab5235427547a983a79a8ef1af5763'\t\t,  \t'39cbd2ac6fae4ab39c12cb08f575fcad'\t\t,  \t'3a97095f71bd45d79988d80d3ffc56a7'\t\t,  \t'3ca87bac38e74ca68765aac3131bfb25'\t\t,  \t'3cb2e4f2e36f441e968284bb5418077e'\t\t,  \t'3cd3fd2fa1bf46a6a81f412c7b16f9c3'\t\t,  \t'3cf0851830fb4350b7968a4d5db4078a'\t\t,  \t'3d5c26f442b74432a46df2f4c75d5b3b'\t\t,  \t'3d6e74677c1244bba3ad8220e331a566'\t\t,  \t'3dc1e1e3c2204e34a840d516ed9368e3'\t\t,  \t'3e03b743fbc14807863341f088183de2'\t\t,  \t'3e759dd443c34ceea1d92a77378c242e'\t\t,  \t'3e825d25bfd94c9a9db3ca9cf28d3188'\t\t,  \t'3f0e93b6e4ee4d3485521d34577d4834'\t\t,  \t'3f1c17b4d1bb46d79bb347495fd538a0'\t\t,  \t'3f3427b17be64ffba10d450dfa3bcfd8'\t\t,  \t'3f5204b9f0d64b0daa09fb552ec0987b'\t\t,  \t'3fd18b69c84c4595b63c7da985f44096'\t\t,  \t'3ffdbfac9c7b4a93af102fed8deba63c'\t\t,  \t'4065e313e159451596c2fde413a2177f'\t\t,  \t'4135ecfee29548aa9bc8009695f46cb5'\t\t,  \t'417a0d4deb4c4951970aa390f9a74fc2'\t\t,  \t'42259b335b4c4c69bb5989cfa1b4b446'\t\t,  \t'42bdde17e3b046148c0b0a55124673e2'\t\t,  \t'42eb03e428694fdf8bbc75beeaa6ad59'\t\t,  \t'42f89dc554e945dea5244a05f99e885d'\t\t,  \t'4375d8e6d6de48f38cd80043d4e55ca8'\t\t,  \t'43e8ff26503348f89ca0952ca07456fa'\t\t,  \t'43f8d2bee9144ea18370088f9857a49f'\t\t,  \t'44a631c914d8408a9df949d14acfcb71'\t\t,  \t'44bacd5ae9cc41d8a2ac39fe09220530'\t\t,  \t'44f481f842764fd09796993cea30a8c8'\t\t,  \t'458c8e5de491437f9fed8dcbe223bdbe'\t\t,  \t'45d1e4e8bfe04863b6e0760c4748bcd3'\t\t,  \t'470e8b8022644b4b8f83a25488936a40'\t\t,  \t'47578b7a57b243268b520f88f8292a38'\t\t,  \t'48be8db456804ab5b403aee89a8ac06f'\t\t,  \t'48f48fcc294541a193e84cb32c2ba61c'\t\t,  \t'49d772f9dcec47f198ecce68c1839dbf'\t\t,  \t'4a32c2e194f540cb9848c690915599c9'\t\t,  \t'4a4080ed0f524636903685a7f00f7ab6'\t\t,  \t'4a4c5371037c4ebb953ae3ffc96b7b8e'\t\t,  \t'4aeebeb7cd044c85bd0fece3fce34bfb'\t\t,  \t'4af97ecd851a4f30bf10407228a10b34'\t\t,  \t'4c0e1027976843e4a4301c49cf1fac95'\t\t,  \t'4c731a78f8e94722a729ee95cb12872c'\t\t,  \t'4c82c5fe71c7400f822a8f43cfb0fd98'\t\t,  \t'4cd32392ca324ea88ea79ade4f5132dc'\t\t,  \t'4d1c0f89bf9b4d5f8fd7a38e96c75751'\t\t,  \t'4d64e1b045944ed69b63908fbfe93635'\t\t,  \t'4dc2cc7327fb4f6e903f104e4518c98b'\t\t,  \t'4e59820c7afd46bfb558fc0549275abc'\t\t,  \t'4edd5c3994774abeb46f11d33b617906'\t\t,  \t'4f1175cbcd2c411a9a2dcefffb53c916'\t\t,  \t'4f44eec7881844f79134f6254dbf4bc6'\t\t,  \t'4fed7c4b61ff43eb9ffed0048c4c9fc3'\t\t,  \t'5054f9aea98647a0a6b438655e7d21d2'\t\t,  \t'50aef88c92484b2580317ed8148ab370'\t\t,  \t'50efb45f8e88405db17bde4b57cdf6f7'\t\t,  \t'5108208cdef64f518380963f279b81c5'\t\t,  \t'516ab5ce05994675a43f3b94fcbd93c9'\t\t,  \t'51dea27d64e24acfb55d50170646dd29'\t\t,  \t'5208d10403b44192874694101aadf735'\t\t,  \t'5271a6b2459f437b8bfce31aae1461ee'\t\t,  \t'5377bd113f7f44e5a154d37081dda942'\t\t,  \t'540c4a38fcca45e3a3f1401efa05ada9'\t\t,  \t'5438a26412374ef2832ab8b21db42013'\t\t,  \t'57144d4439244b3ea27e9564beb47537'\t\t,  \t'5769da0bea2f4fc0a128e313f056d0bf'\t\t,  \t'589ab446b44949b78958aa63cc5b36e9'\t\t,  \t'597358b837584fae91f8e286933beb20'\t\t,  \t'59af202fac8e4c22b8321bf39c51f2fc'\t\t,  \t'5a0b43f488244246bed03b75d67353f4'\t\t,  \t'5a1722c0bdd94f2eae9fe3239a1ecf51'\t\t,  \t'5a5b59cd1d3f464aa5bc9d0b5c2678b5'\t\t,  \t'5d99894d25a342358a320b133617a26f'\t\t,  \t'5e0a88d007ec4dca945a33c4f31fbe0a'\t\t,  \t'5e4b68e4b13e424e93024253fc80d4b7'\t\t,  \t'5e56815e900c4081bdc1d20d1ac041d2'\t\t,  \t'5e573649828743c288d620a9f8df1fb4'\t\t,  \t'5ea2155c187a440ebcf8b1b8fd58b6f9'\t\t,  \t'5ec0021dc5e043339057536b95fa9a59'\t\t,  \t'5ec9d635dd194382b3ec8478b2cb94f4'\t\t,  \t'5f04eaa25ab54d67899f801bc3477595'\t\t,  \t'5f4caaa0ec28437599a2552461cb2abf'\t\t,  \t'5ff76d7883504818a63352d590cdc06b'\t\t,  \t'60ad71259bb1450690fc094fd09cf118'\t\t,  \t'614b4a77264c4da182c4eb9aac9dc2cc'\t\t,  \t'62af9a29bdb64594988ab5363c0b8dbd'\t\t,  \t'62d55ac01f68478cb7ff0db5fc9931ad'\t\t,  \t'638c47f4217448959b3abea0604c1e36'\t\t,  \t'6412087d9a8d4e699aca26d831b6a117'\t\t,  \t'641a9409453a48e79446f66b2c693e36'\t\t,  \t'65cc812ba3f7483bbb29ced275ee28c0'\t\t,  \t'66104c7cfdb84babbbb05dcbb62816ff'\t\t,  \t'66ba1631a1334d139572e9d3ec6aebed'\t\t,  \t'66ce0d47e4af40798750fdecc2707077'\t\t,  \t'66ea83e65ede4ebe9986926ff7bab165'\t\t,  \t'67040e6ff0f54b7fbd4ca5987925a754'\t\t,  \t'677ffbd121954d6dbc7a1b4af0ce2e48'\t\t,  \t'687f4986b35047e8a1a53e864ed9fb51'\t\t,  \t'69232f68737c4abcabd96bbfd18ad0ba'\t\t,  \t'6a4c7dc647754445884b861b3a1e083a'\t\t,  \t'6a5651b1d4f144c49a17b58b2f07ee41'\t\t,  \t'6ae8ca338d37447491cd5810d6794b97'\t\t,  \t'6bf5a91e1f364da0b932476323eb3f99'\t\t,  \t'6c52583f788f494ca2a6d702040a7f8b'\t\t,  \t'6c5b284ca6d94a8f852317c485a6087c'\t\t,  \t'6c6202ccdb6e4806ac384bf73c048dfa'\t\t,  \t'6cf7a3db481c43f78870b8ba01ca65d5'\t\t,  \t'6d1456cd862d4848ac54c123e953cd0d'\t\t,  \t'6d70487872fc40a9bde0efccbc40e82c'\t\t,  \t'6e2057b2b6fd49caba3f6d7a7accf694'\t\t,  \t'6e2accaa36154b4b90afe2c07271039d'\t\t,  \t'6ee4f8495a1442be907c70da3ea7336a'\t\t,  \t'6f38bc8ca384497bb98f7b7995c017b5'\t\t,  \t'6f923e4af1d7449caaad1805a34114e3'\t\t,  \t'6fd12f7ba87b4474aff79180ea0e433b'\t\t,  \t'70835b02e86149d98c752e61dd469aea'\t\t,  \t'71dbcfae93b44bcab24ca37e41b5fc1e'\t\t,  \t'723a5402361640bf8c1385f5be05c38b'\t\t,  \t'72c4ffc6d4a440a09d047d5fa122930d'\t\t,  \t'72c54bc1f30f4207805084d175d75636'\t\t,  \t'72e9b7b96c65488fb0fa97eb283dc69a'\t\t,  \t'73b1ee2e8c9c4e16922ffd84d25c5cda'\t\t,  \t'744950e1c15844da8411965b98c591ec'\t\t,  \t'75897efd84c844a69a45bbb419bfaccd'\t\t,  \t'76d5ba4199184c9cb8b397e4f858c8f1'\t\t,  \t'76fa2b8d700a459990740907a947a238'\t\t,  \t'771866fa84594a118f50ccaf60f2cf56'\t\t,  \t'7799f5cdc02948e1806db4b50b549060'\t\t,  \t'7819e29f4ac24b2c83e7edd514d30524'\t\t,  \t'78cc0fccdc4d41a7a3272565fc7b3572'\t\t,  \t'79259ffb35174663a471e82dff63f5cc'\t\t,  \t'794149c66ac2403580f5c5fdf4b790ad'\t\t,  \t'79718bd828394519be4760ddfffa2aaa'\t\t,  \t'79a94766d53c438dbd105dc7d7750225'\t\t,  \t'7ad8577948e44f7894cd5f7d619a8b6e'\t\t,  \t'7adfec033a164def983675019592cba6'\t\t,  \t'7dcbe0ee6fab4902b79740d357d66661'\t\t,  \t'7e1373c597ed415f8cd8d98c38ccfc0d'\t\t,  \t'7ea7a65360ea40f9a0d1746e56a215ad'\t\t,  \t'808bc35088bc48f7b41c0dae08f17b49'\t\t,  \t'80a7aa1ff77d45a18b2da06128f2bcc2'\t\t,  \t'80f45fb8737f4ff4b1e8f4876d6b8acb'\t\t,  \t'816de2e53e46401189c5b4940720dab4'\t\t,  \t'8236b474be014fad9378f69a0af83afd'\t\t,  \t'823924e7eb4849949d2123e703cac343'\t\t,  \t'8348defbedd5445091881af4b22f26bb'\t\t,  \t'847effd848a14a489792e41b0742a9dc'\t\t,  \t'84d2d3b58a1d410e9007a412552ea80f'\t\t,  \t'87bbe86a5ee7440fb10f5849a4783c59'\t\t,  \t'87c5b6ad4ce44b09b5f890f71d5ffd19'\t\t,  \t'884875be698e479ca039643d2d26ac8a'\t\t,  \t'888004d0bba0475d9ce0468d03adef89'\t\t,  \t'88f16365c22b471b9549f4fbf5e28c23'\t\t,  \t'8a75bc6f97784046bc9cb18af55e53e7'\t\t,  \t'8aaf0d8010d64cb6a3e8b4e64cf44c04'\t\t,  \t'8b4d42d911ca463b8db5907b6dfc18db'\t\t,  \t'8b8ed47ec085404cbef71f8248768ca9'\t\t,  \t'8beff31a1ed14fc0bb4031eac87cd524'\t\t,  \t'8c17264e1e1841759ef1b92a48fc55c6'\t\t,  \t'8c4594d31de54d3ebf940c9608d1b56f'\t\t,  \t'8c73b1a41cff4b189e6b857b9de6e94a'\t\t,  \t'8ca8409338004d8a83ffae431c81c7ae'\t\t,  \t'8cbee0ec05e046aab217faf0c90b8ed8'\t\t,  \t'8d2a82f758e140a98cd9b352933cd786'\t\t,  \t'8d69519ce6354c2cb47df95204ab8159'\t\t,  \t'8d72212910e34d6791bb05f0414fe023'\t\t,  \t'8dea337365fa40649340b28d421e2d29'\t\t,  \t'8e8c978229ee4cdb9ab18f82bf0704b8'\t\t,  \t'8eba522e513247be8b5bdde09c494319'\t\t,  \t'8ed209f7860248b1a7565f0d8301a1ec'\t\t,  \t'8f48f70373054e43996aac4ab93b53d3'\t\t,  \t'8f884a48f6084877a0692006c0e91049'\t\t,  \t'8f9b0c11a6524faf87014551d9532f3e'\t\t,  \t'901c0c1d47f54864b65e83d5ab4d8df3'\t\t,  \t'90a49e7b1257491db8605ca3f12dad62'\t\t,  \t'912eb5598331430d9f118b0f956d6d91'\t\t,  \t'914f601a33fc40e2bd1524973ae9f8bd'\t\t,  \t'915c7dd11c5e4db7a09989a9097327f2'\t\t,  \t'92013dd19e9a4ad6a264d4f60dcd8ae8'\t\t,  \t'93084c9474fc4d318dcc1410f3436f94'\t\t,  \t'9462eb6fe8fe4c4ea335750115b21fc1'\t\t,  \t'94a639b657ad470abe10eec179e84cad'\t\t,  \t'952b289e44c84a93b3ccf7df89f53e9c'\t\t,  \t'95eca78528de46cdac6a4e85ca89a6d0'\t\t,  \t'9676e5eda8424a08ba3e70f4f5765760'\t\t,  \t'978279be2e154d15bf27bc0d8e836d99'\t\t,  \t'9788b8d7c2b443849be4acd0221a797f'\t\t,  \t'978cd40ac3cd4ed3951838c8bdc33b7c'\t\t,  \t'97c7e68c6fd94499bbe3542c88614e8f'\t\t,  \t'97fcbb59ab2243af83d22162e83db910'\t\t,  \t'98adc354f98a4b83859782d4f5472657'\t\t,  \t'990891a8ebd245748f95251ba0e055d5'\t\t,  \t'991b128c63b64cc9889e2466e5bb8967'\t\t,  \t'996fea42f83c41978b5c927c70fd542e'\t\t,  \t'998493025e2b4f0bbc7ceb3ff58767eb'\t\t,  \t'9a1e1384e36d45e88e90f3f2af2b94a8'\t\t,  \t'9a804e668983434eab80b4c4a4659437'\t\t,  \t'9aa0f7a5fe1f45709ebdb85eb22f702b'\t\t,  \t'9aeb02fdb5b949b4bc40c540581dc81b'\t\t,  \t'9c2be6cbde4d4b5081c9b40146613971'\t\t,  \t'9c58ee92bd4d4acc8ec771b2c2074503'\t\t,  \t'9d8c5dc9966149319a7d63b8064d9e24'\t\t,  \t'9edebbedbf414e86b0681b5f0717dd56'\t\t,  \t'9f07b081e74249be8c89b0175156648a'\t\t,  \t'9f29f7c53cda4a688431030b8795dbd5'\t\t,  \t'9f9c800a73ae4d0ba3b378879fa5f8cb'\t\t,  \t'a091110ddcd24e06941be0c0616cb494'\t\t,  \t'a165f9a1acdb40da88f298f5186cfff7'\t\t,  \t'a16ba644e45a4118b32981ff4c6d00e2'\t\t,  \t'a197eb9156384ab28d5ce8a553467396'\t\t,  \t'a24339e2c9584e609424d705f22a3b16'\t\t,  \t'a28b65a48d6a4a009ec20b7c407a9ac0'\t\t,  \t'a2e25da01b2d4960b0984c1254dc39a8'\t\t,  \t'a3264b1d3db04d32b19fd1909eef1919'\t\t,  \t'a39fb9c9f0ad40549c963c7cbc083e56'\t\t,  \t'a49e4377c149444990c1671d5797aac6'\t\t,  \t'a4d7cbbfc9f54a52a87c43990ebf9f87'\t\t,  \t'a4de40428cae4c2cbcbfecc4dd2a6edf'\t\t,  \t'a592edeeed0342258afab4586978b51f'\t\t,  \t'a5c8a8ee308c4708b9aeacb9642b5b11'\t\t,  \t'a5dcea826f8143b7a01e3271c696cc67'\t\t,  \t'a5f1451b76a34737834cd5d336c3558a'\t\t,  \t'a5f6b8b90b964d9b820b50595e0a3048'\t\t,  \t'a612611d403543e1972438decd310a2f'\t\t,  \t'a64d441f60254144a7c48e60018ceced'\t\t,  \t'a68cdc9196944cb78c19a58368352d1e'\t\t,  \t'a83ba5e3285a472590cfa059edd6b2d9'\t\t,  \t'a95740dd2518415581c6f0f93a41cde8'\t\t,  \t'a96ee5a4b55149819b57aa0e8781afc1'\t\t,  \t'a97e31768d6b42739aae022300291aab'\t\t,  \t'a9c0885e7227467c928a9d68bc675d99'\t\t,  \t'a9e0590b885d4a1fa3eca755d4cb4988'\t\t,  \t'aa04a2f3b52c47e8bc3391fd9b9883a1'\t\t,  \t'aaf192c23a3f49d4928164aa3142091f'\t\t,  \t'ab2aa74d675042f68087425ff6faf2dc'\t\t,  \t'ab822c2f45614755bf532f88d718a3ac'\t\t,  \t'ad3a5ad802fe4ba095ee48b78f971588'\t\t,  \t'ad43d382b80d4c58ba297b787093d2e7'\t\t,  \t'ad6ca71bdaa64733b34c6b7c76308fb1'\t\t,  \t'ae81450ff5764a7b884d0b75f67ff26c'\t\t,  \t'aeb77573a75f44f18c346971aa42caaa'\t\t,  \t'aee40181266c4c2d9a9f1be8a4b03432'\t\t,  \t'af3451a3eaf84575a92fa5e63e6d8453'\t\t,  \t'afdc77e74e4b490b865b4854f538f48e'\t\t,  \t'b0946329bc2042a2b72c42d9faeea0ef'\t\t,  \t'b0974f23b6654f81ae3d7317c3c5e5ba'\t\t,  \t'b1973f15cdc343cd8ce4f5b55bcf478f'\t\t,  \t'b1d4ea3739194f63b3c13cf5cd1fab05'\t\t,  \t'b27399c3677a4293ac61ca7e8da21f78'\t\t,  \t'b2bade45584741b4b85d9593aefa17e4'\t\t,  \t'b2bc38eb6afb45bf9ec15e56640c3d40'\t\t,  \t'b2fd9942224e407fbfbc5c9992c07d49'\t\t,  \t'b3aa5c4ef62749e5ab0ed82e7f990df0'\t\t,  \t'b3e2454cf3304033adac47608bff5cd0'\t\t,  \t'b44c1728b4c640c5beadb7ac6a6fa46f'\t\t,  \t'b46d0d5eb54641b29312452f969049d6'\t\t,  \t'b47b597394d8485eab12742493b2643e'\t\t,  \t'b48c787acc6b4fecbc31d09c9fd87e3e'\t\t,  \t'b48e0eab65b94a14910f3bed5fac0afe'\t\t,  \t'b5916b1e48e84669a33f24d2441508dd'\t\t,  \t'b59e4ac6214e48af9c7af431d78cb83c'\t\t,  \t'b5b9b41b244f42159f3ed3450fb4045a'\t\t,  \t'b5e515c849874642adc39ea5dd1995b2'\t\t,  \t'b69d3fa048b64969b68a1728d069fa19'\t\t,  \t'b6fdbf4f862941a89d0e508fc4e272be'\t\t,  \t'b71af5e68be84ba9b69ea05210476a7c'\t\t,  \t'b75b24741a93458fad200fb00c25d967'\t\t,  \t'b76c0b4a22fa40ad9b6900248156246b'\t\t,  \t'b7bbb2db98b94360866d51ece8769e75'\t\t,  \t'b8507c29cf574175a39cd4facbc0a240'\t\t,  \t'b90e96646ee94efeacaeb5150315de91'\t\t,  \t'b9691d37786747c888bb24f925de4e51'\t\t,  \t'b97e5349e31243d1a56487b3a36c8942'\t\t,  \t'ba59ec65ff6b41ae85c2e7238db74b3f'\t\t,  \t'bb9dc644b8fc4fb0bf6a010d04c6fd79'\t\t,  \t'bbe0cc5eb66d4a05b2bdf3ea01715340'\t\t,  \t'bd7ce9dae40946588096add14e6a71a2'\t\t,  \t'bdec6af450724d8d8ca3a3bc536c09f0'\t\t,  \t'bf163703c3b54d53b5198f1c75734a08'\t\t,  \t'bf288def5ec04493b3ea5410c8aaf93e'\t\t,  \t'bf5de965dbb44ccb8c60ff60479810bc'\t\t,  \t'bf9da3e8078b46c4aa5e32bfa92c983f'\t\t,  \t'bfda52539b2d4b0093b208b174cce5c4'\t\t,  \t'bffc1a5fc8264805a0d898e48473ea37'\t\t,  \t'c07853e79adf4eb1adf7efc07728aad4'\t\t,  \t'c0a8bf62de33446ba26308b7f7c4eb65'\t\t,  \t'c0b1634305e4420987bf0faeca512a61'\t\t,  \t'c28cc6a98de0453e9d559bae94dc52de'\t\t,  \t'c2a67347257d4889b825a014e1b4779f'\t\t,  \t'c46514b2d7aa452aadea0e478aa61152'\t\t,  \t'c49219574b5948729494d49e9d276c4a'\t\t,  \t'c4f8e58be695427d9cd66ea9816a7069'\t\t,  \t'c5a119cfe0a64812b8bc9860b8e1e489'\t\t,  \t'c60bcd96a40f4119bb6fc8daa63deffe'\t\t,  \t'c64eabeb1ebf4b98a63af43b3ce93f62'\t\t,  \t'c6e8b9b152494e8ba4e2fcf2d161df72'\t\t,  \t'c7996a039ceb4925818071712474d346'\t\t,  \t'c7c1a33dcab94c8ab77b61428b5aef0a'\t\t,  \t'c82d7efdf7e14353b97c9ab94b318e3e'\t\t,  \t'c990777a5e7e47989d0ec791cfefd112'\t\t,  \t'ca81b44997394e809690c17fd70c72cb'\t\t,  \t'ca8e019b71b34ce49fa1cc61d6eb73f7'\t\t,  \t'caa9dd455d4c40d69370fce397a0d4b0'\t\t,  \t'cacbe0c1a6d04212bf5311033c8b4bfc'\t\t,  \t'cb0c9fe24cb844788d1d02380789353d'\t\t,  \t'cb7d1c8fee834a7c90464d2650aeebd2'\t\t,  \t'cbebc59b38be4b1bb45ea4da9d0db7f0'\t\t,  \t'cc3290c79f314a069e8ffd562eb4fe10'\t\t,  \t'cc588985061641b9b1118239e1272478'\t\t,  \t'cdc740a4702344bc9efdcc2eb01e1619'\t\t,  \t'ce00917a7fe64ead8bc7392333e0ebc0'\t\t,  \t'ce25291695604334b0a9e3efd2a237c8'\t\t,  \t'ce42c45979fb427f980ea933b073538d'\t\t,  \t'ce80c6f7d16140d19c491f658ae914ad'\t\t,  \t'ceaf0969ed3d48b1b1fad2039d4944e7'\t\t,  \t'cf1125687f984879bfe2897c00e07b7e'\t\t,  \t'cf20b2859cd8481d81b8bf04737cc706'\t\t,  \t'cf4f903fef2e46f8903cae21259d4fd1'\t\t,  \t'cfe444ae44ce40b89ad4adafc9b5382b'\t\t,  \t'd008405c82864fa2ac45c4e55ebb264f'\t\t,  \t'd0132c10dd564cc2a88725e0a7e8f62f'\t\t,  \t'd02787f0d6604633aabf4ec9e8912df8'\t\t,  \t'd052f368f84d4d1fa663da2c9e91e71b'\t\t,  \t'd0a1619e9eee4cd5a29f7d4611d73b78'\t\t,  \t'd0ed748d52f14d33aea110ae996ba33e'\t\t,  \t'd10bfc94131444c19fdc98f93c5b0174'\t\t,  \t'd17b1b4ab2da421eb716e10ecd75ea07'\t\t,  \t'd1d50ff163764782a284878d06a628fa'\t\t,  \t'd266dede0bbe4bf396affa4eec978b5f'\t\t,  \t'd2725b1b2dec4e959c02e65e4ff54719'\t\t,  \t'd30a335020684f02a0f3ea48fd5855df'\t\t,  \t'd3797e03beab48779509f2f60115e622'\t\t,  \t'd4a64de004c449b28bf4a3cdc5efbc50'\t\t,  \t'd60732a4721b416e8c30ca1034bd402a'\t\t,  \t'd71f4739efb0497293d646b8aaeab8e7'\t\t,  \t'd80c36a920fe48adac9a3740b2ce8438'\t\t,  \t'd87ade3abf2f4169a88de112e21239da'\t\t,  \t'd87c50598e6544799010c059e11b2ffe'\t\t,  \t'd8bc0e7155364449a48d25857085c0e9'\t\t,  \t'd95bbfb5b855444ba37dcb7aed5862dc'\t\t,  \t'dc5ffa53576f426c9fc0f87585246c12'\t\t,  \t'dd5c17468d6a48a3b895b5a5bbcedf6e'\t\t,  \t'de165962b85e484b8254dbc5c6bcddd5'\t\t,  \t'df5c915a34e845ed85479e2fe36d8a8b'\t\t,  \t'df9296d0d5014ef5b2e081df92808ba1'\t\t,  \t'df998a3bc0f04cb38c3e891a620c9c9c'\t\t,  \t'e079627a34f94fa8b050add964ba20b0'\t\t,  \t'e092f746b18d4ab0be53c231d0779b31'\t\t,  \t'e0ccd396c13b413a82f7b8ee53378cd1'\t\t,  \t'e17b513bb7fb4ee4b161a015a9ac34b5'\t\t,  \t'e1f1af2de9f64cfd8cf5665618dcb83b'\t\t,  \t'e2516e70faf546bc839a944972be6187'\t\t,  \t'e2d0fff35e4340c0895fd2354472753d'\t\t,  \t'e35d3ef0f2ad4286b424253cd1521bc3'\t\t,  \t'e37a054c53904e61bdf94e541c4ee13a'\t\t,  \t'e42c9947a12e46f2beea7f86c2e24351'\t\t,  \t'e5558ab548fb4ed5a4caed0c7af24139'\t\t,  \t'e5883a219ebf4105b12ea7a7f0b38c61'\t\t,  \t'e59c2d21b99346c7b0547bd097c61e99'\t\t,  \t'e6437107650d4f0ea1b06523d962776a'\t\t,  \t'e690cc84c6264b5382ebd3d1f71d8f1c'\t\t,  \t'e6a0b0ae2e4f41d49bd65b106a3378e2'\t\t,  \t'e7a5524e65c74b3684e6f062e39e648f'\t\t,  \t'e97cb4c1e2bc4492be40b8713551d136'\t\t,  \t'ea2b58d531224cd18b81cf5c9ccd4c02'\t\t,  \t'ea8f3fe3fef6447ab0f55283bad76783'\t\t,  \t'eaa3bfd746a84667adc9828586d18c14'\t\t,  \t'eac28bbfd14a418d83656f8c67335215'\t\t,  \t'eaf5b493d43944db92ee6fd1977537da'\t\t,  \t'eb0f2760a4c24a7e9bce0fb31d0d9e61'\t\t,  \t'eb347e40866d42799f8f405fed808a43'\t\t,  \t'eb5ef97ec55e42cb9e5087a6e47871c2'\t\t,  \t'ebecec0ab14f409faaf882aa60bd9961'\t\t,  \t'ec67ae4e288b42339f8ce60473a004e5'\t\t,  \t'eca4a7aec4454c549d09d6fe5ee39563'\t\t,  \t'eca8a82b744540a0b09d59ff826d1fe2'\t\t,  \t'ed1f75e653cd4a99899fedf23f376416'\t\t,  \t'eeb0b1f256e04c8ab20f67a5946f41d6'\t\t,  \t'eeb14d800654442e948e600b10024486'\t\t,  \t'eee09cef0e46436388b0738e7a2ec8b9'\t\t,  \t'ef458dabecd7417c8eb79af6e9110b29'\t\t,  \t'ef989cf71c8b44d2916d73b7a6a60f98'\t\t,  \t'efba4a2dd698462caa23fba08ca2d9d0'\t\t,  \t'efbf1aaf40f947049a5b0ebda5057b0d'\t\t,  \t'efd2419b461e45f8bf5eb4a0dd915f07'\t\t,  \t'eff77cef4012434ea0619280c8965a0c'\t\t,  \t'f030a4ac3bfb43c297080a58197e424a'\t\t,  \t'f05e55f4922a43b9b1054d073c160628'\t\t,  \t'f0794dc4fcfb4f1b8b0f83073e60acb6'\t\t,  \t'f0b6c577f3b54b4f93ee0a50422c9ce2'\t\t,  \t'f207d7741d37406389c2aa0c0ba40938'\t\t,  \t'f244346f8ba44b7ebaf91894d1c64212'\t\t,  \t'f25aeee5c6fc4933846774573ec318fe'\t\t,  \t'f26306fbc9b042439a2bc29dd96c277b'\t\t,  \t'f26c9bf401f941bba8ae7de393620e57'\t\t,  \t'f3648a8b9b4544ff90ba3bc9031e8813'\t\t,  \t'f3ccc616929a40229dcb94e62958604e'\t\t,  \t'f3db912afac14ad089883155f9194f3b'\t\t,  \t'f489c8447a6444d1aba6a596fdc44108'\t\t,  \t'f4c9d2b7c813416380018b294f09bce4'\t\t,  \t'f4eca417af0f4efd8cf6a67b2475819a'\t\t,  \t'f50a107819b5454787361b39c2efac1b'\t\t,  \t'f5149b96a7b14f328b07d57a7a07dfc6'\t\t,  \t'f5da6a5d1e00422a9e5855d86077caea'\t\t,  \t'f67cb6fb492f4f97af6e384b47361de5'\t\t,  \t'f6d952d252c344f59ae09779f01b196b'\t\t,  \t'f78d6c7d0cf84a12a455b974f6d5913b'\t\t,  \t'f853a44012874fc0a48c59d2b247938e'\t\t,  \t'f9338e6a17f14500b05e99e32c7855dd'\t\t,  \t'f990ff92d5a14b24af9c40d59e4ae468'\t\t,  \t'f9d313d27dee479cb6a5d2341697e8f6'\t\t,  \t'fa9b84f89f8f421f966aa4f929e932f2'\t\t,  \t'fb4ee90dfd014fbaaac2069cd5230534'\t\t,  \t'fb947c16b3b24a6db1ed0726f195e212'\t\t,  \t'fbe83b660372443c86168b1d2bb66c65'\t\t,  \t'fd15d5cc48c34ddaa265f281f1cc7b61'\t\t,  \t'fe305131af144fc7b68fb2ba3664304c'\t\t,  \t'fe34f92cd6d3407e9760b68342987617'\t\t,  \t'fe7fa8eb55bc4dcd86988b6e3006a358'\t\t,  \t'fe90ab3c0c444952834be5abbff97b62'\t\t,  \t'fef2221fbad84ca88c7fa6600b1d9fc9'\t\t,  \t'ff41b593422240d59f8cbac4be85f7a7'\t\t,  \t'ff68932ee06d45c0bcee4645d98323b7'\t\t,  \t'ffef6ef389d344068a48149bcf79c334'\t\t)", "analyze": ["-> Table scan on <temporary>  (cost=0.02..5.45 rows=237) (actual time=0.002..0.002 rows=0 loops=1)\n    -> Temporary table with deduplication  (cost=192.33..197.76 rows=237) (actual time=0.094..0.094 rows=0 loops=1)\n        -> Inner hash join (b.SPU_ID = d.SPU_ID)  (cost=168.64 rows=237) (actual time=0.060..0.060 rows=0 loops=1)\n            -> Index range scan on d using idx_spu_id, with index condition: (d.SPU_ID in ('04747b40ae994ac195d71a4c9ae069ee','0919549d112f4a4c9588e20d90d7c2b0','38e7bfef01ad4baf86cf441f986124a7','3df560d24f7f4da1869a5139fb97321a','3fe2c90bd42546138020e5a78fd748b1','56784e61a47e453ca1e69708658ee754','5de2c1235b2044848a7bab241c1e9708','6005c853d5f94902bf7f2ee5cdb50abb','6543837cdf1945e88f3763f6d74fcf28','75e2684bfbe24e8f852a7210403aa873','78ce6bb1bab64e029a5326dbe4d9efe1','80575cd7ce4542fea5eac90121dfc219','88f69c4406b349b48e1b37098c966169','9637933b761349949ed43a57243d7775','9f1c87066e3848758e2bffa403140520','a0f87564528846f8be9e21052bc90554','a8dec0ec1e674a89a0c6a81667bd1785','af521b66717e4c9495a0a85ea0afb818','b5a5d248418640509e431e3261d5243c','b81524aea45943a3ba66c61e683ea206','bdfd373bbabc4cc4b8dde793f88c18bf','bf553a0e94a54d028fed79336e85d15d','c383359bd03341a1a41ec732818fc5c1','cc3cb4f2dbba404b8c6fdc8aa35f75e1','ce1841f9d7b1466e8159f5ab06ba14cc','d57fc90d5b424593af15fb827247cca6','de3552e239b844bda72032a2f45c98ae','e4f666b87eae485983fed13f930b6868','fb31dabb34e441dfae1f9fdb9e6c7ae9','fe98e554f73144609f845baf0f9e1edb','005d6b35adc9413da83be8dc9d8d4001','005fa2ba0f1d4e048d39e1aa3236ab1e','0091c7d91ca94e14824632fe45f6e040','00cc81df81fa47d490deb8155dc59fac','00faa92bb265438d8b60f8e09eca532a','033b13391a9c4025b6ebb4b8fb9d0f46','03f95301f4684387998f918f4e674b9a','0525c37c830e41839db55ed28e52711e','05534f415b4d4b4fb61beefeeadcfbf3','065680a5f20d4b5093101fbd26edad29','06608524e4724a9eaf4cea0ea172c224','066dc2b6b63148f1aa41de2bc3860e0d','0688bd5678e3416584c48796077c1edd','0701cba94aba4598a77adb671fec76c1','0711d969526741c9b3dc306f2cf5e843','07b0fe5e131e4535a8f453a71305b1e6','0807e491dbec43f8bc13b24906d85f13','08423da16486442684c2fe4a40765a1a','0850bdaf59a7435aa28b5906569496b2','0862efe82503468ba6e0e6294c3b96de','08728c2e92314ac0bd88f97a29cd36d8','0a94cd17e5394959afd0187e899c2310','0b0aee7bf3444d2c8510b6552e210306','0b8e5f90481a4a1f814de1d143ae193e','0cb3cef68369467cb20fff1885d0b92d','0db7b98103394aefaabb312d548156b4','0db8a9f4fcf74e72aa0f64b5611409bb','0de9ede64a274e0da153a48b2deb2e71','0df3549ef26a4528ad23ecb1a4fa3732','0fa8107c649f432bb0fa79ccbbe7f3a0','10de6519474d421fb73b077a56e7e9b8','10ec752b57964b6cb0d453d215a1f9e1','12ab6b9fa4d24fceb9708218c9570810','12df5d65195944d3aa42647df310c0f5','135f0698db324c0490e0701bc26ecde1','1444995d24f847bc803dc2c482fc2ef3','14964074aa9b49d4bb7125b809d90f9d','15f47edcef6d4b59965de5d9570ac1da','16ade9a4fa2e4127aa85c4e304229114','16cff956e1dd4c8a8f6ee646b3d81aa8','173fb211003746c1a96fbd33c1fedd94','1877905fabbb42ce81caf0b558f74a81','19a44a0adfa542cfa96e41a980c2a20a','19c4b6d73bbf4c2ebf700e8962c6bc21','1a8f68e559444d4f83be5e3f4b204ccd','1b9f76a874a3499d8d17a26ed4facd14','1babdcbbe0f8483fafa0304bf6fb6eee','1c7a852eaa6346af90936cfd030e3a6a','1d06476a618847c4a08aceac9179801c','1d29224feb2947cb95667585afcdba0e','1ee449fbf56f4a7083290ac8f896f9a2','1f0a07dbdc4e4adab47d9376013b18a7','1fe8586d804f4411b138afeb64a53730','1fe95dc98caf4ea4ba96edc416d32f9f','2014d42433204925b54c3e457d707814','2094e0208f234657b7c284d694dd8ddf','20cf33eef74a4f62911380022487d5aa','215e61f9c45643fbb28ce3af0720a34f','21fb1d2424fb476d81909685497d7ce3','222b7a6277a64144854cab2fb1150a16','228602c83c8f405bbd20c3ee34649d34','229bcadb5fe747179d0e3ca002a1275b','235c083d2a8d40678e2e3a4b2ed86cc4','2395e41278024b43a6e39cdb45e136bb','248e764e714146c09075ddf17bda4e0e','2765a567816b4ca29889f4aaee6a2f0a','27a1717c32774dffb5017cd263804e05','286bd6e29fec4c5aa10c9d50d84c1b48','28f6751f146f44549d57a2d8bcbad0fc','294712683fb04d4183ee388f47939bd0','2a164a43b07f47c481b64a1b03c94b50','2a3273a85aa149dc8d727c78dfac6bab','2a3457d9cbf84e52bfffcca800b35211','2adc3becb6354f9f8ad1b3bcddeadaa0','2f0fd159cc1c476fa5311f5d73e249fe','2f442f139d974e88bdd96782e348bf3b','2f5d965a17b34e23baa5c6bd2448197b','30eb160c183f4a1fad29c365b3cdc7da','3137addb4a0c4d07aca0e99445505f0a','313ce18d65fe41278cda09fdf2f42355','335eec5faf9743e2bf7887a0c39f7c08','33921c377ada48efae7efb5b719c2ad6','33ad47ad3858454cbb17b33da7f40f5f','3447cac5b41344eba6c2b07a0afcf1c9','34cbf863d9684617b2bc67d2edd5638d','35d214354e55444c941bb1f63afe61b0','3606e1d5ec45472cbfe5ba0c3c0ea1e1','362682f5c22041da91c5247f3b249715','3796dffb199446ffa8afd40d8aa02a26','37e101f0b8d94b469d74ed0846e76d33','39ab5235427547a983a79a8ef1af5763','39cbd2ac6fae4ab39c12cb08f575fcad','3a97095f71bd45d79988d80d3ffc56a7','3ca87bac38e74ca68765aac3131bfb25','3cb2e4f2e36f441e968284bb5418077e','3cd3fd2fa1bf46a6a81f412c7b16f9c3','3cf0851830fb4350b7968a4d5db4078a','3d5c26f442b74432a46df2f4c75d5b3b','3d6e74677c1244bba3ad8220e331a566','3dc1e1e3c2204e34a840d516ed9368e3','3e03b743fbc14807863341f088183de2','3e759dd443c34ceea1d92a77378c242e','3e825d25bfd94c9a9db3ca9cf28d3188','3f0e93b6e4ee4d3485521d34577d4834','3f1c17b4d1bb46d79bb347495fd538a0','3f3427b17be64ffba10d450dfa3bcfd8','3f5204b9f0d64b0daa09fb552ec0987b','3fd18b69c84c4595b63c7da985f44096','3ffdbfac9c7b4a93af102fed8deba63c','4065e313e159451596c2fde413a2177f','4135ecfee29548aa9bc8009695f46cb5','417a0d4deb4c4951970aa390f9a74fc2','42259b335b4c4c69bb5989cfa1b4b446','42bdde17e3b046148c0b0a55124673e2','42eb03e428694fdf8bbc75beeaa6ad59','42f89dc554e945dea5244a05f99e885d','4375d8e6d6de48f38cd80043d4e55ca8','43e8ff26503348f89ca0952ca07456fa','43f8d2bee9144ea18370088f9857a49f','44a631c914d8408a9df949d14acfcb71','44bacd5ae9cc41d8a2ac39fe09220530','44f481f842764fd09796993cea30a8c8','458c8e5de491437f9fed8dcbe223bdbe','45d1e4e8bfe04863b6e0760c4748bcd3','470e8b8022644b4b8f83a25488936a40','47578b7a57b243268b520f88f8292a38','48be8db456804ab5b403aee89a8ac06f','48f48fcc294541a193e84cb32c2ba61c','49d772f9dcec47f198ecce68c1839dbf','4a32c2e194f540cb9848c690915599c9','4a4080ed0f524636903685a7f00f7ab6','4a4c5371037c4ebb953ae3ffc96b7b8e','4aeebeb7cd044c85bd0fece3fce34bfb','4af97ecd851a4f30bf10407228a10b34','4c0e1027976843e4a4301c49cf1fac95','4c731a78f8e94722a729ee95cb12872c','4c82c5fe71c7400f822a8f43cfb0fd98','4cd32392ca324ea88ea79ade4f5132dc','4d1c0f89bf9b4d5f8fd7a38e96c75751','4d64e1b045944ed69b63908fbfe93635','4dc2cc7327fb4f6e903f104e4518c98b','4e59820c7afd46bfb558fc0549275abc','4edd5c3994774abeb46f11d33b617906','4f1175cbcd2c411a9a2dcefffb53c916','4f44eec7881844f79134f6254dbf4bc6','4fed7c4b61ff43eb9ffed0048c4c9fc3','5054f9aea98647a0a6b438655e7d21d2','50aef88c92484b2580317ed8148ab370','50efb45f8e88405db17bde4b57cdf6f7','5108208cdef64f518380963f279b81c5','516ab5ce05994675a43f3b94fcbd93c9','51dea27d64e24acfb55d50170646dd29','5208d10403b44192874694101aadf735','5271a6b2459f437b8bfce31aae1461ee','5377bd113f7f44e5a154d37081dda942','540c4a38fcca45e3a3f1401efa05ada9','5438a26412374ef2832ab8b21db42013','57144d4439244b3ea27e9564beb47537','5769da0bea2f4fc0a128e313f056d0bf','589ab446b44949b78958aa63cc5b36e9','597358b837584fae91f8e286933beb20','59af202fac8e4c22b8321bf39c51f2fc','5a0b43f488244246bed03b75d67353f4','5a1722c0bdd94f2eae9fe3239a1ecf51','5a5b59cd1d3f464aa5bc9d0b5c2678b5','5d99894d25a342358a320b133617a26f','5e0a88d007ec4dca945a33c4f31fbe0a','5e4b68e4b13e424e93024253fc80d4b7','5e56815e900c4081bdc1d20d1ac041d2','5e573649828743c288d620a9f8df1fb4','5ea2155c187a440ebcf8b1b8fd58b6f9','5ec0021dc5e043339057536b95fa9a59','5ec9d635dd194382b3ec8478b2cb94f4','5f04eaa25ab54d67899f801bc3477595','5f4caaa0ec28437599a2552461cb2abf','5ff76d7883504818a63352d590cdc06b','60ad71259bb1450690fc094fd09cf118','614b4a77264c4da182c4eb9aac9dc2cc','62af9a29bdb64594988ab5363c0b8dbd','62d55ac01f68478cb7ff0db5fc9931ad','638c47f4217448959b3abea0604c1e36','6412087d9a8d4e699aca26d831b6a117','641a9409453a48e79446f66b2c693e36','65cc812ba3f7483bbb29ced275ee28c0','66104c7cfdb84babbbb05dcbb62816ff','66ba1631a1334d139572e9d3ec6aebed','66ce0d47e4af40798750fdecc2707077','66ea83e65ede4ebe9986926ff7bab165','67040e6ff0f54b7fbd4ca5987925a754','677ffbd121954d6dbc7a1b4af0ce2e48','687f4986b35047e8a1a53e864ed9fb51','69232f68737c4abcabd96bbfd18ad0ba','6a4c7dc647754445884b861b3a1e083a','6a5651b1d4f144c49a17b58b2f07ee41','6ae8ca338d37447491cd5810d6794b97','6bf5a91e1f364da0b932476323eb3f99','6c52583f788f494ca2a6d702040a7f8b','6c5b284ca6d94a8f852317c485a6087c','6c6202ccdb6e4806ac384bf73c048dfa','6cf7a3db481c43f78870b8ba01ca65d5','6d1456cd862d4848ac54c123e953cd0d','6d70487872fc40a9bde0efccbc40e82c','6e2057b2b6fd49caba3f6d7a7accf694','6e2accaa36154b4b90afe2c07271039d','6ee4f8495a1442be907c70da3ea7336a','6f38bc8ca384497bb98f7b7995c017b5','6f923e4af1d7449caaad1805a34114e3','6fd12f7ba87b4474aff79180ea0e433b','70835b02e86149d98c752e61dd469aea','71dbcfae93b44bcab24ca37e41b5fc1e','723a5402361640bf8c1385f5be05c38b','72c4ffc6d4a440a09d047d5fa122930d','72c54bc1f30f4207805084d175d75636','72e9b7b96c65488fb0fa97eb283dc69a','73b1ee2e8c9c4e16922ffd84d25c5cda','744950e1c15844da8411965b98c591ec','75897efd84c844a69a45bbb419bfaccd','76d5ba4199184c9cb8b397e4f858c8f1','76fa2b8d700a459990740907a947a238','771866fa84594a118f50ccaf60f2cf56','7799f5cdc02948e1806db4b50b549060','7819e29f4ac24b2c83e7edd514d30524','78cc0fccdc4d41a7a3272565fc7b3572','79259ffb35174663a471e82dff63f5cc','794149c66ac2403580f5c5fdf4b790ad','79718bd828394519be4760ddfffa2aaa','79a94766d53c438dbd105dc7d7750225','7ad8577948e44f7894cd5f7d619a8b6e','7adfec033a164def983675019592cba6','7dcbe0ee6fab4902b79740d357d66661','7e1373c597ed415f8cd8d98c38ccfc0d','7ea7a65360ea40f9a0d1746e56a215ad','808bc35088bc48f7b41c0dae08f17b49','80a7aa1ff77d45a18b2da06128f2bcc2','80f45fb8737f4ff4b1e8f4876d6b8acb','816de2e53e46401189c5b4940720dab4','8236b474be014fad9378f69a0af83afd','823924e7eb4849949d2123e703cac343','8348defbedd5445091881af4b22f26bb','847effd848a14a489792e41b0742a9dc','84d2d3b58a1d410e9007a412552ea80f','87bbe86a5ee7440fb10f5849a4783c59','87c5b6ad4ce44b09b5f890f71d5ffd19','884875be698e479ca039643d2d26ac8a','888004d0bba0475d9ce0468d03adef89','88f16365c22b471b9549f4fbf5e28c23','8a75bc6f97784046bc9cb18af55e53e7','8aaf0d8010d64cb6a3e8b4e64cf44c04','8b4d42d911ca463b8db5907b6dfc18db','8b8ed47ec085404cbef71f8248768ca9','8beff31a1ed14fc0bb4031eac87cd524','8c17264e1e1841759ef1b92a48fc55c6','8c4594d31de54d3ebf940c9608d1b56f','8c73b1a41cff4b189e6b857b9de6e94a','8ca8409338004d8a83ffae431c81c7ae','8cbee0ec05e046aab217faf0c90b8ed8','8d2a82f758e140a98cd9b352933cd786','8d69519ce6354c2cb47df95204ab8159','8d72212910e34d6791bb05f0414fe023','8dea337365fa40649340b28d421e2d29','8e8c978229ee4cdb9ab18f82bf0704b8','8eba522e513247be8b5bdde09c494319','8ed209f7860248b1a7565f0d8301a1ec','8f48f70373054e43996aac4ab93b53d3','8f884a48f6084877a0692006c0e91049','8f9b0c11a6524faf87014551d9532f3e','901c0c1d47f54864b65e83d5ab4d8df3','90a49e7b1257491db8605ca3f12dad62','912eb5598331430d9f118b0f956d6d91','914f601a33fc40e2bd1524973ae9f8bd','915c7dd11c5e4db7a09989a9097327f2','92013dd19e9a4ad6a264d4f60dcd8ae8','93084c9474fc4d318dcc1410f3436f94','9462eb6fe8fe4c4ea335750115b21fc1','94a639b657ad470abe10eec179e84cad','952b289e44c84a93b3ccf7df89f53e9c','95eca78528de46cdac6a4e85ca89a6d0','9676e5eda8424a08ba3e70f4f5765760','978279be2e154d15bf27bc0d8e836d99','9788b8d7c2b443849be4acd0221a797f','978cd40ac3cd4ed3951838c8bdc33b7c','97c7e68c6fd94499bbe3542c88614e8f','97fcbb59ab2243af83d22162e83db910','98adc354f98a4b83859782d4f5472657','990891a8ebd245748f95251ba0e055d5','991b128c63b64cc9889e2466e5bb8967','996fea42f83c41978b5c927c70fd542e','998493025e2b4f0bbc7ceb3ff58767eb','9a1e1384e36d45e88e90f3f2af2b94a8','9a804e668983434eab80b4c4a4659437','9aa0f7a5fe1f45709ebdb85eb22f702b','9aeb02fdb5b949b4bc40c540581dc81b','9c2be6cbde4d4b5081c9b40146613971','9c58ee92bd4d4acc8ec771b2c2074503','9d8c5dc9966149319a7d63b8064d9e24','9edebbedbf414e86b0681b5f0717dd56','9f07b081e74249be8c89b0175156648a','9f29f7c53cda4a688431030b8795dbd5','9f9c800a73ae4d0ba3b378879fa5f8cb','a091110ddcd24e06941be0c0616cb494','a165f9a1acdb40da88f298f5186cfff7','a16ba644e45a4118b32981ff4c6d00e2','a197eb9156384ab28d5ce8a553467396','a24339e2c9584e609424d705f22a3b16','a28b65a48d6a4a009ec20b7c407a9ac0','a2e25da01b2d4960b0984c1254dc39a8','a3264b1d3db04d32b19fd1909eef1919','a39fb9c9f0ad40549c963c7cbc083e56','a49e4377c149444990c1671d5797aac6','a4d7cbbfc9f54a52a87c43990ebf9f87','a4de40428cae4c2cbcbfecc4dd2a6edf','a592edeeed0342258afab4586978b51f','a5c8a8ee308c4708b9aeacb9642b5b11','a5dcea826f8143b7a01e3271c696cc67','a5f1451b76a34737834cd5d336c3558a','a5f6b8b90b964d9b820b50595e0a3048','a612611d403543e1972438decd310a2f','a64d441f60254144a7c48e60018ceced','a68cdc9196944cb78c19a58368352d1e','a83ba5e3285a472590cfa059edd6b2d9','a95740dd2518415581c6f0f93a41cde8','a96ee5a4b55149819b57aa0e8781afc1','a97e31768d6b42739aae022300291aab','a9c0885e7227467c928a9d68bc675d99','a9e0590b885d4a1fa3eca755d4cb4988','aa04a2f3b52c47e8bc3391fd9b9883a1','aaf192c23a3f49d4928164aa3142091f','ab2aa74d675042f68087425ff6faf2dc','ab822c2f45614755bf532f88d718a3ac','ad3a5ad802fe4ba095ee48b78f971588','ad43d382b80d4c58ba297b787093d2e7','ad6ca71bdaa64733b34c6b7c76308fb1','ae81450ff5764a7b884d0b75f67ff26c','aeb77573a75f44f18c346971aa42caaa','aee40181266c4c2d9a9f1be8a4b03432','af3451a3eaf84575a92fa5e63e6d8453','afdc77e74e4b490b865b4854f538f48e','b0946329bc2042a2b72c42d9faeea0ef','b0974f23b6654f81ae3d7317c3c5e5ba','b1973f15cdc343cd8ce4f5b55bcf478f','b1d4ea3739194f63b3c13cf5cd1fab05','b27399c3677a4293ac61ca7e8da21f78','b2bade45584741b4b85d9593aefa17e4','b2bc38eb6afb45bf9ec15e56640c3d40','b2fd9942224e407fbfbc5c9992c07d49','b3aa5c4ef62749e5ab0ed82e7f990df0','b3e2454cf3304033adac47608bff5cd0','b44c1728b4c640c5beadb7ac6a6fa46f','b46d0d5eb54641b29312452f969049d6','b47b597394d8485eab12742493b2643e','b48c787acc6b4fecbc31d09c9fd87e3e','b48e0eab65b94a14910f3bed5fac0afe','b5916b1e48e84669a33f24d2441508dd','b59e4ac6214e48af9c7af431d78cb83c','b5b9b41b244f42159f3ed3450fb4045a','b5e515c849874642adc39ea5dd1995b2','b69d3fa048b64969b68a1728d069fa19','b6fdbf4f862941a89d0e508fc4e272be','b71af5e68be84ba9b69ea05210476a7c','b75b24741a93458fad200fb00c25d967','b76c0b4a22fa40ad9b6900248156246b','b7bbb2db98b94360866d51ece8769e75','b8507c29cf574175a39cd4facbc0a240','b90e96646ee94efeacaeb5150315de91','b9691d37786747c888bb24f925de4e51','b97e5349e31243d1a56487b3a36c8942','ba59ec65ff6b41ae85c2e7238db74b3f','bb9dc644b8fc4fb0bf6a010d04c6fd79','bbe0cc5eb66d4a05b2bdf3ea01715340','bd7ce9dae40946588096add14e6a71a2','bdec6af450724d8d8ca3a3bc536c09f0','bf163703c3b54d53b5198f1c75734a08','bf288def5ec04493b3ea5410c8aaf93e','bf5de965dbb44ccb8c60ff60479810bc','bf9da3e8078b46c4aa5e32bfa92c983f','bfda52539b2d4b0093b208b174cce5c4','bffc1a5fc8264805a0d898e48473ea37','c07853e79adf4eb1adf7efc07728aad4','c0a8bf62de33446ba26308b7f7c4eb65','c0b1634305e4420987bf0faeca512a61','c28cc6a98de0453e9d559bae94dc52de','c2a67347257d4889b825a014e1b4779f','c46514b2d7aa452aadea0e478aa61152','c49219574b5948729494d49e9d276c4a','c4f8e58be695427d9cd66ea9816a7069','c5a119cfe0a64812b8bc9860b8e1e489','c60bcd96a40f4119bb6fc8daa63deffe','c64eabeb1ebf4b98a63af43b3ce93f62','c6e8b9b152494e8ba4e2fcf2d161df72','c7996a039ceb4925818071712474d346','c7c1a33dcab94c8ab77b61428b5aef0a','c82d7efdf7e14353b97c9ab94b318e3e','c990777a5e7e47989d0ec791cfefd112','ca81b44997394e809690c17fd70c72cb','ca8e019b71b34ce49fa1cc61d6eb73f7','caa9dd455d4c40d69370fce397a0d4b0','cacbe0c1a6d04212bf5311033c8b4bfc','cb0c9fe24cb844788d1d02380789353d','cb7d1c8fee834a7c90464d2650aeebd2','cbebc59b38be4b1bb45ea4da9d0db7f0','cc3290c79f314a069e8ffd562eb4fe10','cc588985061641b9b1118239e1272478','cdc740a4702344bc9efdcc2eb01e1619','ce00917a7fe64ead8bc7392333e0ebc0','ce25291695604334b0a9e3efd2a237c8','ce42c45979fb427f980ea933b073538d','ce80c6f7d16140d19c491f658ae914ad','ceaf0969ed3d48b1b1fad2039d4944e7','cf1125687f984879bfe2897c00e07b7e','cf20b2859cd8481d81b8bf04737cc706','cf4f903fef2e46f8903cae21259d4fd1','cfe444ae44ce40b89ad4adafc9b5382b','d008405c82864fa2ac45c4e55ebb264f','d0132c10dd564cc2a88725e0a7e8f62f','d02787f0d6604633aabf4ec9e8912df8','d052f368f84d4d1fa663da2c9e91e71b','d0a1619e9eee4cd5a29f7d4611d73b78','d0ed748d52f14d33aea110ae996ba33e','d10bfc94131444c19fdc98f93c5b0174','d17b1b4ab2da421eb716e10ecd75ea07','d1d50ff163764782a284878d06a628fa','d266dede0bbe4bf396affa4eec978b5f','d2725b1b2dec4e959c02e65e4ff54719','d30a335020684f02a0f3ea48fd5855df','d3797e03beab48779509f2f60115e622','d4a64de004c449b28bf4a3cdc5efbc50','d60732a4721b416e8c30ca1034bd402a','d71f4739efb0497293d646b8aaeab8e7','d80c36a920fe48adac9a3740b2ce8438','d87ade3abf2f4169a88de112e21239da','d87c50598e6544799010c059e11b2ffe','d8bc0e7155364449a48d25857085c0e9','d95bbfb5b855444ba37dcb7aed5862dc','dc5ffa53576f426c9fc0f87585246c12','dd5c17468d6a48a3b895b5a5bbcedf6e','de165962b85e484b8254dbc5c6bcddd5','df5c915a34e845ed85479e2fe36d8a8b','df9296d0d5014ef5b2e081df92808ba1','df998a3bc0f04cb38c3e891a620c9c9c','e079627a34f94fa8b050add964ba20b0','e092f746b18d4ab0be53c231d0779b31','e0ccd396c13b413a82f7b8ee53378cd1','e17b513bb7fb4ee4b161a015a9ac34b5','e1f1af2de9f64cfd8cf5665618dcb83b','e2516e70faf546bc839a944972be6187','e2d0fff35e4340c0895fd2354472753d','e35d3ef0f2ad4286b424253cd1521bc3','e37a054c53904e61bdf94e541c4ee13a','e42c9947a12e46f2beea7f86c2e24351','e5558ab548fb4ed5a4caed0c7af24139','e5883a219ebf4105b12ea7a7f0b38c61','e59c2d21b99346c7b0547bd097c61e99','e6437107650d4f0ea1b06523d962776a','e690cc84c6264b5382ebd3d1f71d8f1c','e6a0b0ae2e4f41d49bd65b106a3378e2','e7a5524e65c74b3684e6f062e39e648f','e97cb4c1e2bc4492be40b8713551d136','ea2b58d531224cd18b81cf5c9ccd4c02','ea8f3fe3fef6447ab0f55283bad76783','eaa3bfd746a84667adc9828586d18c14','eac28bbfd14a418d83656f8c67335215','eaf5b493d43944db92ee6fd1977537da','eb0f2760a4c24a7e9bce0fb31d0d9e61','eb347e40866d42799f8f405fed808a43','eb5ef97ec55e42cb9e5087a6e47871c2','ebecec0ab14f409faaf882aa60bd9961','ec67ae4e288b42339f8ce60473a004e5','eca4a7aec4454c549d09d6fe5ee39563','eca8a82b744540a0b09d59ff826d1fe2','ed1f75e653cd4a99899fedf23f376416','eeb0b1f256e04c8ab20f67a5946f41d6','eeb14d800654442e948e600b10024486','eee09cef0e46436388b0738e7a2ec8b9','ef458dabecd7417c8eb79af6e9110b29','ef989cf71c8b44d2916d73b7a6a60f98','efba4a2dd698462caa23fba08ca2d9d0','efbf1aaf40f947049a5b0ebda5057b0d','efd2419b461e45f8bf5eb4a0dd915f07','eff77cef4012434ea0619280c8965a0c','f030a4ac3bfb43c297080a58197e424a','f05e55f4922a43b9b1054d073c160628','f0794dc4fcfb4f1b8b0f83073e60acb6','f0b6c577f3b54b4f93ee0a50422c9ce2','f207d7741d37406389c2aa0c0ba40938','f244346f8ba44b7ebaf91894d1c64212','f25aeee5c6fc4933846774573ec318fe','f26306fbc9b042439a2bc29dd96c277b','f26c9bf401f941bba8ae7de393620e57','f3648a8b9b4544ff90ba3bc9031e8813','f3ccc616929a40229dcb94e62958604e','f3db912afac14ad089883155f9194f3b','f489c8447a6444d1aba6a596fdc44108','f4c9d2b7c813416380018b294f09bce4','f4eca417af0f4efd8cf6a67b2475819a','f50a107819b5454787361b39c2efac1b','f5149b96a7b14f328b07d57a7a07dfc6','f5da6a5d1e00422a9e5855d86077caea','f67cb6fb492f4f97af6e384b47361de5','f6d952d252c344f59ae09779f01b196b','f78d6c7d0cf84a12a455b974f6d5913b','f853a44012874fc0a48c59d2b247938e','f9338e6a17f14500b05e99e32c7855dd','f990ff92d5a14b24af9c40d59e4ae468','f9d313d27dee479cb6a5d2341697e8f6','fa9b84f89f8f421f966aa4f929e932f2','fb4ee90dfd014fbaaac2069cd5230534','fb947c16b3b24a6db1ed0726f195e212','fbe83b660372443c86168b1d2bb66c65','fd15d5cc48c34ddaa265f281f1cc7b61','fe305131af144fc7b68fb2ba3664304c','fe34f92cd6d3407e9760b68342987617','fe7fa8eb55bc4dcd86988b6e3006a358','fe90ab3c0c444952834be5abbff97b62','fef2221fbad84ca88c7fa6600b1d9fc9','ff41b593422240d59f8cbac4be85f7a7','ff68932ee06d45c0bcee4645d98323b7','ffef6ef389d344068a48149bcf79c334'))  (cost=456.65 rows=547) (never executed)\n            -> Hash\n                -> Nested loop inner join  (cost=2.10 rows=0) (actual time=0.054..0.054 rows=0 loops=1)\n                    -> Filter: ((a.STATE = 1) and (a.CONTRACT_ID in ('7a01bab3a0494567a93a691a8f1ce731','fc3977155f3143b2848123634093154f','d836f43aacf3481e91f30539fe1545a1')))  (cost=1.36 rows=0) (actual time=0.053..0.053 rows=0 loops=1)\n                        -> Index range scan on a using PRIMARY  (cost=1.36 rows=3) (actual time=0.053..0.053 rows=0 loops=1)\n                    -> Filter: ((b.STATE = 1) and (a.CONTRACT_ID = b.CONTRACT_ID))  (cost=1.50 rows=1) (never executed)\n                        -> Index lookup on b using PRIMARY (CONTRACT_ID=a.CONTRACT_ID)  (cost=1.50 rows=14) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '22000000000000000000'  \t\t\tor DEPT_CODE = '32007590000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.INVENTORY_MANAGE IN  (  '0' ,  '1' )      and a.STATE = 1            AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (actual time=665.680..665.690 rows=10 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 10 row(s) per chunk  (actual time=665.679..665.688 rows=10 loops=1)\n        -> Table scan on <temporary>  (cost=0.10..2.85 rows=29) (actual time=0.007..1.490 rows=1890 loops=1)\n            -> Temporary table with deduplication  (cost=3306.66..3309.41 rows=29) (actual time=662.322..663.949 rows=1890 loops=1)\n                -> Nested loop inner join  (cost=3303.68 rows=29) (actual time=0.461..634.143 rows=1890 loops=1)\n                    -> Nested loop inner join  (cost=3293.55 rows=16) (actual time=0.406..608.574 rows=1418 loops=1)\n                        -> Nested loop left join  (cost=3272.43 rows=60) (actual time=0.228..391.963 rows=24600 loops=1)\n                            -> Nested loop left join  (cost=3251.34 rows=60) (actual time=0.186..259.178 rows=24600 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.STATE = 1) and (a.INVENTORY_MANAGE in ('0','1')) and (a.SPU_ID is not null))  (cost=3230.25 rows=60) (actual time=0.133..119.622 rows=24600 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.129..102.500 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '22000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '32007590000000000000'))  (cost=0.25 rows=0) (actual time=0.009..0.009 rows=0 loops=24600)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.007..0.008 rows=1 loops=24600)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.014..0.017 rows=1 loops=1418)\n"]}, {"sql": " SELECT SPEC_ID AS specId, SPU_ID AS spuId, VERSION AS version, ATTRIBUTE_NAME AS attributeName, ATTRIBUTE_VALUE AS attributeValue, SEQ AS seq, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_spec WHERE SPU_ID = 'd7d904ce933a4dcb88162a9f6a38c4e7'   and VERSION = 1 ORDER BY SEQ asc", "analyze": ["-> Sort: pro_spu_info_spec.SEQ  (cost=1.01 rows=1) (actual time=0.029..0.029 rows=0 loops=1)\n    -> Filter: (pro_spu_info_spec.VERSION = 1)  (actual time=0.023..0.023 rows=0 loops=1)\n        -> Index lookup on pro_spu_info_spec using SPU_ID (SPU_ID='d7d904ce933a4dcb88162a9f6a38c4e7')  (actual time=0.022..0.022 rows=0 loops=1)\n"]}, {"sql": " DELETE FROM pro_spu_info_detail_spec WHERE SPU_ID= 'd7d904ce933a4dcb88162a9f6a38c4e7'", "analyze": ["<not executable by iterator executor>\n"]}, {"sql": " DELETE FROM pro_spu_info_detail_log WHERE SPU_ID= 'd7d904ce933a4dcb88162a9f6a38c4e7'", "analyze": ["<not executable by iterator executor>\n"]}, {"sql": " SELECT LOG_ID AS logId, SPU_ID AS spuId, VERSION AS version, OPERATION_NAME AS operationName, REMARK AS remark, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, UPDATE_DEPT_ID AS updateDeptId, UPDATE_DEPT_CODE AS updateDeptCode, UPDATE_DEPT_NAME AS updateDeptName, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_log WHERE SPU_ID = 'd7d904ce933a4dcb88162a9f6a38c4e7'   and VERSION = 1 LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (cost=1.01 rows=0) (actual time=0.020..0.020 rows=0 loops=1)\n    -> Filter: (pro_spu_info_log.VERSION = 1)  (cost=1.01 rows=0) (actual time=0.019..0.019 rows=0 loops=1)\n        -> Index lookup on pro_spu_info_log using SPU_ID (SPU_ID='d7d904ce933a4dcb88162a9f6a38c4e7')  (cost=1.01 rows=1) (actual time=0.018..0.018 rows=0 loops=1)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '23110000000000000000'  \t\t\tor DEPT_CODE = '33113130000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.PRO_NAME LIKE CONCAT('%', 'V4B','%')                   AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 1000", "analyze": ["-> Limit: 1000 row(s)  (actual time=95.542..95.542 rows=0 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 1000 row(s) per chunk  (actual time=95.541..95.541 rows=0 loops=1)\n        -> Table scan on <temporary>  (cost=0.03..4.49 rows=160) (actual time=0.005..0.005 rows=0 loops=1)\n            -> Temporary table with deduplication  (cost=3654.19..3658.65 rows=160) (actual time=95.528..95.528 rows=0 loops=1)\n                -> Nested loop inner join  (cost=3638.17 rows=160) (actual time=95.478..95.478 rows=0 loops=1)\n                    -> Nested loop inner join  (cost=3581.90 rows=91) (actual time=95.477..95.477 rows=0 loops=1)\n                        -> Nested loop left join  (cost=3464.57 rows=335) (actual time=95.477..95.477 rows=0 loops=1)\n                            -> Nested loop left join  (cost=3347.41 rows=335) (actual time=95.477..95.477 rows=0 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.PRO_NAME like <cache>(concat('%','V4B','%'))) and (a.SPU_ID is not null))  (cost=3230.25 rows=335) (actual time=95.476..95.476 rows=0 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.076..84.523 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '23110000000000000000') or (pro_spu_info_scope.DEPT_CODE = '33113130000000000000'))  (cost=0.25 rows=0) (never executed)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (never executed)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '23110000000000000000'  \t\t\tor DEPT_CODE = '33113130000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.PRO_NAME LIKE CONCAT('%', 'V4B','%')                   AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 1000", "analyze": ["-> Limit: 1000 row(s)  (actual time=114.721..114.721 rows=0 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 1000 row(s) per chunk  (actual time=114.720..114.720 rows=0 loops=1)\n        -> Table scan on <temporary>  (cost=0.03..4.49 rows=160) (actual time=0.005..0.005 rows=0 loops=1)\n            -> Temporary table with deduplication  (cost=3654.19..3658.65 rows=160) (actual time=114.708..114.708 rows=0 loops=1)\n                -> Nested loop inner join  (cost=3638.17 rows=160) (actual time=114.661..114.661 rows=0 loops=1)\n                    -> Nested loop inner join  (cost=3581.90 rows=91) (actual time=114.660..114.660 rows=0 loops=1)\n                        -> Nested loop left join  (cost=3464.57 rows=335) (actual time=114.660..114.660 rows=0 loops=1)\n                            -> Nested loop left join  (cost=3347.41 rows=335) (actual time=114.660..114.660 rows=0 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.PRO_NAME like <cache>(concat('%','V4B','%'))) and (a.SPU_ID is not null))  (cost=3230.25 rows=335) (actual time=114.659..114.659 rows=0 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.065..100.983 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '23110000000000000000') or (pro_spu_info_scope.DEPT_CODE = '33113130000000000000'))  (cost=0.25 rows=0) (never executed)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (never executed)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '23110000000000000000'  \t\t\tor DEPT_CODE = '33113130000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.PRO_NAME LIKE CONCAT('%', 'V4B','%')                   AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 1000", "analyze": ["-> Limit: 1000 row(s)  (actual time=93.268..93.268 rows=0 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 1000 row(s) per chunk  (actual time=93.267..93.267 rows=0 loops=1)\n        -> Table scan on <temporary>  (cost=0.03..4.49 rows=160) (actual time=0.006..0.006 rows=0 loops=1)\n            -> Temporary table with deduplication  (cost=3654.19..3658.65 rows=160) (actual time=93.255..93.255 rows=0 loops=1)\n                -> Nested loop inner join  (cost=3638.17 rows=160) (actual time=93.208..93.208 rows=0 loops=1)\n                    -> Nested loop inner join  (cost=3581.90 rows=91) (actual time=93.207..93.207 rows=0 loops=1)\n                        -> Nested loop left join  (cost=3464.57 rows=335) (actual time=93.207..93.207 rows=0 loops=1)\n                            -> Nested loop left join  (cost=3347.41 rows=335) (actual time=93.207..93.207 rows=0 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.PRO_NAME like <cache>(concat('%','V4B','%'))) and (a.SPU_ID is not null))  (cost=3230.25 rows=335) (actual time=93.206..93.206 rows=0 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.062..82.703 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '23110000000000000000') or (pro_spu_info_scope.DEPT_CODE = '33113130000000000000'))  (cost=0.25 rows=0) (never executed)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (never executed)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '25310000000000000000'  \t\t\tor DEPT_CODE = '35315320000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.PRO_NAME LIKE CONCAT('%', '\u7f8e\u79d1\u661f','%')                   AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 1000", "analyze": ["-> Limit: 1000 row(s)  (actual time=92.836..92.836 rows=0 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 1000 row(s) per chunk  (actual time=92.835..92.835 rows=0 loops=1)\n        -> Table scan on <temporary>  (cost=0.03..4.49 rows=160) (actual time=0.006..0.006 rows=0 loops=1)\n            -> Temporary table with deduplication  (cost=3654.19..3658.65 rows=160) (actual time=92.823..92.823 rows=0 loops=1)\n                -> Nested loop inner join  (cost=3638.17 rows=160) (actual time=92.775..92.775 rows=0 loops=1)\n                    -> Nested loop inner join  (cost=3581.90 rows=91) (actual time=92.775..92.775 rows=0 loops=1)\n                        -> Nested loop left join  (cost=3464.57 rows=335) (actual time=92.774..92.774 rows=0 loops=1)\n                            -> Nested loop left join  (cost=3347.41 rows=335) (actual time=92.774..92.774 rows=0 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.PRO_NAME like <cache>(concat('%','\u7f8e\u79d1\u661f','%'))) and (a.SPU_ID is not null))  (cost=3230.25 rows=335) (actual time=92.774..92.774 rows=0 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.061..82.649 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (never executed)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (never executed)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '25310000000000000000') or (pro_spu_info_scope.DEPT_CODE = '35315320000000000000'))  (cost=0.25 rows=0) (never executed)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (never executed)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (never executed)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('791')) = '791' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=511.158..511.158 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=0.995..510.381 rows=664 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=0.982..508.970 rows=664 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.096..294.975 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.085..161.721 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.060..31.324 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.059..26.587 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('791'))) = '791'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('791')) = '791' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=513.496..513.497 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=1.256..512.710 rows=664 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=1.240..511.261 rows=664 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.118..299.875 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.107..166.171 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.084..32.636 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.083..27.866 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('791'))) = '791'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.005..0.006 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n"]}, {"sql": " SELECT a.QUOTED_PRICE_ID AS quotedPriceId, a.SUPPLIER_ID AS supplierId, a.SUPPLIER_CODE AS supplierCode, a.SUPPLIER_CH_NAME AS supplierChName, a.CREDIT_CODE AS creditCode, a.CONTRACT_ID AS contractId, a.CONTRACT_NAME AS contractName, a.PROTOCOL_CODE AS protocolCode, a.CREATE_DEPT_CODE AS createDeptCode, a.CREATE_DEPT_NAME AS createDeptName, a.SUPPLY_MATERIAL AS supplyMaterial, a.SPU_ID AS spuId, a.SPU_CODE AS spuCode, a.SKU_ID AS skuId, a.SKU_CODE AS skuCode, a.SKU_NAME AS skuName, a.ENABLE_PRICE_TIME AS enablePriceTime, a.SUPPLY_PRICE AS supplyPrice, a.INPUT_TAX AS inputTax, a.STATE AS state, a.QUOTED_PRICE_CODE AS quotedPriceCode, a.QUOTED_PRICE_APP AS quotedPriceApp, a.QUOTED_PRICE_DEPT_ID AS quotedPriceDeptId, a.QUOTED_PRICE_DEPT_NAME AS quotedPriceDeptName, a.CREATE_TIME AS createTime, a.CREATE_INFO AS createInfo, a.CREATE_BY AS createBy, a.EXAMINE_STATE AS examineState FROM pro_supplier_contract_quoted_sku a left join pro_supplier_contract b on b.CONTRACT_ID = a.CONTRACT_ID left join pro_supplier_contract_quoted c on c.QUOTED_PRICE_ID = a.QUOTED_PRICE_ID WHERE a.SUPPLIER_CH_NAME LIKE CONCAT('%','\u4e2d\u56fd\u79fb\u52a8\u901a\u4fe1\u96c6\u56e2\u7ec8\u7aef\u6709\u9650\u516c\u53f8\u5317\u4eac\u5206\u516c\u53f8','%')    and a.SKU_CODE LIKE CONCAT('%','10000004400201050000','%')", "analyze": ["-> Nested loop left join  (cost=6109.61 rows=27307) (actual time=11.216..11.216 rows=0 loops=1)\n    -> Nested loop left join  (cost=3315.54 rows=27307) (actual time=11.215..11.215 rows=0 loops=1)\n        -> Filter: ((a.SUPPLIER_CH_NAME like <cache>(concat('%','\u4e2d\u56fd\u79fb\u52a8\u901a\u4fe1\u96c6\u56e2\u7ec8\u7aef\u6709\u9650\u516c\u53f8\u5317\u4eac\u5206\u516c\u53f8','%'))) and (a.SKU_CODE like <cache>(concat('%','10000004400201050000','%'))))  (cost=570.30 rows=63) (actual time=11.215..11.215 rows=0 loops=1)\n            -> Table scan on a  (cost=570.30 rows=5133) (actual time=0.074..9.973 rows=5307 loops=1)\n        -> Filter: (b.CONTRACT_ID = a.CONTRACT_ID)  (cost=0.91 rows=431) (never executed)\n            -> Index range scan on b (re-planned for each iteration)  (cost=0.91 rows=431) (never executed)\n    -> Single-row index lookup on c using PRIMARY (QUOTED_PRICE_ID=a.QUOTED_PRICE_ID)  (cost=0.00 rows=1) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '25310000000000000000'  \t\t\tor DEPT_CODE = '35315320000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.PRO_NAME LIKE CONCAT('%', '\u8fc5\u6377','%')                   AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 1000", "analyze": ["-> Limit: 1000 row(s)  (actual time=93.534..93.535 rows=1 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 1000 row(s) per chunk  (actual time=93.533..93.533 rows=1 loops=1)\n        -> Table scan on <temporary>  (cost=0.03..4.49 rows=160) (actual time=0.008..0.009 rows=1 loops=1)\n            -> Temporary table with deduplication  (cost=3654.19..3658.65 rows=160) (actual time=93.494..93.494 rows=1 loops=1)\n                -> Nested loop inner join  (cost=3638.17 rows=160) (actual time=9.840..93.407 rows=1 loops=1)\n                    -> Nested loop inner join  (cost=3581.90 rows=91) (actual time=9.805..93.368 rows=1 loops=1)\n                        -> Nested loop left join  (cost=3464.57 rows=335) (actual time=0.189..93.105 rows=15 loops=1)\n                            -> Nested loop left join  (cost=3347.41 rows=335) (actual time=0.178..93.053 rows=15 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.PRO_NAME like <cache>(concat('%','\u8fc5\u6377','%'))) and (a.SPU_ID is not null))  (cost=3230.25 rows=335) (actual time=0.153..92.898 rows=15 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.075..82.789 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.009..0.010 rows=1 loops=15)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.008..0.008 rows=1 loops=15)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.003..0.003 rows=1 loops=15)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.002..0.002 rows=1 loops=15)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '25310000000000000000') or (pro_spu_info_scope.DEPT_CODE = '35315320000000000000'))  (cost=0.25 rows=0) (actual time=0.017..0.017 rows=0 loops=15)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.014..0.016 rows=1 loops=15)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.034..0.037 rows=1 loops=1)\n"]}, {"sql": " SELECT a.QUOTED_PRICE_ID AS quotedPriceId, a.SUPPLIER_ID AS supplierId, a.SUPPLIER_CODE AS supplierCode, a.SUPPLIER_CH_NAME AS supplierChName, a.CREDIT_CODE AS creditCode, a.CONTRACT_ID AS contractId, a.CONTRACT_NAME AS contractName, a.PROTOCOL_CODE AS protocolCode, a.CREATE_DEPT_CODE AS createDeptCode, a.CREATE_DEPT_NAME AS createDeptName, a.SUPPLY_MATERIAL AS supplyMaterial, a.SPU_ID AS spuId, a.SPU_CODE AS spuCode, a.SKU_ID AS skuId, a.SKU_CODE AS skuCode, a.SKU_NAME AS skuName, a.ENABLE_PRICE_TIME AS enablePriceTime, a.SUPPLY_PRICE AS supplyPrice, a.INPUT_TAX AS inputTax, a.STATE AS state, a.QUOTED_PRICE_CODE AS quotedPriceCode, a.QUOTED_PRICE_APP AS quotedPriceApp, a.QUOTED_PRICE_DEPT_ID AS quotedPriceDeptId, a.QUOTED_PRICE_DEPT_NAME AS quotedPriceDeptName, a.CREATE_TIME AS createTime, a.CREATE_INFO AS createInfo, a.CREATE_BY AS createBy, a.EXAMINE_STATE AS examineState FROM pro_supplier_contract_quoted_sku a left join pro_supplier_contract b on b.CONTRACT_ID = a.CONTRACT_ID left join pro_supplier_contract_quoted c on c.QUOTED_PRICE_ID = a.QUOTED_PRICE_ID WHERE a.SUPPLIER_CH_NAME LIKE CONCAT('%','\u5409\u6797\u7701\u79fb\u8054\u901a\u8baf\u5668\u6750\u6709\u9650\u516c\u53f8','%')    and a.SKU_CODE LIKE CONCAT('%','43100003600200080000','%')", "analyze": ["-> Nested loop left join  (cost=6109.61 rows=27307) (actual time=11.363..11.363 rows=0 loops=1)\n    -> Nested loop left join  (cost=3315.54 rows=27307) (actual time=11.362..11.362 rows=0 loops=1)\n        -> Filter: ((a.SUPPLIER_CH_NAME like <cache>(concat('%','\u5409\u6797\u7701\u79fb\u8054\u901a\u8baf\u5668\u6750\u6709\u9650\u516c\u53f8','%'))) and (a.SKU_CODE like <cache>(concat('%','43100003600200080000','%'))))  (cost=570.30 rows=63) (actual time=11.362..11.362 rows=0 loops=1)\n            -> Table scan on a  (cost=570.30 rows=5133) (actual time=0.073..10.277 rows=5307 loops=1)\n        -> Filter: (b.CONTRACT_ID = a.CONTRACT_ID)  (cost=0.91 rows=431) (never executed)\n            -> Index range scan on b (re-planned for each iteration)  (cost=0.91 rows=431) (never executed)\n    -> Single-row index lookup on c using PRIMARY (QUOTED_PRICE_ID=a.QUOTED_PRICE_ID)  (cost=0.00 rows=1) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '27710000000000000000'  \t\t\tor DEPT_CODE = '37717790000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.INVENTORY_MANAGE IN  (  '0' ,  '1' )      and a.STATE = 1            AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (actual time=679.432..679.444 rows=10 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 10 row(s) per chunk  (actual time=679.431..679.442 rows=10 loops=1)\n        -> Table scan on <temporary>  (cost=0.10..2.85 rows=29) (actual time=0.007..2.758 rows=3731 loops=1)\n            -> Temporary table with deduplication  (cost=3306.66..3309.41 rows=29) (actual time=673.188..676.215 rows=3731 loops=1)\n                -> Nested loop inner join  (cost=3303.68 rows=29) (actual time=0.282..623.281 rows=3731 loops=1)\n                    -> Nested loop inner join  (cost=3293.55 rows=16) (actual time=0.245..582.673 rows=2020 loops=1)\n                        -> Nested loop left join  (cost=3272.43 rows=60) (actual time=0.186..377.686 rows=24600 loops=1)\n                            -> Nested loop left join  (cost=3251.34 rows=60) (actual time=0.174..248.327 rows=24600 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.STATE = 1) and (a.INVENTORY_MANAGE in ('0','1')) and (a.SPU_ID is not null))  (cost=3230.25 rows=60) (actual time=0.148..115.089 rows=24600 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.144..99.062 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '27710000000000000000') or (pro_spu_info_scope.DEPT_CODE = '37717790000000000000'))  (cost=0.25 rows=0) (actual time=0.008..0.008 rows=0 loops=24600)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=24600)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.013..0.019 rows=2 loops=2020)\n"]}, {"sql": " SELECT count( DISTINCT d.SKU_ID ) FROM pro_supplier_contract AS a INNER JOIN pro_supplier_contract_spu AS b ON a.CONTRACT_ID = b.CONTRACT_ID INNER JOIN pro_supplier_contract_sku AS c ON b.SPU_ID = c.SPU_ID INNER JOIN pro_spu_info_detail AS h ON b.SPU_ID = h.SPU_ID INNER JOIN pro_sku_info_detail AS d ON c.SKU_ID = d.SKU_ID INNER JOIN pro_supplier_contract_quoted e ON e.CONTRACT_ID = a.CONTRACT_ID and e.QUOTED_PRICE_ID = c.QUOTED_PRICE_ID WHERE a.STATE = 1   AND h.isSale = 1   AND b.STATE = 1   AND c.STATE = 1   AND e.DEL_STATE = 1   AND a.SUPPLIER_ID = 'd7c266ba9559416cb35eeeaf6f11dcc0'     and ( SUBSTRING(a.CREATE_DEPT_CODE,1, LENGTH('1000000000000000')) = '1000000000000000'  or SUBSTRING(a.CREATE_DEPT_CODE,1, LENGTH('2371000000000000')) = '2371000000000000'  or SUBSTRING(a.CREATE_DEPT_CODE,1, LENGTH('3371371000000000')) = '3371371000000000'  or a.CREATE_DEPT_CODE = '33713710100000000009' )   AND c.ENABLE_PRICE_TIME - 1669518462643 < 0   AND \t\t(  \ta.SUPPLY_MATERIAL LIKE CONCAT('%','1','%')\t\t)", "analyze": ["-> Aggregate: count(distinct d.SKU_ID)  (actual time=0.398..0.398 rows=1 loops=1)\n    -> Nested loop inner join  (cost=10255.89 rows=2602) (actual time=0.396..0.396 rows=0 loops=1)\n        -> Nested loop inner join  (cost=7429.84 rows=0) (actual time=0.395..0.395 rows=0 loops=1)\n            -> Nested loop inner join  (cost=7329.45 rows=10) (actual time=0.395..0.395 rows=0 loops=1)\n                -> Nested loop inner join  (cost=6325.51 rows=30) (actual time=0.395..0.395 rows=0 loops=1)\n                    -> Inner hash join (no condition)  (cost=3282.38 rows=301) (actual time=0.394..0.394 rows=0 loops=1)\n                        -> Filter: (h.isSale = 1)  (cost=3233.53 rows=3013) (never executed)\n                            -> Table scan on h  (cost=3233.53 rows=30130) (never executed)\n                        -> Hash\n                            -> Filter: ((a.STATE = 1) and (a.SUPPLIER_ID = 'd7c266ba9559416cb35eeeaf6f11dcc0') and ((substr(a.CREATE_DEPT_CODE,1,<cache>(length('1000000000000000'))) = '1000000000000000') or (substr(a.CREATE_DEPT_CODE,1,<cache>(length('2371000000000000'))) = '2371000000000000') or (substr(a.CREATE_DEPT_CODE,1,<cache>(length('3371371000000000'))) = '3371371000000000') or (a.CREATE_DEPT_CODE = '33713710100000000009')) and (a.SUPPLY_MATERIAL like <cache>(concat('%','1','%'))))  (cost=48.85 rows=1) (actual time=0.388..0.388 rows=0 loops=1)\n                                -> Table scan on a  (cost=48.85 rows=431) (actual time=0.066..0.334 rows=446 loops=1)\n                    -> Filter: ((b.STATE = 1) and (b.SPU_ID = h.SPU_ID) and (a.CONTRACT_ID = b.CONTRACT_ID))  (cost=1.00 rows=0) (never executed)\n                        -> Single-row index lookup on b using PRIMARY (CONTRACT_ID=a.CONTRACT_ID, SPU_ID=h.SPU_ID)  (cost=1.00 rows=1) (never executed)\n                -> Filter: ((c.STATE = 1) and ((c.ENABLE_PRICE_TIME - 1669518462643) < 0))  (cost=3.30 rows=0) (never executed)\n                    -> Index lookup on c using idx_spu_id (SPU_ID=h.SPU_ID), with index condition: (c.SPU_ID = b.SPU_ID)  (cost=3.30 rows=3) (never executed)\n            -> Filter: ((e.DEL_STATE = 1) and (e.CONTRACT_ID = a.CONTRACT_ID))  (cost=1.00 rows=0) (never executed)\n                -> Single-row index lookup on e using PRIMARY (QUOTED_PRICE_ID=c.QUOTED_PRICE_ID)  (cost=1.00 rows=1) (never executed)\n        -> Filter: (c.SKU_ID = d.SKU_ID)  (cost=150.35 rows=5236) (never executed)\n            -> Index range scan on d (re-planned for each iteration)  (cost=150.35 rows=52363) (never executed)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('898')) = '898' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=517.023..517.023 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=2.106..516.672 rows=196 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=2.102..515.683 rows=196 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.085..298.965 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.075..163.943 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.051..32.272 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.050..27.244 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('898'))) = '898'))  (cost=0.25 rows=1) (actual time=0.008..0.008 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.005..0.005 rows=0 loops=196)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.004..0.004 rows=0 loops=196)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('898')) = '898' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=530.065..530.065 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=1.969..529.650 rows=196 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=1.963..528.962 rows=196 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.094..303.500 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.083..166.595 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.064..31.875 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.063..26.840 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('898'))) = '898'))  (cost=0.25 rows=1) (actual time=0.008..0.008 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.003..0.003 rows=0 loops=196)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.003..0.003 rows=0 loops=196)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('951')) = '951' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=522.208..522.208 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=8.644..521.916 rows=201 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=8.633..521.287 rows=201 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.088..301.292 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.077..165.711 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.060..31.231 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.059..26.481 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('951'))) = '951'))  (cost=0.25 rows=1) (actual time=0.008..0.008 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.003..0.003 rows=0 loops=201)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=201)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('951')) = '951' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=526.730..526.731 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=8.366..526.408 rows=201 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=8.362..525.797 rows=201 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.092..303.607 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.084..167.294 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.069..34.320 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.068..29.392 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.005 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('951'))) = '951'))  (cost=0.25 rows=1) (actual time=0.008..0.008 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.003..0.003 rows=0 loops=201)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=201)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '22000000000000000000'  \t\t\tor DEPT_CODE = '32007590000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.INVENTORY_MANAGE IN  (  '0' ,  '1' )      and a.STATE = 1            AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (actual time=616.803..616.813 rows=10 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 10 row(s) per chunk  (actual time=616.802..616.811 rows=10 loops=1)\n        -> Table scan on <temporary>  (cost=0.10..2.85 rows=29) (actual time=0.006..1.480 rows=1890 loops=1)\n            -> Temporary table with deduplication  (cost=3306.66..3309.41 rows=29) (actual time=613.460..615.086 rows=1890 loops=1)\n                -> Nested loop inner join  (cost=3303.68 rows=29) (actual time=0.264..586.545 rows=1890 loops=1)\n                    -> Nested loop inner join  (cost=3293.55 rows=16) (actual time=0.234..564.181 rows=1418 loops=1)\n                        -> Nested loop left join  (cost=3272.43 rows=60) (actual time=0.108..364.820 rows=24600 loops=1)\n                            -> Nested loop left join  (cost=3251.34 rows=60) (actual time=0.099..239.756 rows=24600 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.STATE = 1) and (a.INVENTORY_MANAGE in ('0','1')) and (a.SPU_ID is not null))  (cost=3230.25 rows=60) (actual time=0.081..109.985 rows=24600 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.079..94.668 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '22000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '32007590000000000000'))  (cost=0.25 rows=0) (actual time=0.008..0.008 rows=0 loops=24600)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=24600)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.012..0.015 rows=1 loops=1418)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('791')) = '791' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=505.851..505.852 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=0.978..505.040 rows=664 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=0.965..503.640 rows=664 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.091..290.870 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.080..160.393 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.060..31.335 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.059..26.783 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('791'))) = '791'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.006 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.001..0.001 rows=0 loops=664)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('791')) = '791' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=501.963..501.963 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=0.932..501.198 rows=664 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=0.921..499.838 rows=664 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.081..290.543 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.073..159.093 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.058..30.215 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.057..25.627 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('791'))) = '791'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.005..0.006 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=664)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.001..0.001 rows=0 loops=664)\n"]}, {"sql": " SELECT SPEC_ID AS specId, SPU_ID AS spuId, VERSION AS version, ATTRIBUTE_NAME AS attributeName, ATTRIBUTE_VALUE AS attributeValue, SEQ AS seq, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_spec WHERE SPU_ID = '1f496d53cff34152b884add2c139ff3a'   and VERSION = 1 ORDER BY SEQ asc", "analyze": ["-> Sort: pro_spu_info_spec.SEQ  (cost=1.01 rows=1) (actual time=0.029..0.029 rows=0 loops=1)\n    -> Filter: (pro_spu_info_spec.VERSION = 1)  (actual time=0.021..0.021 rows=0 loops=1)\n        -> Index lookup on pro_spu_info_spec using SPU_ID (SPU_ID='1f496d53cff34152b884add2c139ff3a')  (actual time=0.021..0.021 rows=0 loops=1)\n"]}, {"sql": " SELECT SKU_ID AS skuId, VERSION AS version, SPU_ID AS spuId, SKU_CODE AS skuCode, SKU_NAME AS skuName, SKU_IMAGE AS skuImage, MOBILE_CODE AS mobileCode, SKU_ATTR AS skuAttr, PRICE AS price, PRO_PRICE AS proPrice, PRO_DISCOUNT AS proDiscount, PRO_PREFERENTIAL AS proPreferential, PRO_FEE AS proFee, DEPT_CODE AS deptCode, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, UPDATE_INFO AS updateInfo, UPDATE_TIME AS updateTime, UPDATE_BY AS updateBy, REMARK1 AS remark1, REMARK2 AS remark2, REMARK3 AS remark3, REMARK4 AS remark4, REMARK5 AS remark5, REMARK6 AS remark6, REMARK7 AS remark7, REMARK8 AS remark8 FROM pro_sku_info WHERE SPU_ID = '1f496d53cff34152b884add2c139ff3a'   and VERSION = 1 ORDER BY SKU_CODE asc", "analyze": ["-> Sort: pro_sku_info.SKU_CODE  (cost=5839.30 rows=56058) (actual time=108.833..108.833 rows=0 loops=1)\n    -> Filter: ((pro_sku_info.VERSION = 1) and (pro_sku_info.SPU_ID = '1f496d53cff34152b884add2c139ff3a'))  (cost=5839.30 rows=56058) (actual time=108.825..108.825 rows=0 loops=1)\n        -> Table scan on pro_sku_info  (cost=5839.30 rows=56058) (actual time=0.074..100.793 rows=56898 loops=1)\n"]}, {"sql": " DELETE FROM pro_spu_info_detail_spec WHERE SPU_ID= '1f496d53cff34152b884add2c139ff3a'", "analyze": ["<not executable by iterator executor>\n"]}, {"sql": " SELECT LOG_ID AS logId, SPU_ID AS spuId, VERSION AS version, OPERATION_NAME AS operationName, REMARK AS remark, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, UPDATE_DEPT_ID AS updateDeptId, UPDATE_DEPT_CODE AS updateDeptCode, UPDATE_DEPT_NAME AS updateDeptName, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_log WHERE SPU_ID = '1f496d53cff34152b884add2c139ff3a'   and VERSION = 1 LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (cost=1.01 rows=0) (actual time=0.020..0.020 rows=0 loops=1)\n    -> Filter: (pro_spu_info_log.VERSION = 1)  (cost=1.01 rows=0) (actual time=0.020..0.020 rows=0 loops=1)\n        -> Index lookup on pro_spu_info_log using SPU_ID (SPU_ID='1f496d53cff34152b884add2c139ff3a')  (cost=1.01 rows=1) (actual time=0.019..0.019 rows=0 loops=1)\n"]}, {"sql": " SELECT a.QUOTED_PRICE_ID AS quotedPriceId, a.SUPPLIER_ID AS supplierId, a.SUPPLIER_CODE AS supplierCode, a.SUPPLIER_CH_NAME AS supplierChName, a.CREDIT_CODE AS creditCode, a.CONTRACT_ID AS contractId, a.CONTRACT_NAME AS contractName, a.PROTOCOL_CODE AS protocolCode, a.CREATE_DEPT_CODE AS createDeptCode, a.CREATE_DEPT_NAME AS createDeptName, a.SUPPLY_MATERIAL AS supplyMaterial, a.SPU_ID AS spuId, a.SPU_CODE AS spuCode, a.SKU_ID AS skuId, a.SKU_CODE AS skuCode, a.SKU_NAME AS skuName, a.ENABLE_PRICE_TIME AS enablePriceTime, a.SUPPLY_PRICE AS supplyPrice, a.INPUT_TAX AS inputTax, a.STATE AS state, a.QUOTED_PRICE_CODE AS quotedPriceCode, a.QUOTED_PRICE_APP AS quotedPriceApp, a.QUOTED_PRICE_DEPT_ID AS quotedPriceDeptId, a.QUOTED_PRICE_DEPT_NAME AS quotedPriceDeptName, a.CREATE_TIME AS createTime, a.CREATE_INFO AS createInfo, a.CREATE_BY AS createBy, a.EXAMINE_STATE AS examineState FROM pro_supplier_contract_quoted_sku a left join pro_supplier_contract b on b.CONTRACT_ID = a.CONTRACT_ID left join pro_supplier_contract_quoted c on c.QUOTED_PRICE_ID = a.QUOTED_PRICE_ID WHERE a.SKU_CODE LIKE CONCAT('%','QT00008500200030000','%')", "analyze": ["-> Nested loop left join  (cost=50383.10 rows=245789) (actual time=11.471..11.471 rows=0 loops=1)\n    -> Nested loop left join  (cost=25233.91 rows=245789) (actual time=11.470..11.470 rows=0 loops=1)\n        -> Filter: (a.SKU_CODE like <cache>(concat('%','QT00008500200030000','%')))  (cost=570.30 rows=570) (actual time=11.470..11.470 rows=0 loops=1)\n            -> Table scan on a  (cost=570.30 rows=5133) (actual time=0.054..10.105 rows=5307 loops=1)\n        -> Filter: (b.CONTRACT_ID = a.CONTRACT_ID)  (cost=0.22 rows=431) (never executed)\n            -> Index range scan on b (re-planned for each iteration)  (cost=0.22 rows=431) (never executed)\n    -> Single-row index lookup on c using PRIMARY (QUOTED_PRICE_ID=a.QUOTED_PRICE_ID)  (cost=0.00 rows=1) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '25510000000000000000'  \t\t\tor DEPT_CODE = '35515610000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.INVENTORY_MANAGE IN  (  '0' ,  '1' )      and a.STATE = 1            AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (actual time=570.386..570.396 rows=10 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 10 row(s) per chunk  (actual time=570.386..570.394 rows=10 loops=1)\n        -> Table scan on <temporary>  (cost=0.10..2.85 rows=29) (actual time=0.007..0.509 rows=656 loops=1)\n            -> Temporary table with deduplication  (cost=3306.66..3309.41 rows=29) (actual time=569.218..569.767 rows=656 loops=1)\n                -> Nested loop inner join  (cost=3303.68 rows=29) (actual time=6.455..561.442 rows=656 loops=1)\n                    -> Nested loop inner join  (cost=3293.55 rows=16) (actual time=6.418..555.923 rows=116 loops=1)\n                        -> Nested loop left join  (cost=3272.43 rows=60) (actual time=0.119..362.287 rows=24600 loops=1)\n                            -> Nested loop left join  (cost=3251.34 rows=60) (actual time=0.107..237.577 rows=24600 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.STATE = 1) and (a.INVENTORY_MANAGE in ('0','1')) and (a.SPU_ID is not null))  (cost=3230.25 rows=60) (actual time=0.082..109.247 rows=24600 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.079..94.438 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '25510000000000000000') or (pro_spu_info_scope.DEPT_CODE = '35515610000000000000'))  (cost=0.25 rows=0) (actual time=0.008..0.008 rows=0 loops=24600)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=24600)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.017..0.046 rows=6 loops=116)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('551')) = '551' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=505.648..505.649 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=5.775..505.478 rows=121 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=5.771..505.219 rows=121 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.126..293.874 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.096..160.537 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.059..30.992 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.058..26.429 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('551'))) = '551'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.005..0.006 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=121)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.001..0.001 rows=0 loops=121)\n"]}, {"sql": " SELECT COUNT(distinct a.SPU_ID) FROM pro_spu_info AS a INNER JOIN pro_spu_info_scope AS e ON a.SPU_ID = e.SPU_ID LEFT JOIN pro_brand AS b ON a.BRAND_ID = b.BRAND_ID LEFT JOIN pro_product_class AS c ON a.CLASS_ID = c.CLASS_ID LEFT JOIN pro_attr_group AS d ON a.ATTR_GROUP_ID = d.pro_attr_group_id WHERE a.STATE = 4           \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  \t\tor SUBSTRING(e.DEPT_CODE,2, LENGTH('551')) = '551' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=503.240..503.240 rows=1 loops=1)\n    -> Nested loop left join  (cost=8322.56 rows=3252) (actual time=5.631..503.070 rows=121 loops=1)\n        -> Nested loop inner join  (cost=6893.03 rows=3252) (actual time=5.626..502.823 rows=121 loops=1)\n            -> Nested loop left join  (cost=5754.68 rows=3248) (actual time=0.075..291.376 rows=28217 loops=1)\n                -> Nested loop left join  (cost=4617.92 rows=3248) (actual time=0.068..159.989 rows=28217 loops=1)\n                    -> Filter: (a.STATE = 4)  (cost=3481.15 rows=3248) (actual time=0.055..30.320 rows=28217 loops=1)\n                        -> Table scan on a  (cost=3481.15 rows=32479) (actual time=0.054..25.907 rows=33194 loops=1)\n                    -> Filter: (a.BRAND_ID = b.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                        -> Single-row index lookup on b using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                -> Filter: (a.CLASS_ID = c.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n                    -> Single-row index lookup on c using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=28217)\n            -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (substr(e.DEPT_CODE,2,<cache>(length('551'))) = '551'))  (cost=0.25 rows=1) (actual time=0.007..0.007 rows=0 loops=28217)\n                -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.005..0.006 rows=1 loops=28217)\n        -> Filter: (a.ATTR_GROUP_ID = d.pro_attr_group_id)  (cost=0.34 rows=1) (actual time=0.002..0.002 rows=0 loops=121)\n            -> Single-row index lookup on d using PRIMARY (pro_attr_group_id=a.ATTR_GROUP_ID)  (cost=0.34 rows=1) (actual time=0.001..0.001 rows=0 loops=121)\n"]}, {"sql": " SELECT SPEC_ID AS specId, SPU_ID AS spuId, VERSION AS version, ATTRIBUTE_NAME AS attributeName, ATTRIBUTE_VALUE AS attributeValue, SEQ AS seq, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_detail_spec WHERE SPU_ID = '3474d1bb07634b2096847be19a6815b5'   and VERSION = 1 ORDER BY SEQ asc", "analyze": ["-> Sort: pro_spu_info_detail_spec.SEQ  (cost=4896.50 rows=47275) (actual time=44.577..44.577 rows=0 loops=1)\n    -> Filter: ((pro_spu_info_detail_spec.VERSION = 1) and (pro_spu_info_detail_spec.SPU_ID = '3474d1bb07634b2096847be19a6815b5'))  (cost=4896.50 rows=47275) (actual time=44.567..44.567 rows=0 loops=1)\n        -> Table scan on pro_spu_info_detail_spec  (cost=4896.50 rows=47275) (actual time=0.046..38.461 rows=46924 loops=1)\n"]}, {"sql": " SELECT LOG_ID AS logId, SPU_ID AS spuId, VERSION AS version, OPERATION_NAME AS operationName, REMARK AS remark, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, UPDATE_DEPT_ID AS updateDeptId, UPDATE_DEPT_CODE AS updateDeptCode, UPDATE_DEPT_NAME AS updateDeptName, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_log WHERE SPU_ID = '3474d1bb07634b2096847be19a6815b5' ORDER BY CREATE_TIME asc", "analyze": ["-> Sort: pro_spu_info_log.CREATE_TIME  (cost=1.10 rows=1) (actual time=0.040..0.040 rows=0 loops=1)\n    -> Index lookup on pro_spu_info_log using SPU_ID (SPU_ID='3474d1bb07634b2096847be19a6815b5')  (actual time=0.023..0.023 rows=0 loops=1)\n"]}, {"sql": " SELECT SPEC_ID AS specId, SPU_ID AS spuId, VERSION AS version, ATTRIBUTE_NAME AS attributeName, ATTRIBUTE_VALUE AS attributeValue, SEQ AS seq, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, REMARK1 AS remark1, REMARK2 AS remark2 FROM pro_spu_info_spec WHERE SPU_ID = '24e0ff04ad27488da700bd4dee7fa7b8'   and VERSION = 1 ORDER BY SEQ asc", "analyze": ["-> Sort: pro_spu_info_spec.SEQ  (cost=1.01 rows=1) (actual time=0.020..0.020 rows=0 loops=1)\n    -> Filter: (pro_spu_info_spec.VERSION = 1)  (actual time=0.016..0.016 rows=0 loops=1)\n        -> Index lookup on pro_spu_info_spec using SPU_ID (SPU_ID='24e0ff04ad27488da700bd4dee7fa7b8')  (actual time=0.016..0.016 rows=0 loops=1)\n"]}, {"sql": " SELECT SKU_ID AS skuId, VERSION AS version, SPU_ID AS spuId, SKU_CODE AS skuCode, SKU_NAME AS skuName, SKU_IMAGE AS skuImage, MOBILE_CODE AS mobileCode, SKU_ATTR AS skuAttr, PRICE AS price, PRO_PRICE AS proPrice, PRO_DISCOUNT AS proDiscount, PRO_PREFERENTIAL AS proPreferential, PRO_FEE AS proFee, DEPT_CODE AS deptCode, CREATE_INFO AS createInfo, CREATE_TIME AS createTime, CREATE_BY AS createBy, UPDATE_INFO AS updateInfo, UPDATE_TIME AS updateTime, UPDATE_BY AS updateBy, REMARK1 AS remark1, REMARK2 AS remark2, REMARK3 AS remark3, REMARK4 AS remark4, REMARK5 AS remark5, REMARK6 AS remark6, REMARK7 AS remark7, REMARK8 AS remark8 FROM pro_sku_info WHERE SPU_ID = '24e0ff04ad27488da700bd4dee7fa7b8'   and VERSION = 1 ORDER BY SKU_CODE asc", "analyze": ["-> Sort: pro_sku_info.SKU_CODE  (cost=5839.30 rows=56058) (actual time=108.461..108.461 rows=0 loops=1)\n    -> Filter: ((pro_sku_info.VERSION = 1) and (pro_sku_info.SPU_ID = '24e0ff04ad27488da700bd4dee7fa7b8'))  (cost=5839.30 rows=56058) (actual time=108.450..108.450 rows=0 loops=1)\n        -> Table scan on pro_sku_info  (cost=5839.30 rows=56058) (actual time=0.047..100.500 rows=56898 loops=1)\n"]}, {"sql": " DELETE FROM pro_spu_info_detail_log WHERE SPU_ID= '24e0ff04ad27488da700bd4dee7fa7b8'", "analyze": ["<not executable by iterator executor>\n"]}, {"sql": " SELECT a.QUOTED_PRICE_ID AS quotedPriceId, a.SUPPLIER_ID AS supplierId, a.SUPPLIER_CODE AS supplierCode, a.SUPPLIER_CH_NAME AS supplierChName, a.CREDIT_CODE AS creditCode, a.CONTRACT_ID AS contractId, a.CONTRACT_NAME AS contractName, a.PROTOCOL_CODE AS protocolCode, a.CREATE_DEPT_CODE AS createDeptCode, a.CREATE_DEPT_NAME AS createDeptName, a.SUPPLY_MATERIAL AS supplyMaterial, a.SPU_ID AS spuId, a.SPU_CODE AS spuCode, a.SKU_ID AS skuId, a.SKU_CODE AS skuCode, a.SKU_NAME AS skuName, a.ENABLE_PRICE_TIME AS enablePriceTime, a.SUPPLY_PRICE AS supplyPrice, a.INPUT_TAX AS inputTax, a.STATE AS state, a.QUOTED_PRICE_CODE AS quotedPriceCode, a.QUOTED_PRICE_APP AS quotedPriceApp, a.QUOTED_PRICE_DEPT_ID AS quotedPriceDeptId, a.QUOTED_PRICE_DEPT_NAME AS quotedPriceDeptName, a.CREATE_TIME AS createTime, a.CREATE_INFO AS createInfo, a.CREATE_BY AS createBy, a.EXAMINE_STATE AS examineState FROM pro_supplier_contract_quoted_sku a left join pro_supplier_contract b on b.CONTRACT_ID = a.CONTRACT_ID left join pro_supplier_contract_quoted c on c.QUOTED_PRICE_ID = a.QUOTED_PRICE_ID WHERE a.SUPPLIER_CH_NAME LIKE CONCAT('%','\u5408\u80a5\u5e9a\u987a\u7535\u5b50\u79d1\u6280\u6709\u9650\u516c\u53f8','%')    and a.SKU_CODE LIKE CONCAT('%','55100007700201610000','%')", "analyze": ["-> Nested loop left join  (cost=6109.61 rows=27307) (actual time=11.220..11.220 rows=0 loops=1)\n    -> Nested loop left join  (cost=3315.54 rows=27307) (actual time=11.220..11.220 rows=0 loops=1)\n        -> Filter: ((a.SUPPLIER_CH_NAME like <cache>(concat('%','\u5408\u80a5\u5e9a\u987a\u7535\u5b50\u79d1\u6280\u6709\u9650\u516c\u53f8','%'))) and (a.SKU_CODE like <cache>(concat('%','55100007700201610000','%'))))  (cost=570.30 rows=63) (actual time=11.219..11.219 rows=0 loops=1)\n            -> Table scan on a  (cost=570.30 rows=5133) (actual time=0.078..10.142 rows=5307 loops=1)\n        -> Filter: (b.CONTRACT_ID = a.CONTRACT_ID)  (cost=0.91 rows=431) (never executed)\n            -> Index range scan on b (re-planned for each iteration)  (cost=0.91 rows=431) (never executed)\n    -> Single-row index lookup on c using PRIMARY (QUOTED_PRICE_ID=a.QUOTED_PRICE_ID)  (cost=0.00 rows=1) (never executed)\n"]}, {"sql": " SELECT DISTINCT b.SKU_ID AS skuId, a.SPU_ID AS spuId, a.VERSION AS version, a.SPU_CODE AS spuCode, a.CLASS_ID AS classId, a.PRO_NAME AS proName, a.GOODS_NAME AS goodsName, a.PRO_UNIT AS proUnit, a.PRO_TYPE AS proType, a.BRAND_ID AS brandId, a.PRO_IMAGE AS proImage, a.PRO_DESCRIBE AS proDescribe, a.ATTR_GROUP_ID AS attrGroupId, a.INVENTORY_TYPE AS inventoryType, a.INVENTORY_MANAGE AS inventoryManage, a.BAR_CODE AS barCode, a.SERIAL_NUMBER_LENGTH AS serialNumberLength, a.SKU_COUNT AS skuCount, a.PRO_LEVEL AS proLevel, a.MOBILE AS mobile, a.TIE_TONG AS tieTong, a.INTRODUCE AS introduce, a.STATE AS state, a.CREATE_INFO AS createInfo, a.CREATE_TIME AS createTime, a.CREATE_BY AS createBy, a.UPDATE_INFO AS updateInfo, a.UPDATE_TIME AS updateTime, a.UPDATE_BY AS updateBy, a.UPDATE_DEPT_ID AS updateDeptId, a.UPDATE_DEPT_CODE AS updateDeptCode, a.UPDATE_DEPT_NAME AS updateDeptName, a.REMARK1 AS remark1, a.REMARK2 AS remark2, a.REMARK3 AS remark3, a.REMARK4 AS remark4, a.REMARK5 AS remark5, a.REMARK6 AS remark6, a.REMARK7 AS remark7, a.REMARK8 AS remark8, a.REMARK9 AS remark9, a.REMARK10 AS remark10, a.CODIFICATION AS codification, b.SKU_CODE AS skuCode, b.SKU_NAME AS skuName, b.SKU_IMAGE AS skuImage, b.SKU_ATTR AS skuAttr, c.BRAND_CH_NAME AS brandName, d.CLASS_NAME AS className, d.CLASS_LEVEL_ID AS classLevelId, d.CLASS_LEVEL_NAME AS classLevelName FROM pro_sku_info_detail AS b LEFT JOIN pro_spu_info_detail AS a ON a.SPU_ID = b.SPU_ID LEFT JOIN pro_brand AS c ON a.BRAND_ID = c.BRAND_ID LEFT JOIN pro_product_class AS d ON a.CLASS_ID = d.CLASS_ID INNER JOIN (\t SELECT * FROM pro_spu_info_scope  WHERE \t\t\t\t( \t\t\t\t\tDEPT_CODE = '10000000000000000000'  \t\t\tor DEPT_CODE = '27910000000000000000'  \t\t\tor DEPT_CODE = '37917950000000000000' \t \t\t) ) AS e ON a.SPU_ID = e.SPU_ID WHERE a.INVENTORY_MANAGE IN  (  '0' ,  '1' )      and a.STATE = 1            AND a.isSale = 1 ORDER BY a.CREATE_TIME desc,b.SKU_CODE asc LIMIT 0, 10", "analyze": ["-> Limit: 10 row(s)  (actual time=582.653..582.663 rows=10 loops=1)\n    -> Sort: a.CREATE_TIME DESC, b.SKU_CODE, limit input to 10 row(s) per chunk  (actual time=582.652..582.661 rows=10 loops=1)\n        -> Table scan on <temporary>  (cost=0.10..2.85 rows=29) (actual time=0.006..0.623 rows=807 loops=1)\n            -> Temporary table with deduplication  (cost=3306.66..3309.41 rows=29) (actual time=581.222..581.897 rows=807 loops=1)\n                -> Nested loop inner join  (cost=3303.68 rows=29) (actual time=1.137..569.557 rows=807 loops=1)\n                    -> Nested loop inner join  (cost=3293.55 rows=16) (actual time=1.102..560.084 rows=516 loops=1)\n                        -> Nested loop left join  (cost=3272.43 rows=60) (actual time=0.107..363.846 rows=24600 loops=1)\n                            -> Nested loop left join  (cost=3251.34 rows=60) (actual time=0.096..238.496 rows=24600 loops=1)\n                                -> Filter: ((a.isSale = 1) and (a.STATE = 1) and (a.INVENTORY_MANAGE in ('0','1')) and (a.SPU_ID is not null))  (cost=3230.25 rows=60) (actual time=0.071..110.755 rows=24600 loops=1)\n                                    -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.069..96.192 rows=30680 loops=1)\n                                -> Filter: (a.BRAND_ID = c.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                    -> Single-row index lookup on c using PRIMARY (BRAND_ID=a.BRAND_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                            -> Filter: (a.CLASS_ID = d.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.005..0.005 rows=1 loops=24600)\n                                -> Single-row index lookup on d using PRIMARY (CLASS_ID=a.CLASS_ID)  (cost=0.25 rows=1) (actual time=0.004..0.004 rows=1 loops=24600)\n                        -> Filter: ((pro_spu_info_scope.DEPT_CODE = '10000000000000000000') or (pro_spu_info_scope.DEPT_CODE = '27910000000000000000') or (pro_spu_info_scope.DEPT_CODE = '37917950000000000000'))  (cost=0.25 rows=0) (actual time=0.008..0.008 rows=0 loops=24600)\n                            -> Index lookup on pro_spu_info_scope using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.006..0.007 rows=1 loops=24600)\n                    -> Index lookup on b using idx_spu_id (SPU_ID=a.SPU_ID), with index condition: (a.SPU_ID = b.SPU_ID)  (cost=0.45 rows=2) (actual time=0.012..0.017 rows=2 loops=516)\n"]}, {"sql": " DELETE FROM pro_spu_info_detail_log WHERE SPU_ID= 'fb007db5580646b9aed1412f3097d99a'", "analyze": ["<not executable by iterator executor>\n"]}, {"sql": " SELECT \tCOUNT(distinct a.SPU_ID) FROM  pro_spu_info_detail AS a INNER JOIN pro_spu_info_detail_scope AS e ON a.SPU_ID = e.SPU_ID WHERE STATE = 1                              \tand \t\t( \t\t\te.DEPT_CODE = '10000000000000000000'  or e.DEPT_CODE = '27910000000000000000'  or e.DEPT_CODE = '37917950000000000000' \t )", "analyze": ["-> Aggregate: count(distinct a.SPU_ID)  (actual time=292.003..292.003 rows=1 loops=1)\n    -> Nested loop inner join  (cost=4299.74 rows=828) (actual time=0.687..291.278 rows=542 loops=1)\n        -> Filter: (a.STATE = 1)  (cost=3230.25 rows=3013) (actual time=0.047..30.068 rows=28175 loops=1)\n            -> Table scan on a  (cost=3230.25 rows=30130) (actual time=0.046..24.779 rows=30680 loops=1)\n        -> Filter: ((e.DEPT_CODE = '10000000000000000000') or (e.DEPT_CODE = '27910000000000000000') or (e.DEPT_CODE = '37917950000000000000'))  (cost=0.25 rows=0) (actual time=0.009..0.009 rows=0 loops=28175)\n            -> Index lookup on e using idx_spu_id (SPU_ID=a.SPU_ID)  (cost=0.25 rows=1) (actual time=0.007..0.008 rows=1 loops=28175)\n"]}]