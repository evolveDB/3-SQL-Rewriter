[{"sql": " SELECT b.coupon_name as couponName, b.coupon_id as couponId, b.type as type, b.use_type as useType, b.exclusive_coupon_type as exclusiveCouponType, b.exclusive_activity_type as exclusiveActivityType, b.min_point as minPoint, b.amount as amount, b.instructions as instructions, b.instructions_fixed as instructionsFixed, b.member_discount as memberDiscount, a.valid_date_start as validDateStart, a.valid_date_end as validDateEnd, a.coupon_code as couponCode, a.user_id as userId, a.coupon_detail_id as couponDetailId, a.user_name as userName, a.user_phone as userPhone, a.platform_type as platformType, a.receive_type as receiveType, a.receive_time as receiveTime, a.use_state as useState, a.use_time as useTime, a.recipients_shop_id as recipientsShopId, a.recipients_shop as recipientsShop, a.activity_id as activityId FROM coupon_user_detail as a,coupon as b ,activity_range AS c WHERE a.coupon_id=b.coupon_id AND b.activity_id = c.activity_id and a.user_id = '72191ea40af74db8bb24152412305119'   and '2022-11-26 12:07:54' BETWEEN valid_date_start AND valid_date_end    GROUP BY a.coupon_detail_id", "analyze": ["-> Table scan on <temporary>  (cost=2.50..2.50 rows=0) (actual time=0.002..0.002 rows=0 loops=1)\n    -> Temporary table with deduplication  (cost=13.18..13.18 rows=0) (actual time=0.152..0.152 rows=0 loops=1)\n        -> Nested loop inner join  (cost=10.65 rows=0) (actual time=0.108..0.108 rows=0 loops=1)\n            -> Nested loop inner join  (cost=10.52 rows=0) (actual time=0.107..0.107 rows=0 loops=1)\n                -> Filter: ((a.user_id = '72191ea40af74db8bb24152412305119') and ('2022-11-26 12:07:54' between a.valid_date_start and a.valid_date_end))  (cost=10.42 rows=0) (actual time=0.106..0.106 rows=0 loops=1)\n                    -> Index range scan on a using valid_date_end  (cost=10.42 rows=8) (actual time=0.095..0.102 rows=8 loops=1)\n                -> Single-row index lookup on b using PRIMARY (coupon_id=a.coupon_id)  (cost=2.13 rows=1) (never executed)\n            -> Filter: (b.activity_id = c.activity_id)  (cost=4.84 rows=3) (never executed)\n                -> Index lookup on c using activity_id (activity_id=b.activity_id)  (cost=4.84 rows=3) (never executed)\n"]}]